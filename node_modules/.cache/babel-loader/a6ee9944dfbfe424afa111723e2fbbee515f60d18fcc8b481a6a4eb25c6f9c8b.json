{"ast":null,"code":"import { AnimationClassNames } from '../../Styling';\nexport var getStyles = function (props) {\n  var className = props.className,\n    _a = props.beakWidth,\n    beakWidth = _a === void 0 ? 16 : _a,\n    _b = props.gapSpace,\n    gapSpace = _b === void 0 ? 0 : _b,\n    maxWidth = props.maxWidth,\n    theme = props.theme;\n  var semanticColors = theme.semanticColors,\n    fonts = theme.fonts,\n    effects = theme.effects;\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  var tooltipGapSpace = -(Math.sqrt(beakWidth * beakWidth / 2) + gapSpace) + 1 / window.devicePixelRatio;\n  return {\n    root: ['ms-Tooltip', theme.fonts.medium, AnimationClassNames.fadeIn200, {\n      background: semanticColors.menuBackground,\n      boxShadow: effects.elevation8,\n      padding: '8px',\n      maxWidth: maxWidth,\n      selectors: {\n        ':after': {\n          content: \"''\",\n          position: 'absolute',\n          bottom: tooltipGapSpace,\n          left: tooltipGapSpace,\n          right: tooltipGapSpace,\n          top: tooltipGapSpace,\n          zIndex: 0\n        }\n      }\n    }, className],\n    content: ['ms-Tooltip-content', fonts.small, {\n      position: 'relative',\n      zIndex: 1,\n      color: semanticColors.menuItemText,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      overflow: 'hidden'\n    }],\n    subText: ['ms-Tooltip-subtext', {\n      // Using inherit here to avoid unintentional global overrides of the <p> tag.\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      color: 'inherit',\n      margin: 0\n    }]\n  };\n};","map":{"version":3,"names":["AnimationClassNames","getStyles","props","className","_a","beakWidth","_b","gapSpace","maxWidth","theme","semanticColors","fonts","effects","tooltipGapSpace","Math","sqrt","window","devicePixelRatio","root","medium","fadeIn200","background","menuBackground","boxShadow","elevation8","padding","selectors","content","position","bottom","left","right","top","zIndex","small","color","menuItemText","wordWrap","overflowWrap","overflow","subText","fontSize","fontWeight","margin"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Tooltip/Tooltip.styles.ts"],"sourcesContent":["import { AnimationClassNames } from '../../Styling';\nimport type { ITooltipStyleProps, ITooltipStyles } from './Tooltip.types';\n\nexport const getStyles = (props: ITooltipStyleProps): ITooltipStyles => {\n  const { className, beakWidth = 16, gapSpace = 0, maxWidth, theme } = props;\n  const { semanticColors, fonts, effects } = theme;\n\n  // The math here is done to account for the 45 degree rotation of the beak\n  // and sub-pixel rounding that differs across browsers, which is more noticeable when\n  // the device pixel ratio is larger\n  const tooltipGapSpace = -(Math.sqrt((beakWidth * beakWidth) / 2) + gapSpace) + 1 / window.devicePixelRatio;\n\n  return {\n    root: [\n      'ms-Tooltip',\n      theme.fonts.medium,\n      AnimationClassNames.fadeIn200,\n      {\n        background: semanticColors.menuBackground,\n        boxShadow: effects.elevation8,\n        padding: '8px',\n        maxWidth,\n        selectors: {\n          ':after': {\n            content: `''`,\n            position: 'absolute',\n            bottom: tooltipGapSpace,\n            left: tooltipGapSpace,\n            right: tooltipGapSpace,\n            top: tooltipGapSpace,\n            zIndex: 0,\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      'ms-Tooltip-content',\n      fonts.small,\n      {\n        position: 'relative',\n        zIndex: 1,\n        color: semanticColors.menuItemText,\n        wordWrap: 'break-word',\n        overflowWrap: 'break-word',\n        overflow: 'hidden',\n      },\n    ],\n    subText: [\n      'ms-Tooltip-subtext',\n      {\n        // Using inherit here to avoid unintentional global overrides of the <p> tag.\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        color: 'inherit',\n        margin: 0,\n      },\n    ],\n  };\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,eAAe;AAGnD,OAAO,IAAMC,SAAS,GAAG,SAAAA,CAACC,KAAyB;EACzC,IAAAC,SAAS,GAAoDD,KAAK,CAAAC,SAAzD;IAAEC,EAAA,GAAkDF,KAAK,CAAAG,SAAzC;IAAdA,SAAS,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;IAAEE,EAAA,GAAkCJ,KAAK,CAAAK,QAA3B;IAAZA,QAAQ,GAAAD,EAAA,cAAG,CAAC,GAAAA,EAAA;IAAEE,QAAQ,GAAYN,KAAK,CAAAM,QAAjB;IAAEC,KAAK,GAAKP,KAAK,CAAAO,KAAV;EACxD,IAAAC,cAAc,GAAqBD,KAAK,CAAAC,cAA1B;IAAEC,KAAK,GAAcF,KAAK,CAAAE,KAAnB;IAAEC,OAAO,GAAKH,KAAK,CAAAG,OAAV;EAEtC;EACA;EACA;EACA,IAAMC,eAAe,GAAG,EAAEC,IAAI,CAACC,IAAI,CAAEV,SAAS,GAAGA,SAAS,GAAI,CAAC,CAAC,GAAGE,QAAQ,CAAC,GAAG,CAAC,GAAGS,MAAM,CAACC,gBAAgB;EAE1G,OAAO;IACLC,IAAI,EAAE,CACJ,YAAY,EACZT,KAAK,CAACE,KAAK,CAACQ,MAAM,EAClBnB,mBAAmB,CAACoB,SAAS,EAC7B;MACEC,UAAU,EAAEX,cAAc,CAACY,cAAc;MACzCC,SAAS,EAAEX,OAAO,CAACY,UAAU;MAC7BC,OAAO,EAAE,KAAK;MACdjB,QAAQ,EAAAA,QAAA;MACRkB,SAAS,EAAE;QACT,QAAQ,EAAE;UACRC,OAAO,EAAE,IAAI;UACbC,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAEhB,eAAe;UACvBiB,IAAI,EAAEjB,eAAe;UACrBkB,KAAK,EAAElB,eAAe;UACtBmB,GAAG,EAAEnB,eAAe;UACpBoB,MAAM,EAAE;;;KAGb,EACD9B,SAAS,CACV;IACDwB,OAAO,EAAE,CACP,oBAAoB,EACpBhB,KAAK,CAACuB,KAAK,EACX;MACEN,QAAQ,EAAE,UAAU;MACpBK,MAAM,EAAE,CAAC;MACTE,KAAK,EAAEzB,cAAc,CAAC0B,YAAY;MAClCC,QAAQ,EAAE,YAAY;MACtBC,YAAY,EAAE,YAAY;MAC1BC,QAAQ,EAAE;KACX,CACF;IACDC,OAAO,EAAE,CACP,oBAAoB,EACpB;MACE;MACAC,QAAQ,EAAE,SAAS;MACnBC,UAAU,EAAE,SAAS;MACrBP,KAAK,EAAE,SAAS;MAChBQ,MAAM,EAAE;KACT;GAEJ;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}