{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getFirstVisibleElementFromSelector } from '../../Utilities';\nimport { mergeOverflows, ktpTargetFromSequences } from '../../utilities/keytips/KeytipUtils';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../ContextualMenu';\nimport { KeytipContent } from './KeytipContent';\nimport { getCalloutStyles, getCalloutOffsetStyles } from './Keytip.styles';\n/**\n * A callout corresponding to another Fabric component to describe a key sequence that will activate that component\n */\nvar Keytip = /** @class */function (_super) {\n  __extends(Keytip, _super);\n  function Keytip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Keytip.prototype.render = function () {\n    var _a = this.props,\n      keySequences = _a.keySequences,\n      offset = _a.offset,\n      overflowSetSequence = _a.overflowSetSequence;\n    var calloutProps = this.props.calloutProps;\n    var keytipTarget;\n    // Take into consideration the overflow sequence\n    if (overflowSetSequence) {\n      keytipTarget = ktpTargetFromSequences(mergeOverflows(keySequences, overflowSetSequence));\n    } else {\n      keytipTarget = ktpTargetFromSequences(keySequences);\n    }\n    var element = getFirstVisibleElementFromSelector(keytipTarget);\n    if (!element) {\n      return React.createElement(React.Fragment, null);\n    }\n    keytipTarget = element;\n    if (offset) {\n      // Set callout to top-left corner, will be further positioned in\n      // getCalloutOffsetStyles\n      calloutProps = __assign(__assign({}, calloutProps), {\n        coverTarget: true,\n        directionalHint: DirectionalHint.topLeftEdge\n      });\n    }\n    if (!calloutProps || calloutProps.directionalHint === undefined) {\n      // Default callout directional hint to BottomCenter\n      calloutProps = __assign(__assign({}, calloutProps), {\n        directionalHint: DirectionalHint.bottomCenter\n      });\n    }\n    return React.createElement(Callout, __assign({}, calloutProps, {\n      isBeakVisible: false,\n      doNotLayer: true,\n      minPagePadding: 0,\n      styles: offset ? getCalloutOffsetStyles(offset) : getCalloutStyles,\n      preventDismissOnScroll: true,\n      target: keytipTarget\n    }), React.createElement(KeytipContent, __assign({}, this.props)));\n  };\n  return Keytip;\n}(React.Component);\nexport { Keytip };","map":{"version":3,"names":["React","getFirstVisibleElementFromSelector","mergeOverflows","ktpTargetFromSequences","Callout","DirectionalHint","KeytipContent","getCalloutStyles","getCalloutOffsetStyles","Keytip","_super","__extends","prototype","render","_a","props","keySequences","offset","overflowSetSequence","calloutProps","keytipTarget","element","createElement","Fragment","__assign","coverTarget","directionalHint","topLeftEdge","undefined","bottomCenter","isBeakVisible","doNotLayer","minPagePadding","styles","preventDismissOnScroll","target","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Keytip/Keytip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getFirstVisibleElementFromSelector } from '../../Utilities';\nimport { mergeOverflows, ktpTargetFromSequences } from '../../utilities/keytips/KeytipUtils';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../ContextualMenu';\nimport { KeytipContent } from './KeytipContent';\nimport { getCalloutStyles, getCalloutOffsetStyles } from './Keytip.styles';\nimport type { IKeytipProps } from './Keytip.types';\nimport type { Target } from '@fluentui/react-hooks';\n\n/**\n * A callout corresponding to another Fabric component to describe a key sequence that will activate that component\n */\nexport class Keytip extends React.Component<IKeytipProps, {}> {\n  public render(): JSX.Element {\n    const { keySequences, offset, overflowSetSequence } = this.props;\n    let { calloutProps } = this.props;\n\n    let keytipTarget: Target;\n    // Take into consideration the overflow sequence\n    if (overflowSetSequence) {\n      keytipTarget = ktpTargetFromSequences(mergeOverflows(keySequences, overflowSetSequence));\n    } else {\n      keytipTarget = ktpTargetFromSequences(keySequences);\n    }\n\n    const element = getFirstVisibleElementFromSelector(keytipTarget);\n\n    if (!element) {\n      return <></>;\n    }\n\n    keytipTarget = element;\n\n    if (offset) {\n      // Set callout to top-left corner, will be further positioned in\n      // getCalloutOffsetStyles\n      calloutProps = {\n        ...calloutProps,\n        coverTarget: true,\n        directionalHint: DirectionalHint.topLeftEdge,\n      };\n    }\n\n    if (!calloutProps || calloutProps.directionalHint === undefined) {\n      // Default callout directional hint to BottomCenter\n      calloutProps = {\n        ...calloutProps,\n        directionalHint: DirectionalHint.bottomCenter,\n      };\n    }\n\n    return (\n      <Callout\n        {...calloutProps}\n        isBeakVisible={false}\n        doNotLayer={true}\n        minPagePadding={0}\n        styles={offset ? getCalloutOffsetStyles(offset) : getCalloutStyles}\n        preventDismissOnScroll={true}\n        target={keytipTarget}\n      >\n        <KeytipContent {...this.props} />\n      </Callout>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,kCAAkC,QAAQ,iBAAiB;AACpE,SAASC,cAAc,EAAEC,sBAAsB,QAAQ,qCAAqC;AAC5F,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,gBAAgB,EAAEC,sBAAsB,QAAQ,iBAAiB;AAI1E;;;AAGA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAA5B,SAAAD,OAAA;;EAqDA;EApDSA,MAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACQ,IAAAC,EAAA,GAAgD,IAAI,CAACC,KAAK;MAAxDC,YAAY,GAAAF,EAAA,CAAAE,YAAA;MAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAA;MAAEC,mBAAmB,GAAAJ,EAAA,CAAAI,mBAAe;IAC1D,IAAAC,YAAY,GAAK,IAAI,CAACJ,KAAK,CAAAI,YAAf;IAElB,IAAIC,YAAoB;IACxB;IACA,IAAIF,mBAAmB,EAAE;MACvBE,YAAY,GAAGjB,sBAAsB,CAACD,cAAc,CAACc,YAAY,EAAEE,mBAAmB,CAAC,CAAC;KACzF,MAAM;MACLE,YAAY,GAAGjB,sBAAsB,CAACa,YAAY,CAAC;;IAGrD,IAAMK,OAAO,GAAGpB,kCAAkC,CAACmB,YAAY,CAAC;IAEhE,IAAI,CAACC,OAAO,EAAE;MACZ,OAAOrB,KAAA,CAAAsB,aAAA,CAAAtB,KAAA,CAAAuB,QAAA,OAAK;;IAGdH,YAAY,GAAGC,OAAO;IAEtB,IAAIJ,MAAM,EAAE;MACV;MACA;MACAE,YAAY,GAAAK,QAAA,CAAAA,QAAA,KACPL,YAAY;QACfM,WAAW,EAAE,IAAI;QACjBC,eAAe,EAAErB,eAAe,CAACsB;MAAW,EAC7C;;IAGH,IAAI,CAACR,YAAY,IAAIA,YAAY,CAACO,eAAe,KAAKE,SAAS,EAAE;MAC/D;MACAT,YAAY,GAAAK,QAAA,CAAAA,QAAA,KACPL,YAAY;QACfO,eAAe,EAAErB,eAAe,CAACwB;MAAY,EAC9C;;IAGH,OACE7B,KAAA,CAAAsB,aAAA,CAAClB,OAAO,EAAAoB,QAAA,KACFL,YAAY;MAChBW,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE,CAAC;MACjBC,MAAM,EAAEhB,MAAM,GAAGT,sBAAsB,CAACS,MAAM,CAAC,GAAGV,gBAAgB;MAClE2B,sBAAsB,EAAE,IAAI;MAC5BC,MAAM,EAAEf;IAAY,IAEpBpB,KAAA,CAAAsB,aAAA,CAAChB,aAAa,EAAAkB,QAAA,KAAK,IAAI,CAACT,KAAK,EAAI,CACzB;EAEd,CAAC;EACH,OAAAN,MAAC;AAAD,CAAC,CArD2BT,KAAK,CAACoC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}