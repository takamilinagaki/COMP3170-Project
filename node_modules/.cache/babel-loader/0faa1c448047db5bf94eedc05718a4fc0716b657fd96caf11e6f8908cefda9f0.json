{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n  var className = props.className,\n    theme = props.theme,\n    selected = props.selected,\n    disabled = props.disabled;\n  var palette = theme.palette,\n    effects = theme.effects,\n    fonts = theme.fonts,\n    semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: palette.neutralLighter,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \".concat(!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected, {\n      background: palette.themePrimary,\n      color: palette.white\n    }], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, getFocusStyle(theme, {\n      borderColor: 'transparent',\n      inset: 1,\n      outlineColor: palette.white\n    }), {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? \"\".concat(effects.roundedCorner2, \" 0 0 \").concat(effects.roundedCorner2) : \"0 \".concat(effects.roundedCorner2, \" \").concat(effects.roundedCorner2, \" 0\"),\n      selectors: (_d = {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        }\n      }, _d[\".\".concat(classNames.isSelected, \" &, :focus\")] = {\n        color: palette.white,\n        background: palette.themePrimary\n      }, _d[':focus:hover'] = {\n        color: palette.white,\n        background: palette.themeDark\n      }, _d[':active'] = {\n        color: palette.white,\n        backgroundColor: palette.themeDark\n      }, _d)\n    }, disabled && {\n      selectors: (_e = {}, _e[\".\".concat(ButtonGlobalClassNames.msButtonIcon)] = {\n        color: palette.neutralSecondary\n      }, _e)\n    }]\n  };\n}","map":{"version":3,"names":["getGlobalClassNames","getFocusStyle","HighContrastSelector","ButtonGlobalClassNames","getRTL","GlobalClassNames","root","text","close","isSelected","TAG_HEIGHT","getStyles","props","className","theme","selected","disabled","palette","effects","fonts","semanticColors","classNames","medium","boxSizing","flexShrink","margin","height","lineHeight","cursor","userSelect","display","flexWrap","maxWidth","minWidth","borderRadius","roundedCorner2","color","inputText","background","neutralLighter","selectors","_a","neutralDark","neutralLight","neutralPrimary","border","concat","_b","borderColor","themePrimary","white","overflow","textOverflow","whiteSpace","_c","inset","outlineColor","neutralSecondary","width","flex","_d","neutralQuaternaryAlt","themeDark","backgroundColor","_e","msButtonIcon"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/pickers/src/components/pickers/TagPicker/TagItem.styles.ts"],"sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nimport type { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: palette.neutralLighter,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected &&\n        !disabled && [\n          classNames.isSelected,\n          {\n            background: palette.themePrimary,\n            color: palette.white,\n          },\n        ],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      getFocusStyle(theme, { borderColor: 'transparent', inset: 1, outlineColor: palette.white }),\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          [`.${classNames.isSelected} &, :focus`]: {\n            color: palette.white,\n            background: palette.themePrimary,\n          },\n          ':focus:hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}