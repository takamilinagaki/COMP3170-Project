{"ast":null,"code":"import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child, allowVirtualParents) {\n  if (allowVirtualParents === void 0) {\n    allowVirtualParents = true;\n  }\n  return child && (allowVirtualParents && getVirtualParent(child) || child.parentNode && child.parentNode);\n}","map":{"version":3,"names":["getVirtualParent","getParent","child","allowVirtualParents","parentNode"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/dom-utilities/src/getParent.ts"],"sourcesContent":["import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child: HTMLElement, allowVirtualParents: boolean = true): HTMLElement | null {\n  return (\n    child &&\n    ((allowVirtualParents && getVirtualParent(child)) || (child.parentNode && (child.parentNode as HTMLElement)))\n  );\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD;;;;;;;AAOA,OAAM,SAAUC,SAASA,CAACC,KAAkB,EAAEC,mBAAmC;EAAnC,IAAAA,mBAAA;IAAAA,mBAAA,OAAmC;EAAA;EAC/E,OACED,KAAK,KACHC,mBAAmB,IAAIH,gBAAgB,CAACE,KAAK,CAAC,IAAMA,KAAK,CAACE,UAAU,IAAKF,KAAK,CAACE,UAA2B,CAAC;AAEjH"},"metadata":{},"sourceType":"module","externalDependencies":[]}