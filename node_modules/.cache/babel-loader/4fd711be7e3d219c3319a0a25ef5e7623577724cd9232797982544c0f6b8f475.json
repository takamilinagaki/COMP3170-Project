{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { ActionButton } from '../../Button';\nimport { buttonStyles } from './Nav.styles';\nimport { classNamesFunction, divProperties, getNativeProps, getWindow, initializeComponentRef } from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { composeComponentAs, composeRenderFunction } from '@fluentui/utilities';\n// The number pixels per indentation level for Nav links.\nvar _indentationSize = 14;\n// The number of pixels of left margin\nvar _baseIndent = 3;\n// global var used in _isLinkSelectedKey\nvar _urlResolver;\nexport function isRelativeUrl(url) {\n  // A URL is relative if it has no protocol.\n  return !!url && !/^[a-z0-9+-.]+:\\/\\//i.test(url);\n}\nvar getClassNames = classNamesFunction();\nvar NavBase = /** @class */function (_super) {\n  __extends(NavBase, _super);\n  function NavBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._focusZone = React.createRef();\n    _this._onRenderLink = function (link) {\n      var _a = _this.props,\n        styles = _a.styles,\n        groups = _a.groups,\n        theme = _a.theme;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        groups: groups\n      });\n      return React.createElement(\"div\", {\n        className: classNames.linkText\n      }, link.name);\n    };\n    _this._renderGroup = function (group, groupIndex) {\n      var _a = _this.props,\n        styles = _a.styles,\n        groups = _a.groups,\n        theme = _a.theme,\n        _b = _a.onRenderGroupHeader,\n        onRenderGroupHeader = _b === void 0 ? _this._renderGroupHeader : _b;\n      var isExpanded = _this._isGroupExpanded(group);\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        isGroup: true,\n        isExpanded: isExpanded,\n        groups: groups\n      });\n      var finalOnHeaderClick = function (ev, isCollapsing) {\n        _this._onGroupHeaderClicked(group, ev);\n      };\n      var groupProps = __assign(__assign({}, group), {\n        isExpanded: isExpanded,\n        onHeaderClick: finalOnHeaderClick\n      });\n      return React.createElement(\"div\", {\n        key: groupIndex,\n        className: classNames.group\n      }, groupProps.name ? onRenderGroupHeader(groupProps, _this._renderGroupHeader) : null, React.createElement(\"div\", {\n        className: classNames.groupContent\n      }, _this._renderLinks(groupProps.links, 0 /* nestingLevel */)));\n    };\n\n    _this._renderGroupHeader = function (group) {\n      var _a;\n      // eslint-disable-next-line deprecation/deprecation\n      var _b = _this.props,\n        styles = _b.styles,\n        groups = _b.groups,\n        theme = _b.theme,\n        expandButtonAriaLabel = _b.expandButtonAriaLabel;\n      var isExpanded = group.isExpanded;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        isGroup: true,\n        isExpanded: isExpanded,\n        groups: groups\n      });\n      // respect deprecated collapseAriaLabel, but default to expandAriaLabel for both states\n      // eslint-disable-next-line deprecation/deprecation\n      var collapseAriaLabel = (_a = group.collapseAriaLabel) !== null && _a !== void 0 ? _a : group.expandAriaLabel;\n      var label = (isExpanded ? collapseAriaLabel : group.expandAriaLabel) || expandButtonAriaLabel;\n      var onHeaderClick = group.onHeaderClick;\n      var onClick = onHeaderClick ? function (ev) {\n        onHeaderClick(ev, isExpanded);\n      } : undefined;\n      return React.createElement(\"button\", {\n        className: classNames.chevronButton,\n        onClick: onClick,\n        \"aria-label\": label,\n        \"aria-expanded\": isExpanded\n      }, React.createElement(Icon, {\n        className: classNames.chevronIcon,\n        iconName: \"ChevronDown\"\n      }), group.name);\n    };\n    initializeComponentRef(_this);\n    _this.state = {\n      isGroupCollapsed: {},\n      isLinkExpandStateChanged: false,\n      selectedKey: props.initialSelectedKey || props.selectedKey\n    };\n    return _this;\n  }\n  NavBase.prototype.render = function () {\n    var _a = this.props,\n      styles = _a.styles,\n      groups = _a.groups,\n      className = _a.className,\n      isOnTop = _a.isOnTop,\n      _b = _a.role,\n      role = _b === void 0 ? 'navigation' : _b,\n      theme = _a.theme;\n    if (!groups) {\n      return null;\n    }\n    var groupElements = groups.map(this._renderGroup);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isOnTop: isOnTop,\n      groups: groups\n    });\n    return React.createElement(FocusZone, __assign({\n      direction: FocusZoneDirection.vertical,\n      componentRef: this._focusZone\n    }, this.props.focusZoneProps), React.createElement(\"nav\", {\n      role: role,\n      className: classNames.root,\n      \"aria-label\": this.props.ariaLabel\n    }, groupElements));\n  };\n  Object.defineProperty(NavBase.prototype, \"selectedKey\", {\n    get: function () {\n      return this.state.selectedKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  NavBase.prototype.focus = function (forceIntoFirstElement) {\n    if (forceIntoFirstElement === void 0) {\n      forceIntoFirstElement = false;\n    }\n    if (this._focusZone && this._focusZone.current) {\n      return this._focusZone.current.focus(forceIntoFirstElement);\n    }\n    return false;\n  };\n  NavBase.prototype._renderNavLink = function (link, linkIndex, nestingLevel) {\n    var _a = this.props,\n      styles = _a.styles,\n      groups = _a.groups,\n      theme = _a.theme;\n    var isLinkWithIcon = link.icon || link.iconProps;\n    var isSelectedLink = this._isLinkSelected(link);\n    var _b = link.ariaCurrent,\n      ariaCurrent = _b === void 0 ? 'page' : _b;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      isSelected: isSelectedLink,\n      isDisabled: link.disabled,\n      isButtonEntry: link.onClick && !link.forceAnchor,\n      leftPadding: _indentationSize * nestingLevel + _baseIndent + (isLinkWithIcon ? 0 : 24),\n      groups: groups\n    });\n    // Prevent hijacking of the parent window if link.target is defined\n    var rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\n    var LinkAs = this.props.linkAs ? composeComponentAs(this.props.linkAs, ActionButton) : ActionButton;\n    var onRenderLink = this.props.onRenderLink ? composeRenderFunction(this.props.onRenderLink, this._onRenderLink) : this._onRenderLink;\n    return React.createElement(LinkAs, {\n      className: classNames.link,\n      styles: buttonStyles,\n      href: link.url || (link.forceAnchor ? '#' : undefined),\n      iconProps: link.iconProps || {\n        iconName: link.icon\n      },\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link),\n      title: link.title !== undefined ? link.title : link.name,\n      target: link.target,\n      rel: rel,\n      disabled: link.disabled,\n      \"aria-current\": isSelectedLink ? ariaCurrent : undefined,\n      \"aria-label\": link.ariaLabel ? link.ariaLabel : undefined,\n      link: link\n    }, onRenderLink(link));\n  };\n  NavBase.prototype._renderCompositeLink = function (link, linkIndex, nestingLevel) {\n    var _a;\n    var divProps = __assign({}, getNativeProps(link, divProperties, ['onClick']));\n    // eslint-disable-next-line deprecation/deprecation\n    var _b = this.props,\n      expandButtonAriaLabel = _b.expandButtonAriaLabel,\n      styles = _b.styles,\n      groups = _b.groups,\n      theme = _b.theme;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      isExpanded: !!link.isExpanded,\n      isSelected: this._isLinkSelected(link),\n      isLink: true,\n      isDisabled: link.disabled,\n      position: _indentationSize * nestingLevel + 1,\n      groups: groups\n    });\n    var finalExpandBtnAriaLabel = '';\n    if (link.links && link.links.length > 0) {\n      if (link.collapseAriaLabel || link.expandAriaLabel) {\n        // still respect link.collapseAriaLabel, even though it's deprecated in favor of expandAriaLabel\n        var collapseAriaLabel = (_a = link.collapseAriaLabel) !== null && _a !== void 0 ? _a : link.expandAriaLabel;\n        finalExpandBtnAriaLabel = link.isExpanded ? collapseAriaLabel : link.expandAriaLabel;\n      } else {\n        // TODO remove when `expandButtonAriaLabel` is removed. This is not an ideal concatenation for localization.\n        finalExpandBtnAriaLabel = expandButtonAriaLabel ? \"\".concat(link.name, \" \").concat(expandButtonAriaLabel) : link.name;\n      }\n    }\n    return React.createElement(\"div\", __assign({}, divProps, {\n      key: link.key || linkIndex,\n      className: classNames.compositeLink\n    }), link.links && link.links.length > 0 ? React.createElement(\"button\", {\n      className: classNames.chevronButton,\n      onClick: this._onLinkExpandClicked.bind(this, link),\n      \"aria-label\": finalExpandBtnAriaLabel,\n      \"aria-expanded\": link.isExpanded ? 'true' : 'false'\n    }, React.createElement(Icon, {\n      className: classNames.chevronIcon,\n      iconName: \"ChevronDown\"\n    })) : null, this._renderNavLink(link, linkIndex, nestingLevel));\n  };\n  NavBase.prototype._renderLink = function (link, linkIndex, nestingLevel) {\n    var _a = this.props,\n      styles = _a.styles,\n      groups = _a.groups,\n      theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      groups: groups\n    });\n    return React.createElement(\"li\", {\n      key: link.key || linkIndex,\n      role: \"listitem\",\n      className: classNames.navItem\n    }, this._renderCompositeLink(link, linkIndex, nestingLevel), link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null);\n  };\n  NavBase.prototype._renderLinks = function (links, nestingLevel) {\n    var _this = this;\n    if (!links || !links.length) {\n      return null;\n    }\n    var linkElements = links.map(function (link, linkIndex) {\n      return _this._renderLink(link, linkIndex, nestingLevel);\n    });\n    var _a = this.props,\n      styles = _a.styles,\n      groups = _a.groups,\n      theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      groups: groups\n    });\n    return React.createElement(\"ul\", {\n      role: \"list\",\n      className: classNames.navItems\n    }, linkElements);\n  };\n  NavBase.prototype._onGroupHeaderClicked = function (group, ev) {\n    if (group.onHeaderClick) {\n      group.onHeaderClick(ev, this._isGroupExpanded(group));\n    }\n    if (group.isExpanded === undefined) {\n      this._toggleCollapsed(group);\n    }\n    if (ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n  NavBase.prototype._onLinkExpandClicked = function (link, ev) {\n    var onLinkExpandClick = this.props.onLinkExpandClick;\n    if (onLinkExpandClick) {\n      onLinkExpandClick(ev, link);\n    }\n    if (!ev.defaultPrevented) {\n      link.isExpanded = !link.isExpanded;\n      this.setState({\n        isLinkExpandStateChanged: true\n      });\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n  NavBase.prototype._preventBounce = function (link, ev) {\n    if (!link.url && link.forceAnchor) {\n      ev.preventDefault();\n    }\n  };\n  NavBase.prototype._onNavAnchorLinkClicked = function (link, ev) {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n    if (this.props.onLinkClick) {\n      this.props.onLinkClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n    this.setState({\n      selectedKey: link.key\n    });\n  };\n  NavBase.prototype._onNavButtonLinkClicked = function (link, ev) {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n    if (link.onClick) {\n      link.onClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n    this.setState({\n      selectedKey: link.key\n    });\n  };\n  NavBase.prototype._isLinkSelected = function (link) {\n    // if caller passes in selectedKey, use it as first choice or\n    // if current state.selectedKey (from addressbar) is match to the link or\n    // check if URL is matching location.href (if link.url exists)\n    if (this.props.selectedKey !== undefined) {\n      return link.key === this.props.selectedKey;\n    } else if (this.state.selectedKey !== undefined) {\n      return link.key === this.state.selectedKey;\n    } else if (typeof getWindow() === 'undefined' || !link.url) {\n      // resolve is not supported for ssr\n      return false;\n    } else {\n      // If selectedKey is undefined in props and state, then check URL\n      _urlResolver = _urlResolver || document.createElement('a');\n      _urlResolver.href = link.url || '';\n      var target = _urlResolver.href;\n      if (location.href === target) {\n        return true;\n      }\n      // If selectedKey is not defined in state, then check URL to determine link selected status\n      if (location.protocol + '//' + location.host + location.pathname === target) {\n        return true;\n      }\n      if (location.hash) {\n        // Match the hash to the url.\n        if (location.hash === link.url) {\n          return true;\n        }\n        // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\n        _urlResolver.href = location.hash.substring(1);\n        return _urlResolver.href === target;\n      }\n    }\n    return false;\n  };\n  NavBase.prototype._isGroupExpanded = function (group) {\n    if (group.isExpanded !== undefined) {\n      return group.isExpanded;\n    }\n    if (group.name && this.state.isGroupCollapsed.hasOwnProperty(group.name)) {\n      return !this.state.isGroupCollapsed[group.name];\n    }\n    if (group.collapseByDefault !== undefined) {\n      return !group.collapseByDefault;\n    }\n    return true;\n  };\n  NavBase.prototype._toggleCollapsed = function (group) {\n    var _a;\n    if (group.name) {\n      var newGroupCollapsed = __assign(__assign({}, this.state.isGroupCollapsed), (_a = {}, _a[group.name] = this._isGroupExpanded(group), _a));\n      this.setState({\n        isGroupCollapsed: newGroupCollapsed\n      });\n    }\n  };\n  NavBase.defaultProps = {\n    groups: null\n  };\n  return NavBase;\n}(React.Component);\nexport { NavBase };","map":{"version":3,"names":["React","ActionButton","buttonStyles","classNamesFunction","divProperties","getNativeProps","getWindow","initializeComponentRef","FocusZone","FocusZoneDirection","Icon","composeComponentAs","composeRenderFunction","_indentationSize","_baseIndent","_urlResolver","isRelativeUrl","url","test","getClassNames","NavBase","_super","__extends","props","_this","call","_focusZone","createRef","_onRenderLink","link","_a","styles","groups","theme","classNames","createElement","className","linkText","name","_renderGroup","group","groupIndex","_b","onRenderGroupHeader","_renderGroupHeader","isExpanded","_isGroupExpanded","isGroup","finalOnHeaderClick","ev","isCollapsing","_onGroupHeaderClicked","groupProps","__assign","onHeaderClick","key","groupContent","_renderLinks","links","expandButtonAriaLabel","collapseAriaLabel","expandAriaLabel","label","onClick","undefined","chevronButton","chevronIcon","iconName","state","isGroupCollapsed","isLinkExpandStateChanged","selectedKey","initialSelectedKey","prototype","render","isOnTop","role","groupElements","map","direction","vertical","componentRef","focusZoneProps","root","ariaLabel","Object","defineProperty","get","focus","forceIntoFirstElement","current","_renderNavLink","linkIndex","nestingLevel","isLinkWithIcon","icon","iconProps","isSelectedLink","_isLinkSelected","ariaCurrent","isSelected","isDisabled","disabled","isButtonEntry","forceAnchor","leftPadding","rel","target","LinkAs","linkAs","onRenderLink","href","_onNavButtonLinkClicked","bind","_onNavAnchorLinkClicked","title","_renderCompositeLink","divProps","isLink","position","finalExpandBtnAriaLabel","length","concat","compositeLink","_onLinkExpandClicked","_renderLink","navItem","linkElements","navItems","_toggleCollapsed","preventDefault","stopPropagation","onLinkExpandClick","defaultPrevented","setState","_preventBounce","onLinkClick","document","location","protocol","host","pathname","hash","substring","hasOwnProperty","collapseByDefault","newGroupCollapsed","defaultProps","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Nav/Nav.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ActionButton } from '../../Button';\nimport { buttonStyles } from './Nav.styles';\nimport { classNamesFunction, divProperties, getNativeProps, getWindow, initializeComponentRef } from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Icon } from '../../Icon';\nimport { composeComponentAs, composeRenderFunction } from '@fluentui/utilities';\nimport type { IFocusZone } from '../../FocusZone';\nimport type {\n  INav,\n  INavLink,\n  INavLinkGroup,\n  INavProps,\n  INavStyleProps,\n  INavStyles,\n  IRenderGroupHeaderProps,\n} from './Nav.types';\n\n// The number pixels per indentation level for Nav links.\nconst _indentationSize = 14;\n\n// The number of pixels of left margin\nconst _baseIndent = 3;\n\n// global var used in _isLinkSelectedKey\nlet _urlResolver: HTMLAnchorElement | undefined;\n\nexport function isRelativeUrl(url: string): boolean {\n  // A URL is relative if it has no protocol.\n  return !!url && !/^[a-z0-9+-.]+:\\/\\//i.test(url);\n}\n\nconst getClassNames = classNamesFunction<INavStyleProps, INavStyles>();\n\nexport interface INavState {\n  isGroupCollapsed: { [key: string]: boolean };\n  isLinkExpandStateChanged?: boolean;\n  selectedKey?: string;\n}\n\nexport class NavBase extends React.Component<INavProps, INavState> implements INav {\n  public static defaultProps: INavProps = {\n    groups: null,\n  };\n\n  private _focusZone = React.createRef<IFocusZone>();\n  constructor(props: INavProps) {\n    super(props);\n    initializeComponentRef(this);\n    this.state = {\n      isGroupCollapsed: {},\n      isLinkExpandStateChanged: false,\n      selectedKey: props.initialSelectedKey || props.selectedKey,\n    };\n  }\n\n  public render(): JSX.Element | null {\n    const { styles, groups, className, isOnTop, role = 'navigation', theme } = this.props;\n\n    if (!groups) {\n      return null;\n    }\n\n    const groupElements: React.ReactElement<{}>[] = groups.map(this._renderGroup);\n\n    const classNames = getClassNames(styles!, { theme: theme!, className, isOnTop, groups });\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical} componentRef={this._focusZone} {...this.props.focusZoneProps}>\n        <nav role={role} className={classNames.root} aria-label={this.props.ariaLabel}>\n          {groupElements}\n        </nav>\n      </FocusZone>\n    );\n  }\n\n  public get selectedKey(): string | undefined {\n    return this.state.selectedKey;\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even\n   * if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  public focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._focusZone && this._focusZone.current) {\n      return this._focusZone.current.focus(forceIntoFirstElement);\n    }\n    return false;\n  }\n\n  private _onRenderLink = (link: INavLink): JSX.Element => {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n    return <div className={classNames.linkText}>{link.name}</div>;\n  };\n\n  private _renderNavLink(link: INavLink, linkIndex: number, nestingLevel: number): JSX.Element {\n    const { styles, groups, theme } = this.props;\n    const isLinkWithIcon = link.icon || link.iconProps;\n    const isSelectedLink = this._isLinkSelected(link);\n    const { ariaCurrent = 'page' } = link;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isSelected: isSelectedLink,\n      isDisabled: link.disabled,\n      isButtonEntry: link.onClick && !link.forceAnchor,\n      leftPadding: _indentationSize * nestingLevel + _baseIndent + (isLinkWithIcon ? 0 : 24),\n      groups,\n    });\n\n    // Prevent hijacking of the parent window if link.target is defined\n    const rel = link.url && link.target && !isRelativeUrl(link.url) ? 'noopener noreferrer' : undefined;\n\n    const LinkAs = this.props.linkAs ? composeComponentAs(this.props.linkAs, ActionButton) : ActionButton;\n    const onRenderLink = this.props.onRenderLink\n      ? composeRenderFunction(this.props.onRenderLink, this._onRenderLink)\n      : this._onRenderLink;\n\n    return (\n      <LinkAs\n        className={classNames.link}\n        styles={buttonStyles}\n        href={link.url || (link.forceAnchor ? '#' : undefined)}\n        iconProps={link.iconProps || { iconName: link.icon }}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={\n          link.onClick ? this._onNavButtonLinkClicked.bind(this, link) : this._onNavAnchorLinkClicked.bind(this, link)\n        }\n        title={link.title !== undefined ? link.title : link.name}\n        target={link.target}\n        rel={rel}\n        disabled={link.disabled}\n        aria-current={isSelectedLink ? ariaCurrent : undefined}\n        aria-label={link.ariaLabel ? link.ariaLabel : undefined}\n        link={link}\n      >\n        {onRenderLink(link)}\n      </LinkAs>\n    );\n  }\n\n  private _renderCompositeLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const divProps: React.HTMLProps<HTMLDivElement> = { ...getNativeProps(link, divProperties, ['onClick']) };\n    // eslint-disable-next-line deprecation/deprecation\n    const { expandButtonAriaLabel, styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isExpanded: !!link.isExpanded,\n      isSelected: this._isLinkSelected(link),\n      isLink: true,\n      isDisabled: link.disabled,\n      position: _indentationSize * nestingLevel + 1,\n      groups,\n    });\n\n    let finalExpandBtnAriaLabel = '';\n    if (link.links && link.links.length > 0) {\n      if (link.collapseAriaLabel || link.expandAriaLabel) {\n        // still respect link.collapseAriaLabel, even though it's deprecated in favor of expandAriaLabel\n        const collapseAriaLabel = link.collapseAriaLabel ?? link.expandAriaLabel;\n\n        finalExpandBtnAriaLabel = link.isExpanded ? collapseAriaLabel! : link.expandAriaLabel!;\n      } else {\n        // TODO remove when `expandButtonAriaLabel` is removed. This is not an ideal concatenation for localization.\n        finalExpandBtnAriaLabel = expandButtonAriaLabel ? `${link.name} ${expandButtonAriaLabel}` : link.name;\n      }\n    }\n\n    return (\n      <div {...divProps} key={link.key || linkIndex} className={classNames.compositeLink}>\n        {link.links && link.links.length > 0 ? (\n          <button\n            className={classNames.chevronButton}\n            onClick={this._onLinkExpandClicked.bind(this, link)}\n            aria-label={finalExpandBtnAriaLabel}\n            aria-expanded={link.isExpanded ? 'true' : 'false'}\n          >\n            <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n          </button>\n        ) : null}\n        {this._renderNavLink(link, linkIndex, nestingLevel)}\n      </div>\n    );\n  }\n\n  private _renderLink(link: INavLink, linkIndex: number, nestingLevel: number): React.ReactElement<{}> {\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <li key={link.key || linkIndex} role=\"listitem\" className={classNames.navItem}>\n        {this._renderCompositeLink(link, linkIndex, nestingLevel)}\n        {link.isExpanded ? this._renderLinks(link.links, ++nestingLevel) : null}\n      </li>\n    );\n  }\n\n  private _renderLinks(links: INavLink[] | undefined, nestingLevel: number): React.ReactElement<{}> | null {\n    if (!links || !links.length) {\n      return null;\n    }\n    const linkElements: React.ReactElement<{}>[] = links.map((link: INavLink, linkIndex: number) =>\n      this._renderLink(link, linkIndex, nestingLevel),\n    );\n\n    const { styles, groups, theme } = this.props;\n    const classNames = getClassNames(styles!, { theme: theme!, groups });\n\n    return (\n      <ul role=\"list\" className={classNames.navItems}>\n        {linkElements}\n      </ul>\n    );\n  }\n\n  private _renderGroup = (group: INavLinkGroup, groupIndex: number): React.ReactElement<{}> => {\n    const { styles, groups, theme, onRenderGroupHeader = this._renderGroupHeader } = this.props;\n\n    const isExpanded = this._isGroupExpanded(group);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    const finalOnHeaderClick = (\n      ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined,\n      isCollapsing?: boolean | undefined,\n    ) => {\n      this._onGroupHeaderClicked(group, ev);\n    };\n\n    const groupProps: IRenderGroupHeaderProps = {\n      ...group,\n      isExpanded,\n      onHeaderClick: finalOnHeaderClick,\n    };\n\n    return (\n      <div key={groupIndex} className={classNames.group}>\n        {groupProps.name ? onRenderGroupHeader(groupProps, this._renderGroupHeader) : null}\n        <div className={classNames.groupContent}>{this._renderLinks(groupProps.links, 0 /* nestingLevel */)}</div>\n      </div>\n    );\n  };\n\n  private _renderGroupHeader = (group: IRenderGroupHeaderProps): React.ReactElement<{}> => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { styles, groups, theme, expandButtonAriaLabel } = this.props;\n\n    const { isExpanded } = group;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      isGroup: true,\n      isExpanded,\n      groups,\n    });\n\n    // respect deprecated collapseAriaLabel, but default to expandAriaLabel for both states\n    // eslint-disable-next-line deprecation/deprecation\n    const collapseAriaLabel = group.collapseAriaLabel ?? group.expandAriaLabel;\n    const label = (isExpanded ? collapseAriaLabel : group.expandAriaLabel) || expandButtonAriaLabel;\n\n    const { onHeaderClick } = group;\n\n    const onClick = onHeaderClick\n      ? (ev?: React.MouseEvent<HTMLElement, MouseEvent> | undefined) => {\n          onHeaderClick(ev, isExpanded);\n        }\n      : undefined;\n\n    return (\n      <button className={classNames.chevronButton} onClick={onClick} aria-label={label} aria-expanded={isExpanded}>\n        <Icon className={classNames.chevronIcon} iconName=\"ChevronDown\" />\n        {group.name}\n      </button>\n    );\n  };\n\n  private _onGroupHeaderClicked(group: INavLinkGroup, ev?: React.MouseEvent<HTMLElement>): void {\n    if (group.onHeaderClick) {\n      group.onHeaderClick(ev, this._isGroupExpanded(group));\n    }\n\n    if (group.isExpanded === undefined) {\n      this._toggleCollapsed(group);\n    }\n\n    if (ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _onLinkExpandClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    const { onLinkExpandClick } = this.props;\n\n    if (onLinkExpandClick) {\n      onLinkExpandClick(ev, link);\n    }\n\n    if (!ev.defaultPrevented) {\n      link.isExpanded = !link.isExpanded;\n      this.setState({ isLinkExpandStateChanged: true });\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  private _preventBounce(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    if (!link.url && link.forceAnchor) {\n      ev.preventDefault();\n    }\n  }\n\n  private _onNavAnchorLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (this.props.onLinkClick) {\n      this.props.onLinkClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _onNavButtonLinkClicked(link: INavLink, ev: React.MouseEvent<HTMLElement>): void {\n    // If the href is \"#\" we should call preventDefault to prevent scrolling to the top of the page\n    this._preventBounce(link, ev);\n\n    if (link.onClick) {\n      link.onClick(ev, link);\n    }\n    if (!link.url && link.links && link.links.length > 0) {\n      this._onLinkExpandClicked(link, ev);\n    }\n\n    this.setState({ selectedKey: link.key });\n  }\n\n  private _isLinkSelected(link: INavLink): boolean {\n    // if caller passes in selectedKey, use it as first choice or\n    // if current state.selectedKey (from addressbar) is match to the link or\n    // check if URL is matching location.href (if link.url exists)\n    if (this.props.selectedKey !== undefined) {\n      return link.key === this.props.selectedKey;\n    } else if (this.state.selectedKey !== undefined) {\n      return link.key === this.state.selectedKey;\n    } else if (typeof getWindow() === 'undefined' || !link.url) {\n      // resolve is not supported for ssr\n      return false;\n    } else {\n      // If selectedKey is undefined in props and state, then check URL\n      _urlResolver = _urlResolver || document.createElement('a');\n\n      _urlResolver.href = link.url || '';\n      const target: string = _urlResolver.href;\n\n      if (location.href === target) {\n        return true;\n      }\n\n      // If selectedKey is not defined in state, then check URL to determine link selected status\n      if (location.protocol + '//' + location.host + location.pathname === target) {\n        return true;\n      }\n\n      if (location.hash) {\n        // Match the hash to the url.\n        if (location.hash === link.url) {\n          return true;\n        }\n\n        // Match a rebased url. (e.g. #foo becomes http://hostname/foo)\n        _urlResolver.href = location.hash.substring(1);\n\n        return _urlResolver.href === target;\n      }\n    }\n\n    return false;\n  }\n\n  private _isGroupExpanded(group: INavLinkGroup): boolean {\n    if (group.isExpanded !== undefined) {\n      return group.isExpanded;\n    }\n    if (group.name && this.state.isGroupCollapsed.hasOwnProperty(group.name)) {\n      return !this.state.isGroupCollapsed[group.name];\n    }\n    if (group.collapseByDefault !== undefined) {\n      return !group.collapseByDefault;\n    }\n    return true;\n  }\n\n  private _toggleCollapsed(group: INavLinkGroup): void {\n    if (group.name) {\n      const newGroupCollapsed = {\n        ...this.state.isGroupCollapsed, // Make a copy in order to not modify state\n        [group.name]: this._isGroupExpanded(group), // sic - presently open will be collapsed after setState\n      };\n      this.setState({ isGroupCollapsed: newGroupCollapsed });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}