{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n  var _a, _b;\n  return ['is-inFocus', {\n    selectors: (_a = {}, _a[\".\".concat(IsFocusVisibleClassName, \" &\")] = {\n      position: 'relative',\n      outline: 'transparent',\n      selectors: {\n        '::-moz-focus-inner': {\n          border: 0\n        },\n        ':after': {\n          content: '\"\"',\n          top: -2,\n          right: -2,\n          bottom: -2,\n          left: -2,\n          pointerEvents: 'none',\n          border: \"1px solid \".concat(focusBorderColor),\n          position: 'absolute',\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderColor: 'WindowText',\n            borderWidth: hasIconOrImage ? 1 : 2\n          }, _b)\n        }\n      }\n    }, _a)\n  }];\n}\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n  return [className, {\n    paddingBottom: 2,\n    transitionProperty: 'opacity',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: 'ease',\n    selectors: {\n      '.ms-Image': {\n        display: 'inline-block',\n        borderStyle: 'none'\n      }\n    }\n  }, (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && ['is-hidden', {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    opacity: 0\n  }]];\n}\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e;\n  var theme = props.theme,\n    hasIcon = props.hasIcon,\n    hasImage = props.hasImage,\n    checked = props.checked,\n    disabled = props.disabled,\n    imageIsLarge = props.imageIsLarge,\n    focused = props.focused,\n    imageSize = props.imageSize;\n  var palette = theme.palette,\n    semanticColors = theme.semanticColors,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  var circleBorderColor = palette.neutralPrimary;\n  var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  var circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var circleCheckedHoveredBorderColor = palette.themeDark;\n  var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  var circleBackgroundColor = semanticColors.bodyBackground;\n  var dotUncheckedHoveredColor = palette.neutralSecondary;\n  var dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var dotCheckedHoveredColor = palette.themeDark;\n  var dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  var labelHoverFocusColor = palette.neutralDark;\n  var focusBorderColor = semanticColors.focusBorder;\n  var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n  var fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      },\n      ':after': [!hasIcon && !hasImage && !checked && {\n        content: '\"\"',\n        transitionProperty: 'background-color',\n        left: 5,\n        top: 5,\n        width: 10,\n        height: 10,\n        backgroundColor: dotUncheckedHoveredColor\n      }, checked && {\n        borderColor: dotCheckedHoveredColor,\n        background: dotCheckedHoveredColor\n      }]\n    }\n  };\n  var enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      }\n    }\n  };\n  var circleAreaProperties = [{\n    content: '\"\"',\n    display: 'inline-block',\n    backgroundColor: circleBackgroundColor,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: circleBorderColor,\n    width: choiceFieldSize,\n    height: choiceFieldSize,\n    fontWeight: 'normal',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    transitionProperty: 'border-color',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    borderRadius: '50%'\n  }, disabled && {\n    borderColor: circleDisabledBorderColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      borderColor: 'GrayText',\n      background: 'Window'\n    }, getHighContrastNoAdjustStyle()), _a)\n  }, checked && {\n    borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      background: 'Window',\n      forcedColorAdjust: 'none'\n    }, _b)\n  }, (hasIcon || hasImage) && {\n    top: radioButtonSpacing,\n    right: radioButtonSpacing,\n    left: 'auto',\n    opacity: checked ? 1 : 0\n  }];\n  var dotAreaProperties = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: '50%',\n    position: 'absolute',\n    left: choiceFieldSize / 2,\n    right: 0,\n    transitionProperty: 'border-width',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    boxSizing: 'border-box'\n  }, checked && {\n    borderWidth: 5,\n    borderStyle: 'solid',\n    borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n    background: dotCheckedColor,\n    left: 5,\n    top: 5,\n    width: 10,\n    height: 10,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      forcedColorAdjust: 'none'\n    }, _c)\n  }, checked && (hasIcon || hasImage) && {\n    top: radioButtonSpacing + radioButtonInnerSize,\n    right: radioButtonSpacing + radioButtonInnerSize,\n    left: 'auto' // To reset the value of 'left' to its default value, so that 'right' works\n  }];\n\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      color: semanticColors.bodyText,\n      minHeight: 26,\n      border: 'none',\n      position: 'relative',\n      marginTop: 8,\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          display: 'inline-block'\n        }\n      }\n    }, !hasIcon && !hasImage && {\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          paddingLeft: '26px'\n        }\n      }\n    }, hasImage && 'ms-ChoiceField--image', hasIcon && 'ms-ChoiceField--icon', (hasIcon || hasImage) && {\n      display: 'inline-flex',\n      fontSize: 0,\n      margin: '0 4px 4px 0',\n      paddingLeft: 0,\n      backgroundColor: iconOrImageChoiceBackgroundColor,\n      height: '100%'\n    }],\n    choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage)],\n    // The hidden input\n    input: [classNames.input, {\n      position: 'absolute',\n      opacity: 0,\n      top: 0,\n      right: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0\n    }, disabled && 'is-disabled'],\n    field: [classNames.field, checked && classNames.checked, {\n      display: 'inline-block',\n      cursor: 'pointer',\n      marginTop: 0,\n      position: 'relative',\n      verticalAlign: 'top',\n      userSelect: 'none',\n      minHeight: 20,\n      selectors: {\n        ':hover': !disabled && fieldHoverOrFocusProperties,\n        ':focus': !disabled && fieldHoverOrFocusProperties,\n        // The circle\n        ':before': circleAreaProperties,\n        // The dot\n        ':after': dotAreaProperties\n      }\n    }, hasIcon && 'ms-ChoiceField--icon', hasImage && 'ms-ChoiceField-field--image', (hasIcon || hasImage) && {\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      paddingTop: 22,\n      margin: 0,\n      textAlign: 'center',\n      transitionProperty: 'all',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      border: '1px solid transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }, checked && {\n      borderColor: iconOrImageChoiceBorderCheckedColor\n    }, (hasIcon || hasImage) && !disabled && {\n      selectors: {\n        ':hover': enabledFieldWithImageHoverOrFocusProperties,\n        ':focus': enabledFieldWithImageHoverOrFocusProperties\n      }\n    }, disabled && {\n      cursor: 'default',\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          color: semanticColors.disabledBodyText,\n          selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n            color: 'GrayText'\n          }, getHighContrastNoAdjustStyle()), _d)\n        }\n      }\n    }, checked && disabled && {\n      borderColor: iconOrImageChoiceBackgroundColor\n    }],\n    innerField: [classNames.innerField, hasImage && {\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      height: imageSize.height,\n      width: imageSize.width\n    }, (hasIcon || hasImage) && {\n      position: 'relative',\n      display: 'inline-block',\n      paddingLeft: 30,\n      paddingRight: 30\n    }, (hasIcon || hasImage) && imageIsLarge && {\n      paddingLeft: 24,\n      paddingRight: 24\n    }, (hasIcon || hasImage) && disabled && {\n      opacity: 0.25,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _e)\n    }],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [classNames.iconWrapper, {\n      fontSize: iconSize,\n      lineHeight: iconSize,\n      height: iconSize\n    }],\n    labelWrapper: [classNames.labelWrapper, fonts.medium, (hasIcon || hasImage) && {\n      display: 'block',\n      position: 'relative',\n      margin: '4px 8px 2px 8px',\n      height: labelWrapperHeight,\n      lineHeight: labelWrapperLineHeight,\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      maxWidth: imageSize.width * 2,\n      overflow: 'hidden',\n      whiteSpace: 'pre-wrap'\n    }]\n  };\n};","map":{"version":3,"names":["HighContrastSelector","getGlobalClassNames","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","GlobalClassNames","root","choiceFieldWrapper","input","field","innerField","imageWrapper","iconWrapper","labelWrapper","checked","labelWrapperLineHeight","labelWrapperHeight","iconSize","choiceFieldSize","choiceFieldTransitionDuration","choiceFieldTransitionTiming","radioButtonSpacing","radioButtonInnerSize","getChoiceGroupFocusStyle","focusBorderColor","hasIconOrImage","selectors","_a","concat","position","outline","border","content","top","right","bottom","left","pointerEvents","_b","borderColor","borderWidth","getImageWrapperStyle","isSelectedImageWrapper","className","paddingBottom","transitionProperty","transitionDuration","transitionTimingFunction","display","borderStyle","width","height","overflow","opacity","getStyles","props","theme","hasIcon","hasImage","disabled","imageIsLarge","focused","imageSize","palette","semanticColors","fonts","classNames","circleBorderColor","neutralPrimary","circleHoveredBorderColor","inputBorderHovered","circleCheckedBorderColor","inputBackgroundChecked","circleCheckedHoveredBorderColor","themeDark","circleDisabledBorderColor","disabledBodySubtext","circleBackgroundColor","bodyBackground","dotUncheckedHoveredColor","neutralSecondary","dotCheckedColor","dotCheckedHoveredColor","dotDisabledColor","labelHoverFocusColor","neutralDark","focusBorder","iconOrImageChoiceBorderUncheckedHoveredColor","iconOrImageChoiceBorderCheckedColor","iconOrImageChoiceBorderCheckedHoveredColor","iconOrImageChoiceBackgroundColor","neutralLighter","fieldHoverOrFocusProperties","color","backgroundColor","background","enabledFieldWithImageHoverOrFocusProperties","circleAreaProperties","fontWeight","boxSizing","borderRadius","__assign","forcedColorAdjust","dotAreaProperties","_c","medium","alignItems","bodyText","minHeight","marginTop","paddingLeft","fontSize","margin","cursor","verticalAlign","userSelect","paddingTop","textAlign","justifyContent","flexDirection","disabledBodyText","_d","paddingRight","_e","selectedImageWrapper","lineHeight","maxWidth","whiteSpace"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.ts"],"sourcesContent":["import { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport type { IStyle } from '../../../Styling';\nimport type { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n          background: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      background: dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}