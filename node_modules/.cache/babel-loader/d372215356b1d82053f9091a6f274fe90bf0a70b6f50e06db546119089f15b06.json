{"ast":null,"code":"import { ScreenWidthMinMedium, getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Dialog'\n};\nexport var getStyles = function (props) {\n  var _a;\n  var className = props.className,\n    containerClassName = props.containerClassName,\n    // eslint-disable-line deprecation/deprecation\n    _b = props.dialogDefaultMinWidth,\n    // eslint-disable-line deprecation/deprecation\n    dialogDefaultMinWidth = _b === void 0 ? '288px' : _b,\n    _c = props.dialogDefaultMaxWidth,\n    dialogDefaultMaxWidth = _c === void 0 ? '340px' : _c,\n    hidden = props.hidden,\n    theme = props.theme;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, className],\n    main: [{\n      width: dialogDefaultMinWidth,\n      outline: '3px solid transparent',\n      selectors: (_a = {}, _a[\"@media (min-width: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n        width: 'auto',\n        maxWidth: dialogDefaultMaxWidth,\n        minWidth: dialogDefaultMinWidth\n      }, _a)\n    }, !hidden && {\n      display: 'flex'\n    }, containerClassName]\n  };\n};","map":{"version":3,"names":["ScreenWidthMinMedium","getGlobalClassNames","GlobalClassNames","root","getStyles","props","className","containerClassName","_b","dialogDefaultMinWidth","_c","dialogDefaultMaxWidth","hidden","theme","classNames","fonts","medium","main","width","outline","selectors","_a","concat","maxWidth","minWidth","display"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Dialog/Dialog.styles.ts"],"sourcesContent":["import { ScreenWidthMinMedium, getGlobalClassNames } from '../../Styling';\nimport type { IDialogStyleProps, IDialogStyles } from './Dialog.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Dialog',\n};\n\nexport const getStyles = (props: IDialogStyleProps): IDialogStyles => {\n  const {\n    className,\n    containerClassName, // eslint-disable-line deprecation/deprecation\n    dialogDefaultMinWidth = '288px',\n    dialogDefaultMaxWidth = '340px',\n    hidden,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [classNames.root, theme.fonts.medium, className],\n\n    main: [\n      {\n        width: dialogDefaultMinWidth,\n        outline: '3px solid transparent',\n\n        selectors: {\n          [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n            width: 'auto',\n            maxWidth: dialogDefaultMaxWidth,\n            minWidth: dialogDefaultMinWidth,\n          },\n        },\n      },\n      !hidden && { display: 'flex' },\n      containerClassName,\n    ],\n  };\n};\n"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,mBAAmB,QAAQ,eAAe;AAGzE,IAAMC,gBAAgB,GAAG;EACvBC,IAAI,EAAE;CACP;AAED,OAAO,IAAMC,SAAS,GAAG,SAAAA,CAACC,KAAwB;;EAE9C,IAAAC,SAAS,GAMPD,KAAK,CAAAC,SANE;IACTC,kBAAkB,GAKhBF,KAAK,CAAAE,kBALW;IAAE;IACpBC,EAAA,GAIEH,KAAK,CAAAI,qBAJwB;IADX;IACpBA,qBAAqB,GAAAD,EAAA,cAAG,OAAO,GAAAA,EAAA;IAC/BE,EAAA,GAGEL,KAAK,CAAAM,qBAHwB;IAA/BA,qBAAqB,GAAAD,EAAA,cAAG,OAAO,GAAAA,EAAA;IAC/BE,MAAM,GAEJP,KAAK,CAAAO,MAFD;IACNC,KAAK,GACHR,KAAK,CAAAQ,KADF;EAGP,IAAMC,UAAU,GAAGb,mBAAmB,CAACC,gBAAgB,EAAEW,KAAK,CAAC;EAE/D,OAAO;IACLV,IAAI,EAAE,CAACW,UAAU,CAACX,IAAI,EAAEU,KAAK,CAACE,KAAK,CAACC,MAAM,EAAEV,SAAS,CAAC;IAEtDW,IAAI,EAAE,CACJ;MACEC,KAAK,EAAET,qBAAqB;MAC5BU,OAAO,EAAE,uBAAuB;MAEhCC,SAAS,GAAAC,EAAA,OACPA,EAAA,CAAC,sBAAAC,MAAA,CAAsBtB,oBAAoB,QAAK,IAAG;QACjDkB,KAAK,EAAE,MAAM;QACbK,QAAQ,EAAEZ,qBAAqB;QAC/Ba,QAAQ,EAAEf;OACX,E;KAEJ,EACD,CAACG,MAAM,IAAI;MAAEa,OAAO,EAAE;IAAM,CAAE,EAC9BlB,kBAAkB;GAErB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}