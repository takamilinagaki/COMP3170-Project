{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport { allowScrollOnElement, allowOverscrollOnElement, classNamesFunction, divProperties, elementContains, getId, getNativeProps, getRTL, css, warnDeprecations, Async, EventGroup, initializeComponentRef } from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { PanelType } from './Panel.types';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'Panel';\nvar PanelVisibilityState;\n(function (PanelVisibilityState) {\n  PanelVisibilityState[PanelVisibilityState[\"closed\"] = 0] = \"closed\";\n  PanelVisibilityState[PanelVisibilityState[\"animatingOpen\"] = 1] = \"animatingOpen\";\n  PanelVisibilityState[PanelVisibilityState[\"open\"] = 2] = \"open\";\n  PanelVisibilityState[PanelVisibilityState[\"animatingClosed\"] = 3] = \"animatingClosed\";\n})(PanelVisibilityState || (PanelVisibilityState = {}));\nvar PanelBase = /** @class */function (_super) {\n  __extends(PanelBase, _super);\n  function PanelBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._panel = React.createRef();\n    _this._animationCallback = null;\n    _this._hasCustomNavigation = !!(_this.props.onRenderNavigation || _this.props.onRenderNavigationContent);\n    _this.dismiss = function (ev) {\n      if (_this.props.onDismiss && _this.isActive) {\n        _this.props.onDismiss(ev);\n      }\n      if (!ev || ev && !ev.defaultPrevented) {\n        _this.close();\n      }\n    };\n    // Allow the user to scroll within the panel but not on the body\n    _this._allowScrollOnPanel = function (elt) {\n      if (elt) {\n        if (_this._allowTouchBodyScroll) {\n          allowOverscrollOnElement(elt, _this._events);\n        } else {\n          allowScrollOnElement(elt, _this._events);\n        }\n      } else {\n        _this._events.off(_this._scrollableContent);\n      }\n      _this._scrollableContent = elt;\n    };\n    _this._onRenderNavigation = function (props) {\n      if (!_this.props.onRenderNavigationContent && !_this.props.onRenderNavigation && !_this.props.hasCloseButton) {\n        return null;\n      }\n      var _a = _this.props.onRenderNavigationContent,\n        onRenderNavigationContent = _a === void 0 ? _this._onRenderNavigationContent : _a;\n      return React.createElement(\"div\", {\n        className: _this._classNames.navigation\n      }, onRenderNavigationContent(props, _this._onRenderNavigationContent));\n    };\n    _this._onRenderNavigationContent = function (props) {\n      var _a;\n      var closeButtonAriaLabel = props.closeButtonAriaLabel,\n        hasCloseButton = props.hasCloseButton,\n        _b = props.onRenderHeader,\n        onRenderHeader = _b === void 0 ? _this._onRenderHeader : _b;\n      if (hasCloseButton) {\n        var iconButtonStyles = (_a = _this._classNames.subComponentStyles) === null || _a === void 0 ? void 0 : _a.closeButton();\n        return React.createElement(React.Fragment, null, !_this._hasCustomNavigation && onRenderHeader(_this.props, _this._onRenderHeader, _this._headerTextId), React.createElement(IconButton, {\n          styles: iconButtonStyles,\n          className: _this._classNames.closeButton,\n          onClick: _this._onPanelClick,\n          ariaLabel: closeButtonAriaLabel,\n          title: closeButtonAriaLabel,\n          \"data-is-visible\": true,\n          iconProps: {\n            iconName: 'Cancel'\n          }\n        }));\n      }\n      return null;\n    };\n    _this._onRenderHeader = function (props, defaultRender, headerTextId) {\n      var headerText = props.headerText,\n        _a = props.headerTextProps,\n        headerTextProps = _a === void 0 ? {} : _a;\n      if (headerText) {\n        return React.createElement(\"div\", {\n          className: _this._classNames.header\n        }, React.createElement(\"div\", __assign({\n          id: headerTextId,\n          role: \"heading\",\n          \"aria-level\": 1\n        }, headerTextProps, {\n          className: css(_this._classNames.headerText, headerTextProps.className)\n        }), headerText));\n      }\n      return null;\n    };\n    _this._onRenderBody = function (props) {\n      return React.createElement(\"div\", {\n        className: _this._classNames.content\n      }, props.children);\n    };\n    _this._onRenderFooter = function (props) {\n      var _a = _this.props.onRenderFooterContent,\n        onRenderFooterContent = _a === void 0 ? null : _a;\n      if (onRenderFooterContent) {\n        return React.createElement(\"div\", {\n          className: _this._classNames.footer\n        }, React.createElement(\"div\", {\n          className: _this._classNames.footerInner\n        }, onRenderFooterContent()));\n      }\n      return null;\n    };\n    _this._animateTo = function (newVisibilityState) {\n      if (newVisibilityState === PanelVisibilityState.open && _this.props.onOpen) {\n        _this.props.onOpen();\n      }\n      _this._animationCallback = _this._async.setTimeout(function () {\n        _this.setState({\n          visibility: newVisibilityState\n        });\n        _this._onTransitionComplete(newVisibilityState);\n      }, 200);\n    };\n    _this._clearExistingAnimationTimer = function () {\n      if (_this._animationCallback !== null) {\n        _this._async.clearTimeout(_this._animationCallback);\n      }\n    };\n    _this._onPanelClick = function (ev) {\n      _this.dismiss(ev);\n    };\n    _this._onTransitionComplete = function (newVisibilityState) {\n      _this._updateFooterPosition();\n      if (newVisibilityState === PanelVisibilityState.open && _this.props.onOpened) {\n        _this.props.onOpened();\n      }\n      if (newVisibilityState === PanelVisibilityState.closed && _this.props.onDismissed) {\n        _this.props.onDismissed();\n      }\n    };\n    var _a = _this.props.allowTouchBodyScroll,\n      allowTouchBodyScroll = _a === void 0 ? false : _a;\n    _this._allowTouchBodyScroll = allowTouchBodyScroll;\n    initializeComponentRef(_this);\n    warnDeprecations(COMPONENT_NAME, props, {\n      ignoreExternalFocusing: 'focusTrapZoneProps',\n      forceFocusInsideTrap: 'focusTrapZoneProps',\n      firstFocusableSelector: 'focusTrapZoneProps'\n    });\n    _this.state = {\n      isFooterSticky: false,\n      // intentionally ignore props so animation takes place during componentDidMount\n      visibility: PanelVisibilityState.closed,\n      id: getId('Panel')\n    };\n    return _this;\n  }\n  PanelBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    if (nextProps.isOpen === undefined) {\n      return null; // no state update\n    }\n\n    if (nextProps.isOpen && (prevState.visibility === PanelVisibilityState.closed || prevState.visibility === PanelVisibilityState.animatingClosed)) {\n      return {\n        visibility: PanelVisibilityState.animatingOpen\n      };\n    }\n    if (!nextProps.isOpen && (prevState.visibility === PanelVisibilityState.open || prevState.visibility === PanelVisibilityState.animatingOpen)) {\n      return {\n        visibility: PanelVisibilityState.animatingClosed\n      };\n    }\n    return null;\n  };\n  PanelBase.prototype.componentDidMount = function () {\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    this._events.on(window, 'resize', this._updateFooterPosition);\n    if (this._shouldListenForOuterClick(this.props)) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n    if (this.props.isOpen) {\n      this.setState({\n        visibility: PanelVisibilityState.animatingOpen\n      });\n    }\n  };\n  PanelBase.prototype.componentDidUpdate = function (previousProps, previousState) {\n    var shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n    var previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n    if (this.state.visibility !== previousState.visibility) {\n      this._clearExistingAnimationTimer();\n      if (this.state.visibility === PanelVisibilityState.animatingOpen) {\n        this._animateTo(PanelVisibilityState.open);\n      } else if (this.state.visibility === PanelVisibilityState.animatingClosed) {\n        this._animateTo(PanelVisibilityState.closed);\n      }\n    }\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n  };\n  PanelBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n    this._events.dispose();\n  };\n  PanelBase.prototype.render = function () {\n    var _a = this.props,\n      _b = _a.className,\n      className = _b === void 0 ? '' : _b,\n      elementToFocusOnDismiss = _a.elementToFocusOnDismiss,\n      /* eslint-disable deprecation/deprecation */\n      firstFocusableSelector = _a.firstFocusableSelector,\n      focusTrapZoneProps = _a.focusTrapZoneProps,\n      forceFocusInsideTrap = _a.forceFocusInsideTrap,\n      hasCloseButton = _a.hasCloseButton,\n      headerText = _a.headerText,\n      _c = _a.headerClassName,\n      headerClassName = _c === void 0 ? '' : _c,\n      ignoreExternalFocusing = _a.ignoreExternalFocusing,\n      isBlocking = _a.isBlocking,\n      isFooterAtBottom = _a.isFooterAtBottom,\n      isLightDismiss = _a.isLightDismiss,\n      isHiddenOnDismiss = _a.isHiddenOnDismiss,\n      layerProps = _a.layerProps,\n      overlayProps = _a.overlayProps,\n      popupProps = _a.popupProps,\n      type = _a.type,\n      styles = _a.styles,\n      theme = _a.theme,\n      customWidth = _a.customWidth,\n      _d = _a.onLightDismissClick,\n      onLightDismissClick = _d === void 0 ? this._onPanelClick : _d,\n      _e = _a.onRenderNavigation,\n      onRenderNavigation = _e === void 0 ? this._onRenderNavigation : _e,\n      _f = _a.onRenderHeader,\n      onRenderHeader = _f === void 0 ? this._onRenderHeader : _f,\n      _g = _a.onRenderBody,\n      onRenderBody = _g === void 0 ? this._onRenderBody : _g,\n      _h = _a.onRenderFooter,\n      onRenderFooter = _h === void 0 ? this._onRenderFooter : _h;\n    var _j = this.state,\n      isFooterSticky = _j.isFooterSticky,\n      visibility = _j.visibility,\n      id = _j.id;\n    var isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n    var isRTL = getRTL(theme);\n    var isOnRightSide = isRTL ? isLeft : !isLeft;\n    var customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? {\n      width: customWidth\n    } : {};\n    var nativeProps = getNativeProps(this.props, divProperties);\n    var isOpen = this.isActive;\n    var isAnimating = visibility === PanelVisibilityState.animatingClosed || visibility === PanelVisibilityState.animatingOpen;\n    this._headerTextId = headerText && id + '-headerText';\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n      return null;\n    }\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n      hasCloseButton: hasCloseButton,\n      headerClassName: headerClassName,\n      isAnimating: isAnimating,\n      isFooterSticky: isFooterSticky,\n      isFooterAtBottom: isFooterAtBottom,\n      isOnRightSide: isOnRightSide,\n      isOpen: isOpen,\n      isHiddenOnDismiss: isHiddenOnDismiss,\n      type: type,\n      hasCustomNavigation: this._hasCustomNavigation\n    });\n    var _k = this,\n      _classNames = _k._classNames,\n      _allowTouchBodyScroll = _k._allowTouchBodyScroll;\n    var overlay;\n    if (isBlocking && isOpen) {\n      overlay = React.createElement(Overlay, __assign({\n        className: _classNames.overlay,\n        isDarkThemed: false,\n        onClick: isLightDismiss ? onLightDismissClick : undefined,\n        allowTouchBodyScroll: _allowTouchBodyScroll\n      }, overlayProps));\n    }\n    return React.createElement(Layer, __assign({}, layerProps), React.createElement(Popup, __assign({\n      role: \"dialog\",\n      \"aria-modal\": isBlocking ? 'true' : undefined,\n      ariaLabelledBy: this._headerTextId ? this._headerTextId : undefined,\n      onDismiss: this.dismiss,\n      className: _classNames.hiddenPanel,\n      enableAriaHiddenSiblings: isOpen ? true : false\n    }, popupProps), React.createElement(\"div\", __assign({\n      \"aria-hidden\": !isOpen && isAnimating\n    }, nativeProps, {\n      ref: this._panel,\n      className: _classNames.root\n    }), overlay, React.createElement(FocusTrapZone, __assign({\n      ignoreExternalFocusing: ignoreExternalFocusing,\n      forceFocusInsideTrap: !isBlocking || isHiddenOnDismiss && !isOpen ? false : forceFocusInsideTrap,\n      firstFocusableSelector: firstFocusableSelector,\n      isClickableOutsideFocusTrap: true\n    }, focusTrapZoneProps, {\n      className: _classNames.main,\n      style: customWidthStyles,\n      elementToFocusOnDismiss: elementToFocusOnDismiss\n    }), React.createElement(\"div\", {\n      className: _classNames.contentInner\n    }, React.createElement(\"div\", {\n      ref: this._allowScrollOnPanel,\n      className: _classNames.scrollableContent,\n      \"data-is-scrollable\": true\n    }, React.createElement(\"div\", {\n      className: _classNames.commands,\n      \"data-is-visible\": true\n    }, onRenderNavigation(this.props, this._onRenderNavigation)), (this._hasCustomNavigation || !hasCloseButton) && onRenderHeader(this.props, this._onRenderHeader, this._headerTextId), onRenderBody(this.props, this._onRenderBody), onRenderFooter(this.props, this._onRenderFooter)))))));\n  };\n  PanelBase.prototype.open = function () {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n    if (this.isActive) {\n      return;\n    }\n    this.setState({\n      visibility: PanelVisibilityState.animatingOpen\n    });\n  };\n  PanelBase.prototype.close = function () {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n    if (!this.isActive) {\n      return;\n    }\n    this.setState({\n      visibility: PanelVisibilityState.animatingClosed\n    });\n  };\n  Object.defineProperty(PanelBase.prototype, \"isActive\", {\n    /** isActive is true when panel is open or opening. */\n    get: function () {\n      return this.state.visibility === PanelVisibilityState.open || this.state.visibility === PanelVisibilityState.animatingOpen;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PanelBase.prototype._shouldListenForOuterClick = function (props) {\n    return !!props.isBlocking && !!props.isOpen;\n  };\n  PanelBase.prototype._updateFooterPosition = function () {\n    var scrollableContent = this._scrollableContent;\n    if (scrollableContent) {\n      var height = scrollableContent.clientHeight;\n      var innerHeight_1 = scrollableContent.scrollHeight;\n      this.setState({\n        isFooterSticky: height < innerHeight_1 ? true : false\n      });\n    }\n  };\n  PanelBase.prototype._dismissOnOuterClick = function (ev) {\n    var panel = this._panel.current;\n    if (this.isActive && panel && !ev.defaultPrevented) {\n      if (!elementContains(panel, ev.target)) {\n        if (this.props.onOuterClick) {\n          this.props.onOuterClick(ev);\n        } else {\n          this.dismiss(ev);\n        }\n      }\n    }\n  };\n  PanelBase.defaultProps = {\n    isHiddenOnDismiss: false,\n    isOpen: undefined,\n    isBlocking: true,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar\n  };\n  return PanelBase;\n}(React.Component);\nexport { PanelBase };","map":{"version":3,"names":["React","IconButton","Layer","Overlay","Popup","allowScrollOnElement","allowOverscrollOnElement","classNamesFunction","divProperties","elementContains","getId","getNativeProps","getRTL","css","warnDeprecations","Async","EventGroup","initializeComponentRef","FocusTrapZone","PanelType","getClassNames","COMPONENT_NAME","PanelVisibilityState","PanelBase","_super","__extends","props","_this","call","_panel","createRef","_animationCallback","_hasCustomNavigation","onRenderNavigation","onRenderNavigationContent","dismiss","ev","onDismiss","isActive","defaultPrevented","close","_allowScrollOnPanel","elt","_allowTouchBodyScroll","_events","off","_scrollableContent","_onRenderNavigation","hasCloseButton","_a","_onRenderNavigationContent","createElement","className","_classNames","navigation","closeButtonAriaLabel","_b","onRenderHeader","_onRenderHeader","iconButtonStyles","subComponentStyles","closeButton","Fragment","_headerTextId","styles","onClick","_onPanelClick","ariaLabel","title","iconProps","iconName","defaultRender","headerTextId","headerText","headerTextProps","header","__assign","id","role","_onRenderBody","content","children","_onRenderFooter","onRenderFooterContent","footer","footerInner","_animateTo","newVisibilityState","open","onOpen","_async","setTimeout","setState","visibility","_onTransitionComplete","_clearExistingAnimationTimer","clearTimeout","_updateFooterPosition","onOpened","closed","onDismissed","allowTouchBodyScroll","ignoreExternalFocusing","forceFocusInsideTrap","firstFocusableSelector","state","isFooterSticky","getDerivedStateFromProps","nextProps","prevState","isOpen","undefined","animatingClosed","animatingOpen","prototype","componentDidMount","on","window","_shouldListenForOuterClick","document","body","_dismissOnOuterClick","componentDidUpdate","previousProps","previousState","shouldListenOnOuterClick","previousShouldListenOnOuterClick","componentWillUnmount","dispose","render","elementToFocusOnDismiss","focusTrapZoneProps","_c","headerClassName","isBlocking","isFooterAtBottom","isLightDismiss","isHiddenOnDismiss","layerProps","overlayProps","popupProps","type","theme","customWidth","_d","onLightDismissClick","_e","_f","_g","onRenderBody","_h","onRenderFooter","_j","isLeft","smallFixedNear","customNear","isRTL","isOnRightSide","customWidthStyles","custom","width","nativeProps","isAnimating","focusTrapZoneClassName","hasCustomNavigation","_k","overlay","isDarkThemed","ariaLabelledBy","hiddenPanel","enableAriaHiddenSiblings","ref","root","isClickableOutsideFocusTrap","main","style","contentInner","scrollableContent","commands","Object","defineProperty","get","height","clientHeight","innerHeight_1","scrollHeight","panel","current","target","onOuterClick","defaultProps","smallFixedFar","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Panel/Panel.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport {\n  allowScrollOnElement,\n  allowOverscrollOnElement,\n  classNamesFunction,\n  divProperties,\n  elementContains,\n  getId,\n  getNativeProps,\n  getRTL,\n  css,\n  warnDeprecations,\n  Async,\n  EventGroup,\n  initializeComponentRef,\n} from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { PanelType } from './Panel.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IPanel, IPanelProps, IPanelStyleProps, IPanelStyles } from './Panel.types';\n\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\nconst COMPONENT_NAME = 'Panel';\n\nenum PanelVisibilityState {\n  closed,\n  animatingOpen,\n  open,\n  animatingClosed,\n}\n\ninterface IPanelState {\n  isFooterSticky?: boolean;\n  id?: string;\n  visibility: PanelVisibilityState;\n}\n\nexport class PanelBase extends React.Component<IPanelProps, IPanelState> implements IPanel {\n  public static defaultProps: IPanelProps = {\n    isHiddenOnDismiss: false,\n    isOpen: undefined,\n    isBlocking: true,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar,\n  };\n\n  private _async: Async;\n  private _events: EventGroup;\n  private _panel = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\n  private _scrollableContent: HTMLDivElement | null;\n  private _animationCallback: number | null = null;\n  private _hasCustomNavigation: boolean = !!(this.props.onRenderNavigation || this.props.onRenderNavigationContent);\n  private _headerTextId: string | undefined;\n  private _allowTouchBodyScroll: boolean;\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IPanelProps>,\n    prevState: Readonly<IPanelState>,\n  ): Partial<IPanelState> | null {\n    if (nextProps.isOpen === undefined) {\n      return null; // no state update\n    }\n    if (\n      nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.closed ||\n        prevState.visibility === PanelVisibilityState.animatingClosed)\n    ) {\n      return { visibility: PanelVisibilityState.animatingOpen };\n    }\n    if (\n      !nextProps.isOpen &&\n      (prevState.visibility === PanelVisibilityState.open ||\n        prevState.visibility === PanelVisibilityState.animatingOpen)\n    ) {\n      return { visibility: PanelVisibilityState.animatingClosed };\n    }\n    return null;\n  }\n\n  constructor(props: IPanelProps) {\n    super(props);\n\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      ignoreExternalFocusing: 'focusTrapZoneProps',\n      forceFocusInsideTrap: 'focusTrapZoneProps',\n      firstFocusableSelector: 'focusTrapZoneProps',\n    });\n\n    this.state = {\n      isFooterSticky: false,\n      // intentionally ignore props so animation takes place during componentDidMount\n      visibility: PanelVisibilityState.closed,\n      id: getId('Panel'),\n    };\n  }\n\n  public componentDidMount(): void {\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n\n    this._events.on(window, 'resize', this._updateFooterPosition);\n\n    if (this._shouldListenForOuterClick(this.props)) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n\n    if (this.props.isOpen) {\n      this.setState({ visibility: PanelVisibilityState.animatingOpen });\n    }\n  }\n\n  public componentDidUpdate(previousProps: IPanelProps, previousState: IPanelState): void {\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n\n    if (this.state.visibility !== previousState.visibility) {\n      this._clearExistingAnimationTimer();\n      if (this.state.visibility === PanelVisibilityState.animatingOpen) {\n        this._animateTo(PanelVisibilityState.open);\n      } else if (this.state.visibility === PanelVisibilityState.animatingClosed) {\n        this._animateTo(PanelVisibilityState.closed);\n      }\n    }\n\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className = '',\n      elementToFocusOnDismiss,\n      /* eslint-disable deprecation/deprecation */\n      firstFocusableSelector,\n      focusTrapZoneProps,\n      forceFocusInsideTrap,\n      hasCloseButton,\n      headerText,\n      headerClassName = '',\n      ignoreExternalFocusing,\n      isBlocking,\n      isFooterAtBottom,\n      isLightDismiss,\n      isHiddenOnDismiss,\n      layerProps,\n      overlayProps,\n      popupProps,\n      type,\n      styles,\n      theme,\n      customWidth,\n      onLightDismissClick = this._onPanelClick,\n      onRenderNavigation = this._onRenderNavigation,\n      onRenderHeader = this._onRenderHeader,\n      onRenderBody = this._onRenderBody,\n      onRenderFooter = this._onRenderFooter,\n    } = this.props;\n    const { isFooterSticky, visibility, id } = this.state;\n    const isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n    const isRTL = getRTL(theme);\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\n    const customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const isOpen = this.isActive;\n    const isAnimating =\n      visibility === PanelVisibilityState.animatingClosed || visibility === PanelVisibilityState.animatingOpen;\n\n    this._headerTextId = headerText && id + '-headerText';\n\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n      return null;\n    }\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n      hasCloseButton,\n      headerClassName,\n      isAnimating,\n      isFooterSticky,\n      isFooterAtBottom,\n      isOnRightSide,\n      isOpen,\n      isHiddenOnDismiss,\n      type,\n      hasCustomNavigation: this._hasCustomNavigation,\n    });\n\n    const { _classNames, _allowTouchBodyScroll } = this;\n\n    let overlay;\n    if (isBlocking && isOpen) {\n      overlay = (\n        <Overlay\n          className={_classNames.overlay}\n          isDarkThemed={false}\n          onClick={isLightDismiss ? onLightDismissClick : undefined}\n          allowTouchBodyScroll={_allowTouchBodyScroll}\n          {...overlayProps}\n        />\n      );\n    }\n\n    return (\n      <Layer {...layerProps}>\n        <Popup\n          role=\"dialog\"\n          aria-modal={isBlocking ? 'true' : undefined}\n          ariaLabelledBy={this._headerTextId ? this._headerTextId : undefined}\n          onDismiss={this.dismiss}\n          className={_classNames.hiddenPanel}\n          enableAriaHiddenSiblings={isOpen ? true : false}\n          {...popupProps}\n        >\n          <div aria-hidden={!isOpen && isAnimating} {...nativeProps} ref={this._panel} className={_classNames.root}>\n            {overlay}\n            <FocusTrapZone\n              ignoreExternalFocusing={ignoreExternalFocusing}\n              forceFocusInsideTrap={!isBlocking || (isHiddenOnDismiss && !isOpen) ? false : forceFocusInsideTrap}\n              firstFocusableSelector={firstFocusableSelector}\n              isClickableOutsideFocusTrap={true}\n              {...focusTrapZoneProps}\n              className={_classNames.main}\n              style={customWidthStyles}\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\n            >\n              <div className={_classNames.contentInner}>\n                <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent} data-is-scrollable={true}>\n                  <div className={_classNames.commands} data-is-visible={true}>\n                    {onRenderNavigation(this.props, this._onRenderNavigation)}\n                  </div>\n                  {(this._hasCustomNavigation || !hasCloseButton) &&\n                    onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n                  {onRenderBody(this.props, this._onRenderBody)}\n                  {onRenderFooter(this.props, this._onRenderFooter)}\n                </div>\n              </div>\n            </FocusTrapZone>\n          </div>\n        </Popup>\n      </Layer>\n    );\n  }\n\n  public open() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingOpen });\n  }\n\n  public close() {\n    if (this.props.isOpen !== undefined) {\n      return;\n    }\n\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState({ visibility: PanelVisibilityState.animatingClosed });\n  }\n\n  public dismiss = (ev?: React.SyntheticEvent<HTMLElement> | KeyboardEvent): void => {\n    if (this.props.onDismiss && this.isActive) {\n      this.props.onDismiss(ev);\n    }\n\n    if (!ev || (ev && !ev.defaultPrevented)) {\n      this.close();\n    }\n  };\n\n  /** isActive is true when panel is open or opening. */\n  public get isActive(): boolean {\n    return (\n      this.state.visibility === PanelVisibilityState.open ||\n      this.state.visibility === PanelVisibilityState.animatingOpen\n    );\n  }\n\n  // Allow the user to scroll within the panel but not on the body\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\n    if (elt) {\n      if (this._allowTouchBodyScroll) {\n        allowOverscrollOnElement(elt, this._events);\n      } else {\n        allowScrollOnElement(elt, this._events);\n      }\n    } else {\n      this._events.off(this._scrollableContent);\n    }\n    this._scrollableContent = elt;\n  };\n\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\n    return !!props.isBlocking && !!props.isOpen;\n  }\n\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\n    if (!this.props.onRenderNavigationContent && !this.props.onRenderNavigation && !this.props.hasCloseButton) {\n      return null;\n    }\n    const { onRenderNavigationContent = this._onRenderNavigationContent } = this.props;\n    return (\n      <div className={this._classNames.navigation}>\n        {onRenderNavigationContent(props, this._onRenderNavigationContent)}\n      </div>\n    );\n  };\n\n  private _onRenderNavigationContent = (props: IPanelProps): JSX.Element | null => {\n    const { closeButtonAriaLabel, hasCloseButton, onRenderHeader = this._onRenderHeader } = props;\n    if (hasCloseButton) {\n      const iconButtonStyles = this._classNames.subComponentStyles?.closeButton();\n\n      return (\n        <>\n          {!this._hasCustomNavigation && onRenderHeader(this.props, this._onRenderHeader, this._headerTextId)}\n          <IconButton\n            styles={iconButtonStyles}\n            className={this._classNames.closeButton}\n            onClick={this._onPanelClick}\n            ariaLabel={closeButtonAriaLabel}\n            title={closeButtonAriaLabel}\n            data-is-visible={true}\n            iconProps={{ iconName: 'Cancel' }}\n          />\n        </>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderHeader = (\n    props: IPanelProps,\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\n    headerTextId?: string | undefined,\n  ): JSX.Element | null => {\n    const { headerText, headerTextProps = {} } = props;\n\n    if (headerText) {\n      return (\n        <div className={this._classNames.header}>\n          <div\n            id={headerTextId}\n            role=\"heading\"\n            aria-level={1}\n            {...headerTextProps}\n            className={css(this._classNames.headerText, headerTextProps.className)}\n          >\n            {headerText}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\n    return <div className={this._classNames.content}>{props.children}</div>;\n  };\n\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\n    const { onRenderFooterContent = null } = this.props;\n    if (onRenderFooterContent) {\n      return (\n        <div className={this._classNames.footer}>\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _updateFooterPosition(): void {\n    const scrollableContent = this._scrollableContent;\n    if (scrollableContent) {\n      const height = scrollableContent.clientHeight;\n      const innerHeight = scrollableContent.scrollHeight;\n\n      this.setState({\n        isFooterSticky: height < innerHeight ? true : false,\n      });\n    }\n  }\n\n  private _dismissOnOuterClick(ev: React.MouseEvent<HTMLDivElement>): void {\n    const panel = this._panel.current;\n    if (this.isActive && panel && !ev.defaultPrevented) {\n      if (!elementContains(panel, ev.target as HTMLElement)) {\n        if (this.props.onOuterClick) {\n          this.props.onOuterClick(ev);\n        } else {\n          this.dismiss(ev);\n        }\n      }\n    }\n  }\n\n  private _animateTo = (newVisibilityState: PanelVisibilityState): void => {\n    if (newVisibilityState === PanelVisibilityState.open && this.props.onOpen) {\n      this.props.onOpen();\n    }\n\n    this._animationCallback = this._async.setTimeout(() => {\n      this.setState({ visibility: newVisibilityState });\n      this._onTransitionComplete(newVisibilityState);\n    }, 200);\n  };\n\n  private _clearExistingAnimationTimer = (): void => {\n    if (this._animationCallback !== null) {\n      this._async.clearTimeout(this._animationCallback);\n    }\n  };\n\n  private _onPanelClick = (ev?: any): void => {\n    this.dismiss(ev);\n  };\n\n  private _onTransitionComplete = (newVisibilityState: PanelVisibilityState): void => {\n    this._updateFooterPosition();\n    if (newVisibilityState === PanelVisibilityState.open && this.props.onOpened) {\n      this.props.onOpened();\n    }\n\n    if (newVisibilityState === PanelVisibilityState.closed && this.props.onDismissed) {\n      this.props.onDismissed();\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}