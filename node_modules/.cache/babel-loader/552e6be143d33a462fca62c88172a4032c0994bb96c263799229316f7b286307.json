{"ast":null,"code":"import { renderThemeProvider as render } from './renderThemeProvider';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { getPropsWithDefaults } from '@fluentui/utilities';\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport var useThemeProvider = function (props, defaultProps) {\n  var state = getPropsWithDefaults(defaultProps, props);\n  // Apply changes to state.\n  useThemeProviderState(state);\n  return {\n    state: state,\n    render: render\n  };\n};","map":{"version":3,"names":["renderThemeProvider","render","useThemeProviderState","getPropsWithDefaults","useThemeProvider","props","defaultProps","state"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/ThemeProvider/useThemeProvider.tsx"],"sourcesContent":["import { renderThemeProvider as render } from './renderThemeProvider';\nimport { useThemeProviderState } from './useThemeProviderState';\nimport { getPropsWithDefaults } from '@fluentui/utilities';\nimport type { ThemeProviderProps, ThemeProviderState } from './ThemeProvider.types';\n\n/**\n * Returns the ThemeProvider render function and calculated state, given user input, ref, and\n * a set of default prop values.\n */\nexport const useThemeProvider = (props: ThemeProviderProps, defaultProps: ThemeProviderProps) => {\n  const state = getPropsWithDefaults(defaultProps, props) as ThemeProviderState;\n\n  // Apply changes to state.\n  useThemeProviderState(state);\n\n  return {\n    state,\n    render,\n  };\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,IAAIC,MAAM,QAAQ,uBAAuB;AACrE,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,oBAAoB,QAAQ,qBAAqB;AAG1D;;;;AAIA,OAAO,IAAMC,gBAAgB,GAAG,SAAAA,CAACC,KAAyB,EAAEC,YAAgC;EAC1F,IAAMC,KAAK,GAAGJ,oBAAoB,CAACG,YAAY,EAAED,KAAK,CAAuB;EAE7E;EACAH,qBAAqB,CAACK,KAAK,CAAC;EAE5B,OAAO;IACLA,KAAK,EAAAA,KAAA;IACLN,MAAM,EAAAA;GACP;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}