{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nimport { ShimmerElementsGroup } from './ShimmerElementsGroup/ShimmerElementsGroup';\nimport { useSetTimeout, useConst } from '@fluentui/react-hooks';\nvar TRANSITION_ANIMATION_INTERVAL = 200; /* ms */\nvar COMPONENT_NAME = 'Shimmer';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory Shimmer}\n */\nexport var ShimmerBase = React.forwardRef(function (props, ref) {\n  var styles = props.styles,\n    shimmerElements = props.shimmerElements,\n    children = props.children,\n    width = props.width,\n    className = props.className,\n    customElementsGroup = props.customElementsGroup,\n    theme = props.theme,\n    ariaLabel = props.ariaLabel,\n    shimmerColors = props.shimmerColors,\n    _a = props.isDataLoaded,\n    isDataLoaded = _a === void 0 ? false : _a,\n    improveCSSPerformance = props.improveCSSPerformance;\n  var divProps = getNativeProps(props, divProperties);\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    isDataLoaded: isDataLoaded,\n    className: className,\n    transitionAnimationInterval: TRANSITION_ANIMATION_INTERVAL,\n    shimmerColor: shimmerColors && shimmerColors.shimmer,\n    shimmerWaveColor: shimmerColors && shimmerColors.shimmerWave,\n    improveCSSPerformance: improveCSSPerformance || !customElementsGroup\n  });\n  var internalState = useConst({\n    lastTimeoutId: 0\n  });\n  var _b = useSetTimeout(),\n    setTimeout = _b.setTimeout,\n    clearTimeout = _b.clearTimeout;\n  /**\n   * Flag for knowing when to remove the shimmerWrapper from the DOM.\n   */\n  var _c = React.useState(isDataLoaded),\n    contentLoaded = _c[0],\n    setContentLoaded = _c[1];\n  var divStyleProp = {\n    width: width ? width : '100%'\n  };\n  React.useEffect(function () {\n    if (isDataLoaded !== contentLoaded) {\n      if (isDataLoaded) {\n        internalState.lastTimeoutId = setTimeout(function () {\n          setContentLoaded(true);\n        }, TRANSITION_ANIMATION_INTERVAL);\n        return function () {\n          return clearTimeout(internalState.lastTimeoutId);\n        };\n      } else {\n        setContentLoaded(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- Should only run when isDataLoaded changes.\n  }, [isDataLoaded]);\n  return React.createElement(\"div\", __assign({}, divProps, {\n    className: classNames.root,\n    ref: ref\n  }), !contentLoaded && React.createElement(\"div\", {\n    style: divStyleProp,\n    className: classNames.shimmerWrapper\n  }, React.createElement(\"div\", {\n    className: classNames.shimmerGradient\n  }), customElementsGroup ? customElementsGroup : React.createElement(ShimmerElementsGroup, {\n    shimmerElements: shimmerElements,\n    backgroundColor: shimmerColors && shimmerColors.background\n  })), children && React.createElement(\"div\", {\n    className: classNames.dataWrapper\n  }, children), ariaLabel && !isDataLoaded && React.createElement(\"div\", {\n    role: \"status\",\n    \"aria-live\": \"polite\"\n  }, React.createElement(DelayedRender, null, React.createElement(\"div\", {\n    className: classNames.screenReaderText\n  }, ariaLabel))));\n});\nShimmerBase.displayName = COMPONENT_NAME;","map":{"version":3,"names":["React","classNamesFunction","DelayedRender","getNativeProps","divProperties","ShimmerElementsGroup","useSetTimeout","useConst","TRANSITION_ANIMATION_INTERVAL","COMPONENT_NAME","getClassNames","ShimmerBase","forwardRef","props","ref","styles","shimmerElements","children","width","className","customElementsGroup","theme","ariaLabel","shimmerColors","_a","isDataLoaded","improveCSSPerformance","divProps","classNames","transitionAnimationInterval","shimmerColor","shimmer","shimmerWaveColor","shimmerWave","internalState","lastTimeoutId","_b","setTimeout","clearTimeout","_c","useState","contentLoaded","setContentLoaded","divStyleProp","useEffect","createElement","__assign","root","style","shimmerWrapper","shimmerGradient","backgroundColor","background","dataWrapper","role","screenReaderText","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Shimmer/Shimmer.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nimport { ShimmerElementsGroup } from './ShimmerElementsGroup/ShimmerElementsGroup';\nimport { useSetTimeout, useConst } from '@fluentui/react-hooks';\nimport type { IShimmerProps, IShimmerStyleProps, IShimmerStyles } from './Shimmer.types';\n\nconst TRANSITION_ANIMATION_INTERVAL = 200; /* ms */\nconst COMPONENT_NAME = 'Shimmer';\n\nconst getClassNames = classNamesFunction<IShimmerStyleProps, IShimmerStyles>();\n\n/**\n * {@docCategory Shimmer}\n */\nexport const ShimmerBase: React.FunctionComponent<IShimmerProps> = React.forwardRef<HTMLDivElement, IShimmerProps>(\n  (props, ref) => {\n    const {\n      styles,\n      shimmerElements,\n      children,\n      width,\n      className,\n      customElementsGroup,\n      theme,\n      ariaLabel,\n      shimmerColors,\n      isDataLoaded = false,\n      improveCSSPerformance,\n    } = props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n\n    const classNames: { [key in keyof IShimmerStyles]: string } = getClassNames(styles!, {\n      theme: theme!,\n      isDataLoaded,\n      className,\n      transitionAnimationInterval: TRANSITION_ANIMATION_INTERVAL,\n      shimmerColor: shimmerColors && shimmerColors.shimmer,\n      shimmerWaveColor: shimmerColors && shimmerColors.shimmerWave,\n      improveCSSPerformance: improveCSSPerformance || !customElementsGroup,\n    });\n\n    const internalState = useConst({\n      lastTimeoutId: 0,\n    });\n\n    const { setTimeout, clearTimeout } = useSetTimeout();\n\n    /**\n     * Flag for knowing when to remove the shimmerWrapper from the DOM.\n     */\n    const [contentLoaded, setContentLoaded] = React.useState(isDataLoaded);\n\n    const divStyleProp = { width: width ? width : '100%' };\n\n    React.useEffect(() => {\n      if (isDataLoaded !== contentLoaded) {\n        if (isDataLoaded) {\n          internalState.lastTimeoutId = setTimeout(() => {\n            setContentLoaded(true);\n          }, TRANSITION_ANIMATION_INTERVAL);\n\n          return () => clearTimeout(internalState.lastTimeoutId);\n        } else {\n          setContentLoaded(false);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- Should only run when isDataLoaded changes.\n    }, [isDataLoaded]);\n\n    return (\n      <div {...divProps} className={classNames.root} ref={ref}>\n        {!contentLoaded && (\n          <div style={divStyleProp} className={classNames.shimmerWrapper}>\n            <div className={classNames.shimmerGradient} />\n            {customElementsGroup ? (\n              customElementsGroup\n            ) : (\n              <ShimmerElementsGroup\n                shimmerElements={shimmerElements}\n                backgroundColor={shimmerColors && shimmerColors.background}\n              />\n            )}\n          </div>\n        )}\n        {children && <div className={classNames.dataWrapper}>{children}</div>}\n        {ariaLabel && !isDataLoaded && (\n          <div role=\"status\" aria-live=\"polite\">\n            <DelayedRender>\n              <div className={classNames.screenReaderText}>{ariaLabel}</div>\n            </DelayedRender>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\nShimmerBase.displayName = COMPONENT_NAME;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}