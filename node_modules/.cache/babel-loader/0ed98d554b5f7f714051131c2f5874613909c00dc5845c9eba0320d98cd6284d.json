{"ast":null,"code":"import { __assign } from \"tslib\";\n/**\n * Format date to a day string representation\n * @param date - input date to format\n */\nexport var formatDay = function (date) {\n  return date.getDate().toString();\n};\n/**\n * Format date to a month-day-year string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport var formatMonthDayYear = function (date, strings) {\n  return strings.months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n};\n/**\n * Format date to a month-year string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport var formatMonthYear = function (date, strings) {\n  return strings.months[date.getMonth()] + ' ' + date.getFullYear();\n};\n/**\n * Format date to a month string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport var formatMonth = function (date, strings) {\n  return strings.months[date.getMonth()];\n};\n/**\n * Format date to a year string representation\n * @param date - input date to format\n */\nexport var formatYear = function (date) {\n  return date.getFullYear().toString();\n};\nexport var DEFAULT_DATE_GRID_STRINGS = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\nexport var DEFAULT_DATE_FORMATTING = {\n  formatDay: formatDay,\n  formatMonth: formatMonth,\n  formatYear: formatYear,\n  formatMonthDayYear: formatMonthDayYear,\n  formatMonthYear: formatMonthYear\n};\nexport var DEFAULT_CALENDAR_STRINGS = __assign(__assign({}, DEFAULT_DATE_GRID_STRINGS), {\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close',\n  selectedDateFormatString: 'Selected date {0}',\n  todayDateFormatString: \"Today's date {0}\",\n  monthPickerHeaderAriaLabel: '{0}, change year',\n  yearPickerHeaderAriaLabel: '{0}, change month',\n  dayMarkedAriaLabel: 'marked'\n});","map":{"version":3,"names":["formatDay","date","getDate","toString","formatMonthDayYear","strings","months","getMonth","getFullYear","formatMonthYear","formatMonth","formatYear","DEFAULT_DATE_GRID_STRINGS","shortMonths","days","shortDays","DEFAULT_DATE_FORMATTING","DEFAULT_CALENDAR_STRINGS","__assign","goToToday","weekNumberFormatString","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","closeButtonAriaLabel","selectedDateFormatString","todayDateFormatString","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","dayMarkedAriaLabel"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/date-time-utilities/lib/src/dateFormatting/dateFormatting.defaults.ts"],"sourcesContent":["import { IDateGridStrings, IDateFormatting, ICalendarStrings } from './dateFormatting.types';\n\n/**\n * Format date to a day string representation\n * @param date - input date to format\n */\nexport const formatDay = (date: Date) => date.getDate().toString();\n\n/**\n * Format date to a month-day-year string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport const formatMonthDayYear = (date: Date, strings: IDateGridStrings) =>\n  strings.months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n\n/**\n * Format date to a month-year string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport const formatMonthYear = (date: Date, strings: IDateGridStrings) =>\n  strings.months[date.getMonth()] + ' ' + date.getFullYear();\n\n/**\n * Format date to a month string\n * @param date - input date to format\n * @param strings - localized strings\n */\nexport const formatMonth = (date: Date, strings: IDateGridStrings) => strings.months[date.getMonth()];\n\n/**\n * Format date to a year string representation\n * @param date - input date to format\n */\nexport const formatYear = (date: Date) => date.getFullYear().toString();\n\nexport const DEFAULT_DATE_GRID_STRINGS: IDateGridStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n};\n\nexport const DEFAULT_DATE_FORMATTING: IDateFormatting = {\n  formatDay,\n  formatMonth,\n  formatYear,\n  formatMonthDayYear,\n  formatMonthYear,\n};\n\nexport const DEFAULT_CALENDAR_STRINGS: ICalendarStrings = {\n  ...DEFAULT_DATE_GRID_STRINGS,\n\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close',\n  selectedDateFormatString: 'Selected date {0}',\n  todayDateFormatString: \"Today's date {0}\",\n  monthPickerHeaderAriaLabel: '{0}, change year',\n  yearPickerHeaderAriaLabel: '{0}, change month',\n  dayMarkedAriaLabel: 'marked',\n};\n"],"mappings":";AAEA;;;;AAIA,OAAO,IAAMA,SAAS,GAAG,SAAAA,CAACC,IAAU;EAAK,OAAAA,IAAI,CAACC,OAAO,EAAE,CAACC,QAAQ,EAAE;AAAzB,CAAyB;AAElE;;;;;AAKA,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAACH,IAAU,EAAEI,OAAyB;EACtE,OAAAA,OAAO,CAACC,MAAM,CAACL,IAAI,CAACM,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAGN,IAAI,CAACC,OAAO,EAAE,GAAG,IAAI,GAAGD,IAAI,CAACO,WAAW,EAAE;AAAlF,CAAkF;AAEpF;;;;;AAKA,OAAO,IAAMC,eAAe,GAAG,SAAAA,CAACR,IAAU,EAAEI,OAAyB;EACnE,OAAAA,OAAO,CAACC,MAAM,CAACL,IAAI,CAACM,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAGN,IAAI,CAACO,WAAW,EAAE;AAA1D,CAA0D;AAE5D;;;;;AAKA,OAAO,IAAME,WAAW,GAAG,SAAAA,CAACT,IAAU,EAAEI,OAAyB;EAAK,OAAAA,OAAO,CAACC,MAAM,CAACL,IAAI,CAACM,QAAQ,EAAE,CAAC;AAA/B,CAA+B;AAErG;;;;AAIA,OAAO,IAAMI,UAAU,GAAG,SAAAA,CAACV,IAAU;EAAK,OAAAA,IAAI,CAACO,WAAW,EAAE,CAACL,QAAQ,EAAE;AAA7B,CAA6B;AAEvE,OAAO,IAAMS,yBAAyB,GAAqB;EACzDN,MAAM,EAAE,CACN,SAAS,EACT,UAAU,EACV,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,CACX;EACDO,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACjGC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;EACpFC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;CAC9C;AAED,OAAO,IAAMC,uBAAuB,GAAoB;EACtDhB,SAAS,EAAAA,SAAA;EACTU,WAAW,EAAAA,WAAA;EACXC,UAAU,EAAAA,UAAA;EACVP,kBAAkB,EAAAA,kBAAA;EAClBK,eAAe,EAAAA;CAChB;AAED,OAAO,IAAMQ,wBAAwB,GAAAC,QAAA,CAAAA,QAAA,KAChCN,yBAAyB;EAE5BO,SAAS,EAAE,aAAa;EACxBC,sBAAsB,EAAE,iBAAiB;EACzCC,kBAAkB,EAAE,gBAAgB;EACpCC,kBAAkB,EAAE,YAAY;EAChCC,iBAAiB,EAAE,eAAe;EAClCC,iBAAiB,EAAE,WAAW;EAC9BC,sBAAsB,EAAE,qBAAqB;EAC7CC,sBAAsB,EAAE,iBAAiB;EACzCC,oBAAoB,EAAE,OAAO;EAC7BC,wBAAwB,EAAE,mBAAmB;EAC7CC,qBAAqB,EAAE,kBAAkB;EACzCC,0BAA0B,EAAE,kBAAkB;EAC9CC,yBAAyB,EAAE,mBAAmB;EAC9CC,kBAAkB,EAAE;AAAQ,EAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}