{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, composeRenderFunction, getPropsWithDefaults } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\nvar DEFAULT_PROPS = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: {\n    width: 32,\n    height: 32\n  }\n};\nexport var ChoiceGroupOptionBase = function (propsWithoutDefaults) {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  var props = getPropsWithDefaults(__assign(__assign({}, DEFAULT_PROPS), {\n    key: propsWithoutDefaults.itemKey\n  }), propsWithoutDefaults);\n  var ariaLabel = props.ariaLabel,\n    focused = props.focused,\n    required = props.required,\n    theme = props.theme,\n    iconProps = props.iconProps,\n    imageSrc = props.imageSrc,\n    imageSize = props.imageSize,\n    disabled = props.disabled,\n    checked = props.checked,\n    id = props.id,\n    styles = props.styles,\n    name = props.name,\n    rest = __rest(props, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\"]);\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked: checked,\n    disabled: disabled,\n    imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n    imageSize: imageSize,\n    focused: focused\n  });\n  var _a = getNativeProps(rest, inputProperties),\n    className = _a.className,\n    nativeProps = __rest(_a, [\"className\"]);\n  var defaultOnRenderLabel = function () {\n    return React.createElement(\"span\", {\n      id: props.labelId,\n      className: \"ms-ChoiceFieldLabel\"\n    }, props.text);\n  };\n  var defaultOnRenderField = function () {\n    var _a = props.imageAlt,\n      imageAlt = _a === void 0 ? '' : _a,\n      selectedImageSrc = props.selectedImageSrc;\n    var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel) : defaultOnRenderLabel;\n    var label = onRenderLabel(__assign(__assign({}, props), {\n      key: props.itemKey\n    }));\n    return React.createElement(\"label\", {\n      htmlFor: id,\n      className: classNames.field\n    }, imageSrc && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.imageWrapper\n    }, React.createElement(Image, __assign({\n      src: imageSrc,\n      alt: imageAlt\n    }, imageSize))), React.createElement(\"div\", {\n      className: classNames.selectedImageWrapper\n    }, React.createElement(Image, __assign({\n      src: selectedImageSrc,\n      alt: imageAlt\n    }, imageSize)))), iconProps && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.iconWrapper\n    }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n      className: classNames.labelWrapper\n    }, label) : label);\n  };\n  var _b = props.onRenderField,\n    onRenderField = _b === void 0 ? defaultOnRenderField : _b;\n  var onChange = function (evt) {\n    var _a;\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, evt, __assign(__assign({}, props), {\n      key: props.itemKey\n    }));\n  };\n  var onBlur = function (evt) {\n    var _a;\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n  };\n  var onFocus = function (evt) {\n    var _a;\n    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt, __assign(__assign({}, props), {\n      key: props.itemKey\n    }));\n  };\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(\"div\", {\n    className: classNames.choiceFieldWrapper\n  }, React.createElement(\"input\", __assign({\n    \"aria-label\": ariaLabel,\n    id: id,\n    className: css(classNames.input, className),\n    type: \"radio\",\n    name: name,\n    disabled: disabled,\n    checked: checked,\n    required: required\n  }, nativeProps, {\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), onRenderField(__assign(__assign({}, props), {\n    key: props.itemKey\n  }), defaultOnRenderField)));\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';","map":{"version":3,"names":["React","Image","Icon","classNamesFunction","getNativeProps","inputProperties","css","composeRenderFunction","getPropsWithDefaults","getClassNames","LARGE_IMAGE_SIZE","DEFAULT_PROPS","imageSize","width","height","ChoiceGroupOptionBase","propsWithoutDefaults","props","__assign","key","itemKey","ariaLabel","focused","required","theme","iconProps","imageSrc","disabled","checked","id","styles","name","rest","__rest","classNames","hasIcon","hasImage","imageIsLarge","_a","className","nativeProps","defaultOnRenderLabel","createElement","labelId","text","defaultOnRenderField","imageAlt","selectedImageSrc","onRenderLabel","label","htmlFor","field","innerField","imageWrapper","src","alt","selectedImageWrapper","iconWrapper","labelWrapper","_b","onRenderField","onChange","evt","call","onBlur","onFocus","root","choiceFieldWrapper","input","type","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n  css,\n  composeRenderFunction,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport type {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\nconst DEFAULT_PROPS: Partial<IChoiceGroupOptionProps> = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: { width: 32, height: 32 },\n};\n\nexport const ChoiceGroupOptionBase: React.FunctionComponent<IChoiceGroupOptionProps> = propsWithoutDefaults => {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  const props = getPropsWithDefaults({ ...DEFAULT_PROPS, key: propsWithoutDefaults.itemKey }, propsWithoutDefaults);\n\n  const {\n    ariaLabel,\n    focused,\n    required,\n    theme,\n    iconProps,\n    imageSrc,\n    imageSize,\n    disabled,\n    checked,\n    id,\n    styles,\n    name,\n    ...rest\n  } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked,\n    disabled,\n    imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n    imageSize,\n    focused,\n  });\n\n  const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n  const defaultOnRenderLabel = (): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n\n  const defaultOnRenderField = (): JSX.Element => {\n    const { imageAlt = '', selectedImageSrc } = props;\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n      : defaultOnRenderLabel;\n\n    const label = onRenderLabel({ ...props, key: props.itemKey });\n\n    return (\n      <label htmlFor={id} className={classNames.field}>\n        {imageSrc && (\n          <div className={classNames.innerField}>\n            <div className={classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n            <div className={classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={classNames.innerField}>\n            <div className={classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  const { onRenderField = defaultOnRenderField } = props;\n\n  const onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    props.onChange?.(evt, { ...props, key: props.itemKey });\n  };\n\n  const onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onBlur?.(evt);\n  };\n\n  const onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onFocus?.(evt, { ...props, key: props.itemKey });\n  };\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.choiceFieldWrapper}>\n        <input\n          aria-label={ariaLabel}\n          id={id}\n          className={css(classNames.input, className)}\n          type=\"radio\"\n          name={name}\n          disabled={disabled}\n          checked={checked}\n          required={required}\n          {...nativeProps}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {onRenderField({ ...props, key: props.itemKey }, defaultOnRenderField)}\n      </div>\n    </div>\n  );\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}