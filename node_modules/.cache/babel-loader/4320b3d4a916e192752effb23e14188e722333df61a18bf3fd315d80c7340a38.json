{"ast":null,"code":"var _a;\nimport { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getClassNames } from './PositioningContainer.styles';\nimport { ZIndexes } from '../../../Styling';\nimport { Layer } from '../../../Layer';\n// Utilites/Helpers\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { css, elementContains, focusFirstChild, EventGroup, getPropsWithDefaults } from '../../../Utilities';\nimport { getMaxHeight, positionElement, RectangleEdge } from '../../../Positioning';\nimport { AnimationClassNames, mergeStyles } from '../../../Styling';\nimport { useMergedRefs, useAsync, useTarget } from '@fluentui/react-hooks';\nvar OFF_SCREEN_STYLE = {\n  opacity: 0\n};\n// In order for some of the max height logic to work properly we need to set the border.\n// The value is arbitrary.\nvar BORDER_WIDTH = 1;\nvar SLIDE_ANIMATIONS = (_a = {}, _a[RectangleEdge.top] = 'slideUpIn20', _a[RectangleEdge.bottom] = 'slideDownIn20', _a[RectangleEdge.left] = 'slideLeftIn20', _a[RectangleEdge.right] = 'slideRightIn20', _a);\nvar DEFAULT_PROPS = {\n  preventDismissOnScroll: false,\n  offsetFromTarget: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge\n};\nfunction useBounds(props, targetWindow) {\n  /** The bounds used when determining if and where the PositioningContainer should be placed. */\n  var getBounds = function () {\n    var currentBounds = props.bounds;\n    if (!currentBounds) {\n      currentBounds = {\n        top: 0 + props.minPagePadding,\n        left: 0 + props.minPagePadding,\n        right: targetWindow.innerWidth - props.minPagePadding,\n        bottom: targetWindow.innerHeight - props.minPagePadding,\n        width: targetWindow.innerWidth - props.minPagePadding * 2,\n        height: targetWindow.innerHeight - props.minPagePadding * 2\n      };\n    }\n    return currentBounds;\n  };\n  return getBounds;\n}\nfunction usePositionState(props, positionedHost, contentHost, targetRef, getCachedBounds) {\n  var async = useAsync();\n  /**\n   * Current set of calculated positions for the outermost parent container.\n   */\n  var _a = React.useState(),\n    positions = _a[0],\n    setPositions = _a[1];\n  var positionAttempts = React.useRef(0);\n  var updateAsyncPosition = function () {\n    async.requestAnimationFrame(function () {\n      return updatePosition();\n    });\n  };\n  var updatePosition = function () {\n    var offsetFromTarget = props.offsetFromTarget,\n      onPositioned = props.onPositioned;\n    var hostElement = positionedHost.current;\n    var positioningContainerElement = contentHost.current;\n    if (hostElement && positioningContainerElement) {\n      var currentProps = __assign({}, props);\n      currentProps.bounds = getCachedBounds();\n      currentProps.target = targetRef.current;\n      var target = currentProps.target;\n      if (target) {\n        // Check if the target is an Element or a MouseEvent and the document contains it\n        // or don't check anything else if the target is a Point or Rectangle\n        if (!target.getBoundingClientRect && !target.preventDefault || document.body.contains(target)) {\n          currentProps.gapSpace = offsetFromTarget;\n          var newPositions = positionElement(currentProps, hostElement, positioningContainerElement);\n          // Set the new position only when the positions are not exists or one of the new positioningContainer\n          // positions are different. The position should not change if the position is within 2 decimal places.\n          if (!positions && newPositions || positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5) {\n            // We should not reposition the positioningContainer more than a few times, if it is then the content is\n            // likely resizing and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n            onPositioned === null || onPositioned === void 0 ? void 0 : onPositioned(newPositions);\n          } else {\n            positionAttempts.current = 0;\n            onPositioned === null || onPositioned === void 0 ? void 0 : onPositioned(newPositions);\n          }\n        } else if (positions !== undefined) {\n          setPositions(undefined);\n        }\n      } else if (positions !== undefined) {\n        setPositions(undefined);\n      }\n    }\n  };\n  React.useEffect(updateAsyncPosition);\n  return [positions, updateAsyncPosition];\n}\nfunction useSetInitialFocus(_a, contentHost, positions) {\n  var setInitialFocus = _a.setInitialFocus;\n  var didSetInitialFocus = React.useRef(false);\n  React.useEffect(function () {\n    if (!didSetInitialFocus.current && contentHost.current && setInitialFocus && positions) {\n      didSetInitialFocus.current = true;\n      focusFirstChild(contentHost.current);\n    }\n  });\n}\nfunction useMaxHeight(_a, targetRef, getCachedBounds) {\n  var directionalHintFixed = _a.directionalHintFixed,\n    offsetFromTarget = _a.offsetFromTarget,\n    directionalHint = _a.directionalHint,\n    target = _a.target;\n  /**\n   * The maximum height the PositioningContainer can grow to\n   * without going beyond the window or target bounds\n   */\n  var maxHeight = React.useRef();\n  // If the target element changed, reset the max height. If we are tracking\n  // target with class name, always reset because we do not know if\n  // fabric has rendered a new element and disposed the old element.\n  if (typeof target === 'string') {\n    maxHeight.current = undefined;\n  }\n  React.useEffect(function () {\n    maxHeight.current = undefined;\n  }, [target, offsetFromTarget]);\n  /**\n   * Return the maximum height the container can grow to\n   * without going out of the specified bounds\n   */\n  var getCachedMaxHeight = function () {\n    if (!maxHeight.current) {\n      if (directionalHintFixed && targetRef.current) {\n        var gapSpace = offsetFromTarget ? offsetFromTarget : 0;\n        maxHeight.current = getMaxHeight(targetRef.current, directionalHint, gapSpace, getCachedBounds());\n      } else {\n        maxHeight.current = getCachedBounds().height - BORDER_WIDTH * 2;\n      }\n    }\n    return maxHeight.current;\n  };\n  return getCachedMaxHeight;\n}\nfunction useAutoDismissEvents(_a, positionedHost, targetWindow, targetRef, positions, updateAsyncPosition) {\n  var onDismiss = _a.onDismiss,\n    preventDismissOnScroll = _a.preventDismissOnScroll;\n  var async = useAsync();\n  var onResize = React.useCallback(function (ev) {\n    if (onDismiss) {\n      onDismiss(ev);\n    } else {\n      updateAsyncPosition();\n    }\n  }, [onDismiss, updateAsyncPosition]);\n  var dismissOnLostFocus = React.useCallback(function (ev) {\n    var target = ev.target;\n    var clickedOutsideCallout = positionedHost.current && !elementContains(positionedHost.current, target);\n    if (!targetRef.current && clickedOutsideCallout || ev.target !== targetWindow && clickedOutsideCallout && (targetRef.current.stopPropagation || !targetRef.current || target !== targetRef.current && !elementContains(targetRef.current, target))) {\n      onResize(ev);\n    }\n  }, [onResize, positionedHost, targetRef, targetWindow]);\n  var dismissOnScroll = React.useCallback(function (ev) {\n    if (positions && !preventDismissOnScroll) {\n      dismissOnLostFocus(ev);\n    }\n  }, [dismissOnLostFocus, positions, preventDismissOnScroll]);\n  React.useEffect(function () {\n    var events = new EventGroup({});\n    // This is added so the positioningContainer will dismiss when the window is scrolled\n    // but not when something inside the positioningContainer is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the positioningContainer.\n    async.setTimeout(function () {\n      var _a, _b;\n      events.on(targetWindow, 'scroll', async.throttle(dismissOnScroll, 10), true);\n      events.on(targetWindow, 'resize', async.throttle(onResize, 10), true);\n      events.on((_a = targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document) === null || _a === void 0 ? void 0 : _a.body, 'focus', dismissOnLostFocus, true);\n      events.on((_b = targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document) === null || _b === void 0 ? void 0 : _b.body, 'click', dismissOnLostFocus, true);\n    }, 0);\n    return function () {\n      return events.dispose();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, [dismissOnScroll]);\n}\nexport function useHeightOffset(_a, contentHost) {\n  var finalHeight = _a.finalHeight;\n  /**\n   * Tracks the current height offset and updates during\n   * the height animation when props.finalHeight is specified.\n   * State stored as object to ensure re-render even if the value does not change.\n   *  See https://github.com/microsoft/fluentui/issues/23545\n   */\n  var _b = React.useState({\n      value: 0\n    }),\n    heightOffset = _b[0],\n    setHeightOffset = _b[1];\n  var async = useAsync();\n  var setHeightOffsetTimer = React.useRef(0);\n  /** Animates the height if finalHeight was given. */\n  var setHeightOffsetEveryFrame = function () {\n    if (contentHost && finalHeight) {\n      setHeightOffsetTimer.current = async.requestAnimationFrame(function () {\n        if (!contentHost.current) {\n          return;\n        }\n        var positioningContainerMainElem = contentHost.current.lastChild;\n        var cardScrollHeight = positioningContainerMainElem.scrollHeight;\n        var cardCurrHeight = positioningContainerMainElem.offsetHeight;\n        var scrollDiff = cardScrollHeight - cardCurrHeight;\n        setHeightOffset({\n          value: heightOffset.value + scrollDiff\n        });\n        if (positioningContainerMainElem.offsetHeight < finalHeight) {\n          setHeightOffsetEveryFrame();\n        } else {\n          async.cancelAnimationFrame(setHeightOffsetTimer.current);\n        }\n      });\n    }\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only re-run if finalHeight changes\n  React.useEffect(setHeightOffsetEveryFrame, [finalHeight]);\n  return heightOffset.value;\n}\nexport var PositioningContainer = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  // @TODO rename to reflect the name of this class\n  var contentHost = React.useRef(null);\n  /**\n   * The primary positioned div.\n   */\n  var positionedHost = React.useRef(null);\n  var rootRef = useMergedRefs(forwardedRef, positionedHost);\n  var _a = useTarget(props.target, positionedHost),\n    targetRef = _a[0],\n    targetWindow = _a[1];\n  var getCachedBounds = useBounds(props, targetWindow);\n  var _b = usePositionState(props, positionedHost, contentHost, targetRef, getCachedBounds),\n    positions = _b[0],\n    updateAsyncPosition = _b[1];\n  var getCachedMaxHeight = useMaxHeight(props, targetRef, getCachedBounds);\n  var heightOffset = useHeightOffset(props, contentHost);\n  useSetInitialFocus(props, contentHost, positions);\n  useAutoDismissEvents(props, positionedHost, targetWindow, targetRef, positions, updateAsyncPosition);\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on initial render\n  React.useEffect(function () {\n    var _a;\n    return (_a = props.onLayerMounted) === null || _a === void 0 ? void 0 : _a.call(props);\n  }, []);\n  // If there is no target window then we are likely in server side rendering and we should not render anything.\n  if (!targetWindow) {\n    return null;\n  }\n  var className = props.className,\n    doNotLayer = props.doNotLayer,\n    positioningContainerWidth = props.positioningContainerWidth,\n    positioningContainerMaxHeight = props.positioningContainerMaxHeight,\n    children = props.children;\n  var styles = getClassNames();\n  var directionalClassName = positions && positions.targetEdge ? AnimationClassNames[SLIDE_ANIMATIONS[positions.targetEdge]] : '';\n  var getContentMaxHeight = getCachedMaxHeight() + heightOffset;\n  var contentMaxHeight = positioningContainerMaxHeight && positioningContainerMaxHeight > getContentMaxHeight ? getContentMaxHeight : positioningContainerMaxHeight;\n  var content = React.createElement(\"div\", {\n    ref: rootRef,\n    className: css('ms-PositioningContainer', styles.container)\n  }, React.createElement(\"div\", {\n    className: mergeStyles('ms-PositioningContainer-layerHost', styles.root, className, directionalClassName, !!positioningContainerWidth && {\n      width: positioningContainerWidth\n    }, doNotLayer && {\n      zIndex: ZIndexes.Layer\n    }),\n    style: positions ? positions.elementPosition : OFF_SCREEN_STYLE,\n    // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n    // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n    tabIndex: -1,\n    ref: contentHost\n  }, children,\n  // @TODO apply to the content container\n  contentMaxHeight));\n  return doNotLayer ? content : React.createElement(Layer, __assign({}, props.layerProps), content);\n});\nPositioningContainer.displayName = 'PositioningContainer';\nfunction arePositionsEqual(positions, newPosition) {\n  return comparePositions(positions.elementPosition, newPosition.elementPosition);\n}\nfunction comparePositions(oldPositions, newPositions) {\n  for (var key in newPositions) {\n    if (newPositions.hasOwnProperty(key)) {\n      var oldPositionEdge = oldPositions[key];\n      var newPositionEdge = newPositions[key];\n      if (oldPositionEdge && newPositionEdge) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["React","getClassNames","ZIndexes","Layer","DirectionalHint","css","elementContains","focusFirstChild","EventGroup","getPropsWithDefaults","getMaxHeight","positionElement","RectangleEdge","AnimationClassNames","mergeStyles","useMergedRefs","useAsync","useTarget","OFF_SCREEN_STYLE","opacity","BORDER_WIDTH","SLIDE_ANIMATIONS","_a","top","bottom","left","right","DEFAULT_PROPS","preventDismissOnScroll","offsetFromTarget","minPagePadding","directionalHint","bottomAutoEdge","useBounds","props","targetWindow","getBounds","currentBounds","bounds","innerWidth","innerHeight","width","height","usePositionState","positionedHost","contentHost","targetRef","getCachedBounds","async","useState","positions","setPositions","positionAttempts","useRef","updateAsyncPosition","requestAnimationFrame","updatePosition","onPositioned","hostElement","current","positioningContainerElement","currentProps","__assign","target","getBoundingClientRect","preventDefault","document","body","contains","gapSpace","newPositions","arePositionsEqual","undefined","useEffect","useSetInitialFocus","setInitialFocus","didSetInitialFocus","useMaxHeight","directionalHintFixed","maxHeight","getCachedMaxHeight","useAutoDismissEvents","onDismiss","onResize","useCallback","ev","dismissOnLostFocus","clickedOutsideCallout","stopPropagation","dismissOnScroll","events","setTimeout","on","throttle","_b","dispose","useHeightOffset","finalHeight","value","heightOffset","setHeightOffset","setHeightOffsetTimer","setHeightOffsetEveryFrame","positioningContainerMainElem","lastChild","cardScrollHeight","scrollHeight","cardCurrHeight","offsetHeight","scrollDiff","cancelAnimationFrame","PositioningContainer","forwardRef","propsWithoutDefaults","forwardedRef","rootRef","onLayerMounted","call","className","doNotLayer","positioningContainerWidth","positioningContainerMaxHeight","children","styles","directionalClassName","targetEdge","getContentMaxHeight","contentMaxHeight","content","createElement","ref","container","root","zIndex","style","elementPosition","tabIndex","layerProps","displayName","newPosition","comparePositions","oldPositions","key","hasOwnProperty","oldPositionEdge","newPositionEdge","toFixed"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Coachmark/src/components/Coachmark/PositioningContainer/PositioningContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getClassNames } from './PositioningContainer.styles';\nimport { ZIndexes } from '../../../Styling';\nimport { Layer } from '../../../Layer';\n\n// Utilites/Helpers\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { css, elementContains, focusFirstChild, EventGroup, getPropsWithDefaults } from '../../../Utilities';\n\nimport { getMaxHeight, positionElement, RectangleEdge } from '../../../Positioning';\n\nimport { AnimationClassNames, mergeStyles } from '../../../Styling';\nimport { useMergedRefs, useAsync, useTarget } from '@fluentui/react-hooks';\nimport type { IPositioningContainerProps } from './PositioningContainer.types';\nimport type { Point, IRectangle } from '../../../Utilities';\nimport type { IPositionedData, IPositionProps, IPosition } from '../../../Positioning';\n\nconst OFF_SCREEN_STYLE = { opacity: 0 };\n\n// In order for some of the max height logic to work properly we need to set the border.\n// The value is arbitrary.\nconst BORDER_WIDTH = 1;\nconst SLIDE_ANIMATIONS = {\n  [RectangleEdge.top]: 'slideUpIn20',\n  [RectangleEdge.bottom]: 'slideDownIn20',\n  [RectangleEdge.left]: 'slideLeftIn20',\n  [RectangleEdge.right]: 'slideRightIn20',\n} as const;\n\nconst DEFAULT_PROPS = {\n  preventDismissOnScroll: false,\n  offsetFromTarget: 0,\n  minPagePadding: 8,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n};\n\nfunction useBounds(props: IPositioningContainerProps, targetWindow: Window | undefined) {\n  /** The bounds used when determining if and where the PositioningContainer should be placed. */\n\n  const getBounds = (): IRectangle => {\n    let currentBounds = props.bounds;\n\n    if (!currentBounds) {\n      currentBounds = {\n        top: 0 + props.minPagePadding!,\n        left: 0 + props.minPagePadding!,\n        right: targetWindow!.innerWidth - props.minPagePadding!,\n        bottom: targetWindow!.innerHeight - props.minPagePadding!,\n        width: targetWindow!.innerWidth - props.minPagePadding! * 2,\n        height: targetWindow!.innerHeight - props.minPagePadding! * 2,\n      };\n    }\n    return currentBounds;\n  };\n\n  return getBounds;\n}\n\nfunction usePositionState(\n  props: IPositioningContainerProps,\n  positionedHost: React.RefObject<HTMLDivElement | null>,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getCachedBounds: () => IRectangle,\n) {\n  const async = useAsync();\n  /**\n   * Current set of calculated positions for the outermost parent container.\n   */\n  const [positions, setPositions] = React.useState<IPositionedData>();\n  const positionAttempts = React.useRef(0);\n\n  const updateAsyncPosition = (): void => {\n    async.requestAnimationFrame(() => updatePosition());\n  };\n\n  const updatePosition = (): void => {\n    const { offsetFromTarget, onPositioned } = props;\n    const hostElement = positionedHost.current;\n    const positioningContainerElement = contentHost.current;\n\n    if (hostElement && positioningContainerElement) {\n      const currentProps: IPositionProps = { ...props } as IPositionProps;\n      currentProps!.bounds = getCachedBounds();\n      currentProps!.target = targetRef.current!;\n      const { target } = currentProps;\n\n      if (target) {\n        // Check if the target is an Element or a MouseEvent and the document contains it\n        // or don't check anything else if the target is a Point or Rectangle\n        if (\n          (!(target as Element).getBoundingClientRect && !(target as MouseEvent).preventDefault) ||\n          document.body.contains(target as Node)\n        ) {\n          currentProps!.gapSpace = offsetFromTarget;\n          const newPositions: IPositionedData = positionElement(\n            currentProps!,\n            hostElement,\n            positioningContainerElement,\n          );\n          // Set the new position only when the positions are not exists or one of the new positioningContainer\n          // positions are different. The position should not change if the position is within 2 decimal places.\n          if (\n            (!positions && newPositions) ||\n            (positions && newPositions && !arePositionsEqual(positions, newPositions) && positionAttempts.current < 5)\n          ) {\n            // We should not reposition the positioningContainer more than a few times, if it is then the content is\n            // likely resizing and we should stop trying to reposition to prevent a stack overflow.\n            positionAttempts.current++;\n            setPositions(newPositions);\n            onPositioned?.(newPositions);\n          } else {\n            positionAttempts.current = 0;\n            onPositioned?.(newPositions);\n          }\n        } else if (positions !== undefined) {\n          setPositions(undefined);\n        }\n      } else if (positions !== undefined) {\n        setPositions(undefined);\n      }\n    }\n  };\n\n  React.useEffect(updateAsyncPosition);\n\n  return [positions, updateAsyncPosition] as const;\n}\n\nfunction useSetInitialFocus(\n  { setInitialFocus }: IPositioningContainerProps,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n  positions: IPositionedData | undefined,\n) {\n  const didSetInitialFocus = React.useRef(false);\n\n  React.useEffect((): void => {\n    if (!didSetInitialFocus.current && contentHost.current && setInitialFocus && positions) {\n      didSetInitialFocus.current = true;\n      focusFirstChild(contentHost.current);\n    }\n  });\n}\n\nfunction useMaxHeight(\n  { directionalHintFixed, offsetFromTarget, directionalHint, target }: IPositioningContainerProps,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  getCachedBounds: () => IRectangle,\n) {\n  /**\n   * The maximum height the PositioningContainer can grow to\n   * without going beyond the window or target bounds\n   */\n  const maxHeight = React.useRef<number | undefined>();\n\n  // If the target element changed, reset the max height. If we are tracking\n  // target with class name, always reset because we do not know if\n  // fabric has rendered a new element and disposed the old element.\n  if (typeof target === 'string') {\n    maxHeight.current = undefined;\n  }\n  React.useEffect(() => {\n    maxHeight.current = undefined;\n  }, [target, offsetFromTarget]);\n\n  /**\n   * Return the maximum height the container can grow to\n   * without going out of the specified bounds\n   */\n  const getCachedMaxHeight = (): number => {\n    if (!maxHeight.current) {\n      if (directionalHintFixed && targetRef.current) {\n        const gapSpace = offsetFromTarget ? offsetFromTarget : 0;\n        maxHeight.current = getMaxHeight(targetRef.current, directionalHint!, gapSpace, getCachedBounds());\n      } else {\n        maxHeight.current = getCachedBounds().height! - BORDER_WIDTH * 2;\n      }\n    }\n    return maxHeight.current!;\n  };\n\n  return getCachedMaxHeight;\n}\n\nfunction useAutoDismissEvents(\n  { onDismiss, preventDismissOnScroll }: IPositioningContainerProps,\n  positionedHost: React.RefObject<HTMLDivElement | null>,\n  targetWindow: Window | undefined,\n  targetRef: React.RefObject<Element | MouseEvent | Point | null>,\n  positions: IPositionedData | undefined,\n  updateAsyncPosition: () => void,\n) {\n  const async = useAsync();\n\n  const onResize = React.useCallback(\n    (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n      if (onDismiss) {\n        onDismiss(ev);\n      } else {\n        updateAsyncPosition();\n      }\n    },\n    [onDismiss, updateAsyncPosition],\n  );\n\n  const dismissOnLostFocus = React.useCallback(\n    (ev: Event): void => {\n      const target = ev.target as HTMLElement;\n      const clickedOutsideCallout = positionedHost.current && !elementContains(positionedHost.current, target);\n\n      if (\n        (!targetRef.current && clickedOutsideCallout) ||\n        (ev.target !== targetWindow &&\n          clickedOutsideCallout &&\n          ((targetRef.current as MouseEvent).stopPropagation ||\n            !targetRef.current ||\n            (target !== targetRef.current && !elementContains(targetRef.current as HTMLElement, target))))\n      ) {\n        onResize(ev);\n      }\n    },\n    [onResize, positionedHost, targetRef, targetWindow],\n  );\n\n  const dismissOnScroll = React.useCallback(\n    (ev: Event): void => {\n      if (positions && !preventDismissOnScroll) {\n        dismissOnLostFocus(ev);\n      }\n    },\n    [dismissOnLostFocus, positions, preventDismissOnScroll],\n  );\n\n  React.useEffect(() => {\n    const events = new EventGroup({});\n    // This is added so the positioningContainer will dismiss when the window is scrolled\n    // but not when something inside the positioningContainer is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the positioningContainer.\n    async.setTimeout(() => {\n      events.on(targetWindow, 'scroll', async.throttle(dismissOnScroll, 10), true);\n      events.on(targetWindow, 'resize', async.throttle(onResize, 10), true);\n      events.on(targetWindow?.document?.body, 'focus', dismissOnLostFocus, true);\n      events.on(targetWindow?.document?.body, 'click', dismissOnLostFocus, true);\n    }, 0);\n\n    return () => events.dispose();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, [dismissOnScroll]);\n}\n\nexport function useHeightOffset(\n  { finalHeight }: IPositioningContainerProps,\n  contentHost: React.RefObject<HTMLDivElement | null>,\n) {\n  /**\n   * Tracks the current height offset and updates during\n   * the height animation when props.finalHeight is specified.\n   * State stored as object to ensure re-render even if the value does not change.\n   *  See https://github.com/microsoft/fluentui/issues/23545\n   */\n  const [heightOffset, setHeightOffset] = React.useState<{ value: number }>({ value: 0 });\n  const async = useAsync();\n  const setHeightOffsetTimer = React.useRef<number>(0);\n\n  /** Animates the height if finalHeight was given. */\n  const setHeightOffsetEveryFrame = (): void => {\n    if (contentHost && finalHeight) {\n      setHeightOffsetTimer.current = async.requestAnimationFrame(() => {\n        if (!contentHost.current) {\n          return;\n        }\n\n        const positioningContainerMainElem = contentHost.current.lastChild as HTMLElement;\n        const cardScrollHeight: number = positioningContainerMainElem.scrollHeight;\n        const cardCurrHeight: number = positioningContainerMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        setHeightOffset({ value: heightOffset.value + scrollDiff });\n\n        if (positioningContainerMainElem.offsetHeight < finalHeight) {\n          setHeightOffsetEveryFrame();\n        } else {\n          async.cancelAnimationFrame(setHeightOffsetTimer.current);\n        }\n      });\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only re-run if finalHeight changes\n  React.useEffect(setHeightOffsetEveryFrame, [finalHeight]);\n\n  return heightOffset.value;\n}\n\nexport const PositioningContainer: React.FunctionComponent<IPositioningContainerProps> = React.forwardRef<\n  HTMLDivElement,\n  IPositioningContainerProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults<IPositioningContainerProps>(DEFAULT_PROPS, propsWithoutDefaults);\n\n  // @TODO rename to reflect the name of this class\n  const contentHost = React.useRef<HTMLDivElement>(null);\n  /**\n   * The primary positioned div.\n   */\n  const positionedHost = React.useRef<HTMLDivElement>(null);\n  const rootRef = useMergedRefs(forwardedRef, positionedHost);\n\n  const [targetRef, targetWindow] = useTarget(props.target, positionedHost);\n  const getCachedBounds = useBounds(props, targetWindow);\n  const [positions, updateAsyncPosition] = usePositionState(\n    props,\n    positionedHost,\n    contentHost,\n    targetRef,\n    getCachedBounds,\n  );\n  const getCachedMaxHeight = useMaxHeight(props, targetRef, getCachedBounds);\n  const heightOffset = useHeightOffset(props, contentHost);\n\n  useSetInitialFocus(props, contentHost, positions);\n  useAutoDismissEvents(props, positionedHost, targetWindow, targetRef, positions, updateAsyncPosition);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on initial render\n  React.useEffect(() => props.onLayerMounted?.(), []);\n\n  // If there is no target window then we are likely in server side rendering and we should not render anything.\n  if (!targetWindow) {\n    return null;\n  }\n\n  const { className, doNotLayer, positioningContainerWidth, positioningContainerMaxHeight, children } = props;\n\n  const styles = getClassNames();\n\n  const directionalClassName =\n    positions && positions.targetEdge ? AnimationClassNames[SLIDE_ANIMATIONS[positions.targetEdge]] : '';\n\n  const getContentMaxHeight: number = getCachedMaxHeight() + heightOffset!;\n  const contentMaxHeight: number =\n    positioningContainerMaxHeight! && positioningContainerMaxHeight! > getContentMaxHeight\n      ? getContentMaxHeight\n      : positioningContainerMaxHeight!;\n  const content = (\n    <div ref={rootRef} className={css('ms-PositioningContainer', styles.container)}>\n      <div\n        className={mergeStyles(\n          'ms-PositioningContainer-layerHost',\n          styles.root,\n          className,\n          directionalClassName,\n          !!positioningContainerWidth && { width: positioningContainerWidth },\n          doNotLayer && { zIndex: ZIndexes.Layer },\n        )}\n        style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n        // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n        // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n        tabIndex={-1}\n        ref={contentHost}\n      >\n        {children}\n        {\n          // @TODO apply to the content container\n          contentMaxHeight\n        }\n      </div>\n    </div>\n  );\n\n  return doNotLayer ? content : <Layer {...props.layerProps}>{content}</Layer>;\n});\nPositioningContainer.displayName = 'PositioningContainer';\n\nfunction arePositionsEqual(positions: IPositionedData, newPosition: IPositionedData): boolean {\n  return comparePositions(positions.elementPosition, newPosition.elementPosition);\n}\n\nfunction comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n  for (const key in newPositions) {\n    if (newPositions.hasOwnProperty(key)) {\n      const oldPositionEdge = oldPositions[key];\n      const newPositionEdge = newPositions[key];\n\n      if (oldPositionEdge && newPositionEdge) {\n        if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}