{"ast":null,"code":"import * as React from 'react';\nimport { css, findIndex } from '@fluentui/utilities';\nimport { DAYS_IN_WEEK } from '@fluentui/date-time-utilities';\nexport var CalendarMonthHeaderRow = function (props) {\n  var showWeekNumbers = props.showWeekNumbers,\n    strings = props.strings,\n    firstDayOfWeek = props.firstDayOfWeek,\n    allFocusable = props.allFocusable,\n    weeksToShow = props.weeksToShow,\n    weeks = props.weeks,\n    classNames = props.classNames;\n  var dayLabels = strings.shortDays.slice();\n  var firstOfMonthIndex = findIndex(weeks[1], function (day) {\n    return day.originalDate.getDate() === 1;\n  });\n  if (weeksToShow === 1 && firstOfMonthIndex >= 0) {\n    // if we only show one week, replace the header with short month name\n    var firstOfMonthIndexOffset = (firstOfMonthIndex + firstDayOfWeek) % DAYS_IN_WEEK;\n    dayLabels[firstOfMonthIndexOffset] = strings.shortMonths[weeks[1][firstOfMonthIndex].originalDate.getMonth()];\n  }\n  return React.createElement(\"tr\", null, showWeekNumbers && React.createElement(\"th\", {\n    className: classNames.dayCell\n  }), dayLabels.map(function (val, index) {\n    var i = (index + firstDayOfWeek) % DAYS_IN_WEEK;\n    var label = strings.days[i];\n    return React.createElement(\"th\", {\n      className: css(classNames.dayCell, classNames.weekDayLabelCell),\n      scope: \"col\",\n      key: dayLabels[i] + ' ' + index,\n      title: label,\n      \"aria-label\": label,\n      \"data-is-focusable\": allFocusable ? true : undefined\n    }, dayLabels[i]);\n  }));\n};","map":{"version":3,"names":["React","css","findIndex","DAYS_IN_WEEK","CalendarMonthHeaderRow","props","showWeekNumbers","strings","firstDayOfWeek","allFocusable","weeksToShow","weeks","classNames","dayLabels","shortDays","slice","firstOfMonthIndex","day","originalDate","getDate","firstOfMonthIndexOffset","shortMonths","getMonth","createElement","className","dayCell","map","val","index","i","label","days","weekDayLabelCell","scope","key","title","undefined"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/CalendarDayGrid/CalendarMonthHeaderRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css, findIndex } from '@fluentui/utilities';\nimport { DAYS_IN_WEEK } from '@fluentui/date-time-utilities';\nimport type { ICalendarDayGridProps, ICalendarDayGridStyles } from './CalendarDayGrid.types';\nimport type { IProcessedStyleSet } from '@fluentui/style-utilities';\nimport type { IDayInfo } from './CalendarDayGrid.base';\n\nexport interface ICalendarDayMonthHeaderRowProps extends ICalendarDayGridProps {\n  weeks: IDayInfo[][];\n  classNames: IProcessedStyleSet<ICalendarDayGridStyles>;\n}\n\nexport const CalendarMonthHeaderRow: React.FunctionComponent<ICalendarDayMonthHeaderRowProps> = props => {\n  const { showWeekNumbers, strings, firstDayOfWeek, allFocusable, weeksToShow, weeks, classNames } = props;\n  const dayLabels = strings.shortDays.slice();\n  const firstOfMonthIndex = findIndex(weeks![1], (day: IDayInfo) => day.originalDate.getDate() === 1);\n  if (weeksToShow === 1 && firstOfMonthIndex >= 0) {\n    // if we only show one week, replace the header with short month name\n    const firstOfMonthIndexOffset = (firstOfMonthIndex + firstDayOfWeek) % DAYS_IN_WEEK;\n    dayLabels[firstOfMonthIndexOffset] = strings.shortMonths[weeks![1][firstOfMonthIndex].originalDate.getMonth()];\n  }\n\n  return (\n    <tr>\n      {showWeekNumbers && <th className={classNames.dayCell} />}\n      {dayLabels.map((val: string, index: number) => {\n        const i = (index + firstDayOfWeek) % DAYS_IN_WEEK;\n        const label = strings.days[i];\n        return (\n          <th\n            className={css(classNames.dayCell, classNames.weekDayLabelCell)}\n            scope=\"col\"\n            key={dayLabels[i] + ' ' + index}\n            title={label}\n            aria-label={label}\n            data-is-focusable={allFocusable ? true : undefined}\n          >\n            {dayLabels[i]}\n          </th>\n        );\n      })}\n    </tr>\n  );\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,EAAEC,SAAS,QAAQ,qBAAqB;AACpD,SAASC,YAAY,QAAQ,+BAA+B;AAU5D,OAAO,IAAMC,sBAAsB,GAA6D,SAAAA,CAAAC,KAAK;EAC3F,IAAAC,eAAe,GAA4ED,KAAK,CAAAC,eAAjF;IAAEC,OAAO,GAAmEF,KAAK,CAAAE,OAAxE;IAAEC,cAAc,GAAmDH,KAAK,CAAAG,cAAxD;IAAEC,YAAY,GAAqCJ,KAAK,CAAAI,YAA1C;IAAEC,WAAW,GAAwBL,KAAK,CAAAK,WAA7B;IAAEC,KAAK,GAAiBN,KAAK,CAAAM,KAAtB;IAAEC,UAAU,GAAKP,KAAK,CAAAO,UAAV;EAC9F,IAAMC,SAAS,GAAGN,OAAO,CAACO,SAAS,CAACC,KAAK,EAAE;EAC3C,IAAMC,iBAAiB,GAAGd,SAAS,CAACS,KAAM,CAAC,CAAC,CAAC,EAAE,UAACM,GAAa;IAAK,OAAAA,GAAG,CAACC,YAAY,CAACC,OAAO,EAAE,KAAK,CAAC;EAAhC,CAAgC,CAAC;EACnG,IAAIT,WAAW,KAAK,CAAC,IAAIM,iBAAiB,IAAI,CAAC,EAAE;IAC/C;IACA,IAAMI,uBAAuB,GAAG,CAACJ,iBAAiB,GAAGR,cAAc,IAAIL,YAAY;IACnFU,SAAS,CAACO,uBAAuB,CAAC,GAAGb,OAAO,CAACc,WAAW,CAACV,KAAM,CAAC,CAAC,CAAC,CAACK,iBAAiB,CAAC,CAACE,YAAY,CAACI,QAAQ,EAAE,CAAC;;EAGhH,OACEtB,KAAA,CAAAuB,aAAA,aACGjB,eAAe,IAAIN,KAAA,CAAAuB,aAAA;IAAIC,SAAS,EAAEZ,UAAU,CAACa;EAAO,EAAI,EACxDZ,SAAS,CAACa,GAAG,CAAC,UAACC,GAAW,EAAEC,KAAa;IACxC,IAAMC,CAAC,GAAG,CAACD,KAAK,GAAGpB,cAAc,IAAIL,YAAY;IACjD,IAAM2B,KAAK,GAAGvB,OAAO,CAACwB,IAAI,CAACF,CAAC,CAAC;IAC7B,OACE7B,KAAA,CAAAuB,aAAA;MACEC,SAAS,EAAEvB,GAAG,CAACW,UAAU,CAACa,OAAO,EAAEb,UAAU,CAACoB,gBAAgB,CAAC;MAC/DC,KAAK,EAAC,KAAK;MACXC,GAAG,EAAErB,SAAS,CAACgB,CAAC,CAAC,GAAG,GAAG,GAAGD,KAAK;MAC/BO,KAAK,EAAEL,KAAK;MAAA,cACAA,KAAK;MAAA,qBACErB,YAAY,GAAG,IAAI,GAAG2B;IAAS,GAEjDvB,SAAS,CAACgB,CAAC,CAAC,CACV;EAET,CAAC,CAAC,CACC;AAET,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}