{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, FontWeights, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\n  var _a, _b, _c, _d, _e;\n  var fonts = theme.fonts,\n    palette = theme.palette;\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var compoundButtonStyles = {\n    root: {\n      maxWidth: '280px',\n      minHeight: '72px',\n      height: 'auto',\n      padding: '16px 12px'\n    },\n    flexContainer: {\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      minWidth: '100%',\n      margin: ''\n    },\n    textContainer: {\n      textAlign: 'left'\n    },\n    icon: {\n      fontSize: '2em',\n      lineHeight: '1em',\n      height: '1em',\n      margin: '0px 8px 0px 0px',\n      flexBasis: '1em',\n      flexShrink: '0'\n    },\n    label: {\n      margin: '0 0 5px',\n      lineHeight: '100%',\n      fontWeight: FontWeights.semibold\n    },\n    description: [fonts.small, {\n      lineHeight: '100%'\n    }]\n  };\n  var standardCompoundTheme = {\n    description: {\n      color: palette.neutralSecondary\n    },\n    descriptionHovered: {\n      color: palette.neutralDark\n    },\n    descriptionPressed: {\n      color: 'inherit'\n    },\n    descriptionChecked: {\n      color: 'inherit'\n    },\n    descriptionDisabled: {\n      color: 'inherit'\n    }\n  };\n  var primaryCompoundTheme = {\n    description: {\n      color: palette.white,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        backgroundColor: 'WindowText',\n        color: 'Window'\n      }, getHighContrastNoAdjustStyle()), _a)\n    },\n    descriptionHovered: {\n      color: palette.white,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        backgroundColor: 'Highlight',\n        color: 'Window'\n      }, _b)\n    },\n    descriptionPressed: {\n      color: 'inherit',\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    descriptionChecked: {\n      color: 'inherit',\n      selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _d)\n    },\n    descriptionDisabled: {\n      color: 'inherit',\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'inherit'\n      }, _e)\n    }\n  };\n  return concatStyleSets(baseButtonStyles, compoundButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), primary ? primaryCompoundTheme : standardCompoundTheme, splitButtonStyles, customStyles);\n});","map":{"version":3,"names":["concatStyleSets","FontWeights","HighContrastSelector","getHighContrastNoAdjustStyle","memoizeFunction","getStyles","getBaseButtonStyles","getSplitButtonStyles","primaryStyles","standardStyles","theme","customStyles","primary","fonts","palette","baseButtonStyles","splitButtonStyles","compoundButtonStyles","root","maxWidth","minHeight","height","padding","flexContainer","flexDirection","alignItems","minWidth","margin","textContainer","textAlign","icon","fontSize","lineHeight","flexBasis","flexShrink","label","fontWeight","semibold","description","small","standardCompoundTheme","color","neutralSecondary","descriptionHovered","neutralDark","descriptionPressed","descriptionChecked","descriptionDisabled","primaryCompoundTheme","white","selectors","_a","__assign","backgroundColor","_b","_c","_d","_e"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Button/src/components/Button/CompoundButton/CompoundButton.styles.ts"],"sourcesContent":["import { concatStyleSets, FontWeights, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const { fonts, palette } = theme;\n\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const compoundButtonStyles: IButtonStyles = {\n      root: {\n        maxWidth: '280px',\n        minHeight: '72px',\n        height: 'auto',\n        padding: '16px 12px',\n      },\n\n      flexContainer: {\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        minWidth: '100%',\n        margin: '',\n      },\n\n      textContainer: {\n        textAlign: 'left',\n      },\n\n      icon: {\n        fontSize: '2em',\n        lineHeight: '1em',\n        height: '1em',\n        margin: '0px 8px 0px 0px',\n        flexBasis: '1em',\n        flexShrink: '0',\n      },\n\n      label: {\n        margin: '0 0 5px',\n        lineHeight: '100%',\n        fontWeight: FontWeights.semibold,\n      },\n      description: [\n        fonts.small,\n        {\n          lineHeight: '100%',\n        },\n      ],\n    };\n\n    const standardCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.neutralSecondary,\n      },\n\n      descriptionHovered: {\n        color: palette.neutralDark,\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n      },\n    };\n\n    const primaryCompoundTheme: IButtonStyles = {\n      description: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n            color: 'Window',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionHovered: {\n        color: palette.white,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'Highlight',\n            color: 'Window',\n          },\n        },\n      },\n\n      descriptionPressed: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionChecked: {\n        color: 'inherit',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n            backgroundColor: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      descriptionDisabled: {\n        color: 'inherit',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'inherit',\n          },\n        },\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      compoundButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      primary ? primaryCompoundTheme : standardCompoundTheme,\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}