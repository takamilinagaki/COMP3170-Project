{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element, attribute) {\n  var elementMatch = findElementRecursive(element, function (testElement) {\n    return testElement.hasAttribute(attribute);\n  });\n  return elementMatch && elementMatch.getAttribute(attribute);\n}","map":{"version":3,"names":["findElementRecursive","elementContainsAttribute","element","attribute","elementMatch","testElement","hasAttribute","getAttribute"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/dom-utilities/src/elementContainsAttribute.ts"],"sourcesContent":["import { findElementRecursive } from './findElementRecursive';\n\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  const elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAE7D;;;;;;AAMA,OAAM,SAAUC,wBAAwBA,CAACC,OAAoB,EAAEC,SAAiB;EAC9E,IAAMC,YAAY,GAAGJ,oBAAoB,CAACE,OAAO,EAAE,UAACG,WAAwB;IAAK,OAAAA,WAAW,CAACC,YAAY,CAACH,SAAS,CAAC;EAAnC,CAAmC,CAAC;EAErH,OAAOC,YAAY,IAAIA,YAAY,CAACG,YAAY,CAACJ,SAAS,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}