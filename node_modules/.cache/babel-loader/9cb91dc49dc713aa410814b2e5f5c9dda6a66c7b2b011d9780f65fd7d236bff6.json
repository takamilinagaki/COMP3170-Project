{"ast":null,"code":"import { useRef, useEffect } from 'react';\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","map":{"version":3,"names":["useRef","useEffect","usePrevious","value","ref","current"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react-hooks/src/usePrevious.ts"],"sourcesContent":["import { useRef, useEffect } from 'react';\n\n/**\n * Hook keeping track of a given value from a previous execution of the component the Hook is used in.\n *\n * See [React Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state)\n */\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T | undefined>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC;;;;;AAKA,OAAM,SAAUC,WAAWA,CAAIC,KAAQ;EACrC,IAAMC,GAAG,GAAGJ,MAAM,EAAiB;EACnCC,SAAS,CAAC;IACRG,GAAG,CAACC,OAAO,GAAGF,KAAK;EACrB,CAAC,CAAC;EACF,OAAOC,GAAG,CAACC,OAAO;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}