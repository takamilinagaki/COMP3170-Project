{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { EditingItem } from './Items/EditingItem';\n/**\n * {@docCategory SelectedPeopleList}\n */\nvar BasePeopleSelectedItemsList = /** @class */function (_super) {\n  __extends(BasePeopleSelectedItemsList, _super);\n  function BasePeopleSelectedItemsList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return BasePeopleSelectedItemsList;\n}(BaseSelectedItemsList);\nexport { BasePeopleSelectedItemsList };\n/**\n * Standard People Picker.\n */\nvar SelectedPeopleList = /** @class */function (_super) {\n  __extends(SelectedPeopleList, _super);\n  function SelectedPeopleList() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderItems = function () {\n      var items = _this.state.items;\n      return items.map(function (item, index) {\n        return _this._renderItem(item, index);\n      });\n    };\n    _this._beginEditing = function (item) {\n      item.isEditing = true;\n      _this.forceUpdate();\n    };\n    _this._completeEditing = function (oldItem, newItem) {\n      oldItem.isEditing = false;\n      _this.replaceItem(oldItem, newItem);\n    };\n    return _this;\n  }\n  SelectedPeopleList.prototype._renderItem = function (item, index) {\n    var _this = this;\n    var removeButtonAriaLabel = this.props.removeButtonAriaLabel;\n    var expandGroup = this.props.onExpandGroup;\n    var props = {\n      item: item,\n      index: index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: function () {\n        return _this.removeItem(item);\n      },\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel,\n      onCopyItem: function (itemToCopy) {\n        return _this.copyItems([itemToCopy]);\n      },\n      onExpandItem: expandGroup ? function () {\n        return expandGroup(item);\n      } : undefined,\n      menuItems: this._createMenuItems(item)\n    };\n    var hasContextMenu = props.menuItems.length > 0;\n    if (item.isEditing && hasContextMenu) {\n      return React.createElement(EditingItem, __assign({}, props, {\n        onRenderFloatingPicker: this.props.onRenderFloatingPicker,\n        floatingPickerProps: this.props.floatingPickerProps,\n        onEditingComplete: this._completeEditing,\n        getEditingItemText: this.props.getEditingItemText\n      }));\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      var onRenderItem = this.props.onRenderItem;\n      var renderedItem = onRenderItem(props);\n      return hasContextMenu ? React.createElement(SelectedItemWithContextMenu, {\n        key: props.key,\n        renderedItem: renderedItem,\n        beginEditing: this._beginEditing,\n        menuItems: this._createMenuItems(props.item),\n        item: props.item\n      }) : renderedItem;\n    }\n  };\n  SelectedPeopleList.prototype._createMenuItems = function (item) {\n    var _this = this;\n    var menuItems = [];\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this._beginEditing(menuItem.data);\n        },\n        data: item\n      });\n    }\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: function (ev, menuItem) {\n          _this.removeItem(menuItem.data);\n        },\n        data: item\n      });\n    }\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: function (ev, menuItem) {\n          if (_this.props.onCopyItems) {\n            _this.copyItems([menuItem.data]);\n          }\n        },\n        data: item\n      });\n    }\n    return menuItems;\n  };\n  SelectedPeopleList.defaultProps = {\n    onRenderItem: function (props) {\n      return React.createElement(ExtendedSelectedItem, __assign({}, props));\n    }\n  };\n  return SelectedPeopleList;\n}(BasePeopleSelectedItemsList);\nexport { SelectedPeopleList };","map":{"version":3,"names":["React","BaseSelectedItemsList","ExtendedSelectedItem","SelectedItemWithContextMenu","EditingItem","BasePeopleSelectedItemsList","_super","__extends","SelectedPeopleList","_this","apply","arguments","renderItems","items","state","map","item","index","_renderItem","_beginEditing","isEditing","forceUpdate","_completeEditing","oldItem","newItem","replaceItem","prototype","removeButtonAriaLabel","props","expandGroup","onExpandGroup","key","selected","selection","isIndexSelected","onRemoveItem","removeItem","onItemChange","onCopyItem","itemToCopy","copyItems","onExpandItem","undefined","menuItems","_createMenuItems","hasContextMenu","length","createElement","__assign","onRenderFloatingPicker","floatingPickerProps","onEditingComplete","getEditingItemText","onRenderItem","renderedItem","beginEditing","editMenuItemText","push","text","onClick","ev","menuItem","data","removeMenuItemText","copyMenuItemText","onCopyItems","defaultProps"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/SelectedItemsList/src/components/SelectedItemsList/SelectedPeopleList/SelectedPeopleList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { BaseSelectedItemsList } from '../BaseSelectedItemsList';\nimport { ExtendedSelectedItem } from './Items/ExtendedSelectedItem';\nimport { SelectedItemWithContextMenu } from './Items/SelectedItemWithContextMenu';\nimport { EditingItem } from './Items/EditingItem';\nimport type { IBaseSelectedItemsListProps, ISelectedItemProps } from '../BaseSelectedItemsList.types';\nimport type { IPersonaProps } from '../../../Persona';\nimport type { IRenderFunction } from '../../../Utilities';\nimport type { IContextualMenuItem } from '../../../ContextualMenu';\nimport type { IBaseFloatingPickerProps } from '../../../FloatingPicker';\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface IExtendedPersonaProps extends IPersonaProps {\n  key?: React.Key;\n  isValid: boolean;\n  blockRecipientRemoval?: boolean;\n  shouldBlockSelection?: boolean;\n  canExpand?: boolean;\n  isEditing?: boolean;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleItemProps extends ISelectedItemProps<IExtendedPersonaProps> {\n  onExpandItem?: () => void;\n  renderPersonaCoin?: IRenderFunction<IPersonaProps>;\n  renderPrimaryText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport interface ISelectedPeopleProps extends IBaseSelectedItemsListProps<IExtendedPersonaProps> {\n  onExpandGroup?: (item: IExtendedPersonaProps) => void;\n  removeMenuItemText?: string;\n  copyMenuItemText?: string;\n  editMenuItemText?: string;\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\n  onRenderFloatingPicker?: React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>;\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\n}\n\n/**\n * {@docCategory SelectedPeopleList}\n */\nexport class BasePeopleSelectedItemsList extends BaseSelectedItemsList<IExtendedPersonaProps, ISelectedPeopleProps> {}\n\n/**\n * Standard People Picker.\n */\nexport class SelectedPeopleList extends BasePeopleSelectedItemsList {\n  public static defaultProps: any = {\n    onRenderItem: (props: ISelectedPeopleItemProps) => <ExtendedSelectedItem {...props} />,\n  };\n\n  protected renderItems = (): JSX.Element[] => {\n    const { items } = this.state;\n    return items.map((item: IExtendedPersonaProps, index: number) => this._renderItem(item, index));\n  };\n\n  private _renderItem(item: IExtendedPersonaProps, index: number): JSX.Element {\n    const { removeButtonAriaLabel } = this.props;\n    const expandGroup = this.props.onExpandGroup;\n    const props = {\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel,\n      onCopyItem: (itemToCopy: IExtendedPersonaProps) => this.copyItems([itemToCopy]),\n      onExpandItem: expandGroup ? () => expandGroup(item) : undefined,\n      menuItems: this._createMenuItems(item),\n    };\n\n    const hasContextMenu = props.menuItems.length > 0;\n    if ((item as IExtendedPersonaProps).isEditing && hasContextMenu) {\n      return (\n        <EditingItem\n          {...props}\n          onRenderFloatingPicker={this.props.onRenderFloatingPicker}\n          floatingPickerProps={this.props.floatingPickerProps}\n          onEditingComplete={this._completeEditing}\n          getEditingItemText={this.props.getEditingItemText}\n        />\n      );\n    } else {\n      // This cast is here because we are guaranteed that onRenderItem is set\n      // from static defaultProps\n      // TODO: Move this component to composition with required onRenderItem to remove\n      // this cast.\n      const onRenderItem = this.props.onRenderItem as (props: ISelectedPeopleItemProps) => JSX.Element;\n      const renderedItem = onRenderItem(props);\n      return hasContextMenu ? (\n        <SelectedItemWithContextMenu\n          key={props.key}\n          renderedItem={renderedItem}\n          beginEditing={this._beginEditing}\n          menuItems={this._createMenuItems(props.item)}\n          item={props.item}\n        />\n      ) : (\n        renderedItem\n      );\n    }\n  }\n\n  private _beginEditing = (item: IExtendedPersonaProps): void => {\n    item.isEditing = true;\n    this.forceUpdate();\n  };\n\n  private _completeEditing = (oldItem: any, newItem: any): void => {\n    oldItem.isEditing = false;\n    this.replaceItem(oldItem, newItem);\n  };\n\n  private _createMenuItems(item: any): IContextualMenuItem[] {\n    const menuItems: IContextualMenuItem[] = [];\n\n    if (this.props.editMenuItemText && this.props.getEditingItemText) {\n      menuItems.push({\n        key: 'Edit',\n        text: this.props.editMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this._beginEditing(menuItem.data);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.removeMenuItemText) {\n      menuItems.push({\n        key: 'Remove',\n        text: this.props.removeMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          this.removeItem(menuItem.data as IExtendedPersonaProps);\n        },\n        data: item,\n      });\n    }\n\n    if (this.props.copyMenuItemText) {\n      menuItems.push({\n        key: 'Copy',\n        text: this.props.copyMenuItemText,\n        onClick: (ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) => {\n          if (this.props.onCopyItems) {\n            (this.copyItems as (items: IExtendedPersonaProps[]) => void)([menuItem.data] as IExtendedPersonaProps[]);\n          }\n        },\n        data: item,\n      });\n    }\n\n    return menuItems;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}