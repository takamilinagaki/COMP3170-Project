{"ast":null,"code":"import { getGlobalClassNames, HighContrastSelector } from '@fluentui/style-utilities';\nexport var GlobalClassNames = {\n  root: 'ms-Link'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var className = props.className,\n    isButton = props.isButton,\n    isDisabled = props.isDisabled,\n    isUnderlined = props.isUnderlined,\n    theme = props.theme;\n  var semanticColors = theme.semanticColors;\n  // Tokens\n  var linkColor = semanticColors.link;\n  var linkInteractedColor = semanticColors.linkHovered;\n  var linkDisabledColor = semanticColors.disabledText;\n  var focusBorderColor = semanticColors.focusBorder;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      color: linkColor,\n      outline: 'none',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      textDecoration: isUnderlined ? 'underline' : 'none',\n      selectors: (_a = {\n        '.ms-Fabric--isFocusVisible &:focus': {\n          // Can't use getFocusStyle because it doesn't support wrapping links\n          // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n          // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n          // and helps the focus rect avoid getting clipped.\n          boxShadow: \"0 0 0 1px \".concat(focusBorderColor, \" inset\"),\n          outline: \"1px auto \".concat(focusBorderColor),\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            outline: '1px solid WindowText'\n          }, _b)\n        }\n      }, _a[HighContrastSelector] = {\n        // For IE high contrast mode\n        borderBottom: 'none'\n      }, _a)\n    }, isButton && {\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'inline',\n      margin: 0,\n      overflow: 'inherit',\n      padding: 0,\n      textAlign: 'left',\n      textOverflow: 'inherit',\n      userSelect: 'text',\n      borderBottom: '1px solid transparent',\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'LinkText',\n        forcedColorAdjust: 'none'\n      }, _c)\n    }, !isButton && {\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n        MsHighContrastAdjust: 'auto',\n        forcedColorAdjust: 'auto'\n      }, _d)\n    }, isDisabled && ['is-disabled', {\n      color: linkDisabledColor,\n      cursor: 'default'\n    }, {\n      selectors: (_e = {\n        '&:link, &:visited': {\n          pointerEvents: 'none'\n        }\n      }, _e[HighContrastSelector] = {\n        // We need to specify the color in High Contrast because of the case of Links rendering as buttons.\n        color: 'GrayText'\n      }, _e)\n    }], !isDisabled && {\n      selectors: {\n        '&:active, &:hover, &:active:hover': {\n          color: linkInteractedColor,\n          textDecoration: 'underline',\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'LinkText'\n          }, _f)\n        },\n        '&:focus': {\n          color: linkColor,\n          selectors: (_g = {}, _g[HighContrastSelector] = {\n            color: 'LinkText'\n          }, _g)\n        }\n      }\n    }, classNames.root, className]\n  };\n};","map":{"version":3,"names":["getGlobalClassNames","HighContrastSelector","GlobalClassNames","root","getStyles","props","className","isButton","isDisabled","isUnderlined","theme","semanticColors","linkColor","link","linkInteractedColor","linkHovered","linkDisabledColor","disabledText","focusBorderColor","focusBorder","classNames","fonts","medium","color","outline","fontSize","fontWeight","textDecoration","selectors","_a","boxShadow","concat","_b","borderBottom","background","backgroundColor","border","cursor","display","margin","overflow","padding","textAlign","textOverflow","userSelect","_c","forcedColorAdjust","_d","MsHighContrastAdjust","_e","pointerEvents","_f","_g"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Link/Link.styles.ts"],"sourcesContent":["import { getGlobalClassNames, HighContrastSelector } from '@fluentui/style-utilities';\nimport type { ILinkStyleProps, ILinkStyles } from './Link.types';\n\nexport const GlobalClassNames = {\n  root: 'ms-Link',\n};\n\nexport const getStyles = (props: ILinkStyleProps): ILinkStyles => {\n  const { className, isButton, isDisabled, isUnderlined, theme } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const linkColor = semanticColors.link;\n  const linkInteractedColor = semanticColors.linkHovered;\n  const linkDisabledColor = semanticColors.disabledText;\n  const focusBorderColor = semanticColors.focusBorder;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: linkColor,\n        outline: 'none',\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        textDecoration: isUnderlined ? 'underline' : 'none',\n\n        selectors: {\n          '.ms-Fabric--isFocusVisible &:focus': {\n            // Can't use getFocusStyle because it doesn't support wrapping links\n            // https://github.com/microsoft/fluentui/issues/4883#issuecomment-406743543\n            // Using box-shadow and outline allows the focus rect to wrap links that span multiple lines\n            // and helps the focus rect avoid getting clipped.\n            boxShadow: `0 0 0 1px ${focusBorderColor} inset`,\n            outline: `1px auto ${focusBorderColor}`,\n            selectors: {\n              [HighContrastSelector]: {\n                outline: '1px solid WindowText',\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            // For IE high contrast mode\n            borderBottom: 'none',\n          },\n        },\n      },\n      isButton && {\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline',\n        margin: 0,\n        overflow: 'inherit',\n        padding: 0,\n        textAlign: 'left',\n        textOverflow: 'inherit',\n        userSelect: 'text',\n        borderBottom: '1px solid transparent', // For Firefox high contrast mode\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'LinkText',\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      !isButton && {\n        selectors: {\n          [HighContrastSelector]: {\n            // This is mainly for MessageBar, which sets MsHighContrastAdjust: none by default\n            MsHighContrastAdjust: 'auto',\n            forcedColorAdjust: 'auto',\n          },\n        },\n      },\n\n      isDisabled && [\n        'is-disabled',\n        {\n          color: linkDisabledColor,\n          cursor: 'default',\n        },\n        {\n          selectors: {\n            '&:link, &:visited': {\n              pointerEvents: 'none',\n            },\n\n            [HighContrastSelector]: {\n              // We need to specify the color in High Contrast because of the case of Links rendering as buttons.\n              color: 'GrayText',\n            },\n          },\n        },\n      ],\n      !isDisabled && {\n        selectors: {\n          '&:active, &:hover, &:active:hover': {\n            color: linkInteractedColor,\n            textDecoration: 'underline',\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n          '&:focus': {\n            color: linkColor,\n\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'LinkText',\n              },\n            },\n          },\n        },\n      },\n      classNames.root,\n      className,\n    ],\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}