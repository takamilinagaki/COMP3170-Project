{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, divProperties, css, format, getPropsWithDefaults } from '@fluentui/utilities';\nimport { Calendar } from '../../Calendar';\nimport { FirstWeekOfYear, getDatePartHashValue, compareDatePart, DayOfWeek } from '@fluentui/date-time-utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { mergeStyles } from '../../Styling';\nimport { TextField } from '../../TextField';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { useId, useAsync, useControllableValue } from '@fluentui/react-hooks';\nimport { defaultDatePickerStrings } from './defaults';\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n  allowTextInput: false,\n  formatDate: function (date) {\n    return date ? date.toDateString() : '';\n  },\n  parseDateFromString: function (dateStr) {\n    //if dateStr is DATE ONLY ISO 8601 -> add time so Date.parse() won't convert it to UTC\n    //See here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#date_time_string_format\n    if (dateStr.match(/^\\d{4}(-\\d{2}){2}$/)) {\n      dateStr += 'T12:00';\n    }\n    var date = Date.parse(dateStr);\n    return date ? new Date(date) : null;\n  },\n  firstDayOfWeek: DayOfWeek.Sunday,\n  initialPickerDate: new Date(),\n  isRequired: false,\n  isMonthPickerVisible: true,\n  showMonthPickerAsOverlay: false,\n  strings: defaultDatePickerStrings,\n  highlightCurrentMonth: false,\n  highlightSelectedMonth: false,\n  borderless: false,\n  pickerAriaLabel: 'Calendar',\n  showWeekNumbers: false,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  showGoToToday: true,\n  showCloseButton: false,\n  underlined: false,\n  allFocusable: false\n};\nfunction useFocusLogic() {\n  var textFieldRef = React.useRef(null);\n  var preventFocusOpeningPicker = React.useRef(false);\n  var focus = function () {\n    var _a, _b;\n    (_b = (_a = textFieldRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n  };\n  var preventNextFocusOpeningPicker = function () {\n    preventFocusOpeningPicker.current = true;\n  };\n  return [textFieldRef, focus, preventFocusOpeningPicker, preventNextFocusOpeningPicker];\n}\nfunction useCalendarVisibility(_a, focus) {\n  var allowTextInput = _a.allowTextInput,\n    onAfterMenuDismiss = _a.onAfterMenuDismiss;\n  var _b = React.useState(false),\n    isCalendarShown = _b[0],\n    setIsCalendarShown = _b[1];\n  var isMounted = React.useRef(false);\n  var async = useAsync();\n  React.useEffect(function () {\n    if (isMounted.current && !isCalendarShown) {\n      // In browsers like IE, textfield gets unfocused when datepicker is collapsed\n      if (allowTextInput) {\n        async.requestAnimationFrame(focus);\n      }\n      // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n      onAfterMenuDismiss === null || onAfterMenuDismiss === void 0 ? void 0 : onAfterMenuDismiss();\n    }\n    isMounted.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isCalendarShown]);\n  return [isCalendarShown, setIsCalendarShown];\n}\nfunction useSelectedDate(_a) {\n  var formatDate = _a.formatDate,\n    value = _a.value,\n    onSelectDate = _a.onSelectDate;\n  var _b = useControllableValue(value, undefined, function (ev, newValue) {\n      return onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(newValue);\n    }),\n    selectedDate = _b[0],\n    setSelectedDateState = _b[1];\n  var _c = React.useState(function () {\n      return value && formatDate ? formatDate(value) : '';\n    }),\n    formattedDate = _c[0],\n    setFormattedDate = _c[1];\n  var setSelectedDate = function (newDate) {\n    setSelectedDateState(newDate);\n    setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n  };\n  React.useEffect(function () {\n    setFormattedDate(value && formatDate ? formatDate(value) : '');\n  }, [formatDate, value]);\n  return [selectedDate, formattedDate, setSelectedDate, setFormattedDate];\n}\nfunction useErrorMessage(_a, selectedDate, setSelectedDate, inputValue, isCalendarShown) {\n  var _b;\n  var isRequired = _a.isRequired,\n    allowTextInput = _a.allowTextInput,\n    strings = _a.strings,\n    parseDateFromString = _a.parseDateFromString,\n    onSelectDate = _a.onSelectDate,\n    formatDate = _a.formatDate,\n    minDate = _a.minDate,\n    maxDate = _a.maxDate,\n    textField = _a.textField;\n  var _c = React.useState(),\n    errorMessage = _c[0],\n    setErrorMessage = _c[1];\n  var _d = React.useState(),\n    statusMessage = _d[0],\n    setStatusMessage = _d[1];\n  var isFirstLoadRef = React.useRef(true);\n  var validateOnLoad = (_b = textField === null || textField === void 0 ? void 0 : textField.validateOnLoad) !== null && _b !== void 0 ? _b : true;\n  var validateTextInput = function (date) {\n    if (date === void 0) {\n      date = null;\n    }\n    if (allowTextInput) {\n      if (inputValue || date) {\n        // Don't parse if the selected date has the same formatted string as what we're about to parse.\n        // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n        // not be able to come up with the exact same date.\n        if (selectedDate && !errorMessage && formatDate && formatDate(date !== null && date !== void 0 ? date : selectedDate) === inputValue) {\n          return;\n        }\n        date = date || parseDateFromString(inputValue);\n        // Check if date is null, or date is Invalid Date\n        if (!date || isNaN(date.getTime())) {\n          // Reset invalid input field, if formatting is available\n          setSelectedDate(selectedDate);\n          // default the newer isResetStatusMessage string to invalidInputErrorMessage for legacy support\n          var selectedText = formatDate ? formatDate(selectedDate) : '';\n          var statusText = strings.isResetStatusMessage ? format(strings.isResetStatusMessage, inputValue, selectedText) : strings.invalidInputErrorMessage || '';\n          setStatusMessage(statusText);\n        } else {\n          // Check against optional date boundaries\n          if (isDateOutOfBounds(date, minDate, maxDate)) {\n            setErrorMessage(strings.isOutOfBoundsErrorMessage || ' ');\n          } else {\n            setSelectedDate(date);\n            setErrorMessage(undefined);\n            setStatusMessage(undefined);\n          }\n        }\n      } else {\n        // Only show error for empty inputValue if it is a required field\n        setErrorMessage(isRequired ? strings.isRequiredErrorMessage || ' ' : undefined);\n        // If no input date string or input date string is invalid\n        // date variable will be null, callback should expect null value for this case\n        onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(date);\n      }\n    } else if (isRequired && !inputValue) {\n      // Check when DatePicker is a required field but has NO input value\n      setErrorMessage(strings.isRequiredErrorMessage || ' ');\n    } else {\n      // Cleanup the error message and status message\n      setErrorMessage(undefined);\n      setStatusMessage(undefined);\n    }\n  };\n  React.useEffect(function () {\n    if (isFirstLoadRef.current) {\n      isFirstLoadRef.current = false;\n      if (!validateOnLoad) {\n        return;\n      }\n    }\n    if (isRequired && !selectedDate) {\n      setErrorMessage(strings.isRequiredErrorMessage || ' ');\n    } else if (selectedDate && isDateOutOfBounds(selectedDate, minDate, maxDate)) {\n      setErrorMessage(strings.isOutOfBoundsErrorMessage || ' ');\n    } else {\n      setErrorMessage(undefined);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // We don't want to compare the date itself, since two instances of date at the same time are not equal\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  minDate && getDatePartHashValue(minDate),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  maxDate && getDatePartHashValue(maxDate),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  selectedDate && getDatePartHashValue(selectedDate), isRequired, validateOnLoad]);\n  return [isCalendarShown ? undefined : errorMessage, validateTextInput, setErrorMessage, isCalendarShown ? undefined : statusMessage, setStatusMessage];\n}\nexport var DatePickerBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var _a, _b;\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  var firstDayOfWeek = props.firstDayOfWeek,\n    strings = props.strings,\n    label = props.label,\n    theme = props.theme,\n    className = props.className,\n    styles = props.styles,\n    initialPickerDate = props.initialPickerDate,\n    isRequired = props.isRequired,\n    disabled = props.disabled,\n    ariaLabel = props.ariaLabel,\n    pickerAriaLabel = props.pickerAriaLabel,\n    placeholder = props.placeholder,\n    allowTextInput = props.allowTextInput,\n    borderless = props.borderless,\n    minDate = props.minDate,\n    maxDate = props.maxDate,\n    showCloseButton = props.showCloseButton,\n    calendarProps = props.calendarProps,\n    calloutProps = props.calloutProps,\n    textFieldProps = props.textField,\n    underlined = props.underlined,\n    allFocusable = props.allFocusable,\n    _c = props.calendarAs,\n    CalendarType = _c === void 0 ? Calendar : _c,\n    tabIndex = props.tabIndex,\n    _d = props.disableAutoFocus,\n    disableAutoFocus = _d === void 0 ? true : _d;\n  var id = useId('DatePicker', props.id);\n  var calloutId = useId('DatePicker-Callout');\n  var calendar = React.useRef(null);\n  var datePickerDiv = React.useRef(null);\n  var _e = useFocusLogic(),\n    textFieldRef = _e[0],\n    focus = _e[1],\n    preventFocusOpeningPicker = _e[2],\n    preventNextFocusOpeningPicker = _e[3];\n  var _f = useCalendarVisibility(props, focus),\n    isCalendarShown = _f[0],\n    setIsCalendarShown = _f[1];\n  var _g = useSelectedDate(props),\n    selectedDate = _g[0],\n    formattedDate = _g[1],\n    setSelectedDate = _g[2],\n    setFormattedDate = _g[3];\n  var _h = useErrorMessage(props, selectedDate, setSelectedDate, formattedDate, isCalendarShown),\n    errorMessage = _h[0],\n    validateTextInput = _h[1],\n    setErrorMessage = _h[2],\n    statusMessage = _h[3],\n    setStatusMessage = _h[4];\n  var showDatePickerPopup = React.useCallback(function () {\n    if (!isCalendarShown) {\n      preventNextFocusOpeningPicker();\n      setIsCalendarShown(true);\n    }\n  }, [isCalendarShown, preventNextFocusOpeningPicker, setIsCalendarShown]);\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: focus,\n      reset: function () {\n        setIsCalendarShown(false);\n        setSelectedDate(undefined);\n        setErrorMessage(undefined);\n        setStatusMessage(undefined);\n      },\n      showDatePickerPopup: showDatePickerPopup\n    };\n  }, [focus, setErrorMessage, setIsCalendarShown, setSelectedDate, setStatusMessage, showDatePickerPopup]);\n  var onTextFieldFocus = function () {\n    if (disableAutoFocus) {\n      return;\n    }\n    if (!allowTextInput) {\n      if (!preventFocusOpeningPicker.current) {\n        showDatePickerPopup();\n      }\n      preventFocusOpeningPicker.current = false;\n    }\n  };\n  var onSelectDate = function (date) {\n    if (props.calendarProps && props.calendarProps.onSelectDate) {\n      props.calendarProps.onSelectDate(date);\n    }\n    calendarDismissed(date);\n  };\n  var onCalloutPositioned = function () {\n    var shouldFocus = true;\n    // If the user has specified that the callout shouldn't use initial focus, then respect\n    // that and don't attempt to set focus. That will default to true within the callout\n    // so we need to check if it's undefined here.\n    if (props.calloutProps && props.calloutProps.setInitialFocus !== undefined) {\n      shouldFocus = props.calloutProps.setInitialFocus;\n    }\n    if (calendar.current && shouldFocus) {\n      calendar.current.focus();\n    }\n  };\n  var onTextFieldBlur = function (ev) {\n    validateTextInput();\n  };\n  var onTextFieldChanged = function (ev, newValue) {\n    var _a;\n    var textField = props.textField;\n    if (allowTextInput) {\n      if (isCalendarShown) {\n        dismissDatePickerPopup();\n      }\n      setFormattedDate(newValue);\n    }\n    (_a = textField === null || textField === void 0 ? void 0 : textField.onChange) === null || _a === void 0 ? void 0 : _a.call(textField, ev, newValue);\n  };\n  var onTextFieldKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (!isCalendarShown) {\n          validateTextInput();\n          showDatePickerPopup();\n        } else {\n          // When DatePicker allows input date string directly,\n          // it is expected to hit another enter to close the popup\n          if (props.allowTextInput) {\n            dismissDatePickerPopup();\n          }\n        }\n        break;\n      case KeyCodes.escape:\n        handleEscKey(ev);\n        break;\n      case KeyCodes.down:\n        if (ev.altKey && !isCalendarShown) {\n          showDatePickerPopup();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  var onTextFieldClick = function (ev) {\n    // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n    var openOnClick = props.openOnClick || !props.disableAutoFocus;\n    if (openOnClick && !isCalendarShown && !props.disabled) {\n      showDatePickerPopup();\n      return;\n    }\n    if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n  var onIconClick = function (ev) {\n    ev.stopPropagation();\n    if (!isCalendarShown && !props.disabled) {\n      showDatePickerPopup();\n    } else if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n  var dismissDatePickerPopup = function (newlySelectedDate) {\n    if (isCalendarShown) {\n      setIsCalendarShown(false);\n      validateTextInput(newlySelectedDate);\n      if (!allowTextInput && newlySelectedDate) {\n        setSelectedDate(newlySelectedDate);\n      }\n    }\n  };\n  var renderTextfieldDescription = function (inputProps, defaultRender) {\n    return React.createElement(React.Fragment, null, inputProps.description || inputProps.onRenderDescription ? defaultRender(inputProps) : null, React.createElement(\"div\", {\n      \"aria-live\": \"assertive\",\n      className: classNames.statusMessage\n    }, statusMessage));\n  };\n  var renderReadOnlyInput = function (inputProps) {\n    var divProps = getNativeProps(inputProps, divProperties);\n    // Need to merge styles so the provided styles win over the default ones. This is due to the classnames having the\n    // same specificity.\n    var readOnlyTextFieldClassName = mergeStyles(divProps.className, classNames.readOnlyTextField);\n    // Talkback on Android treats readonly inputs as disabled, so swipe gestures to open the Calendar\n    // don't register. Workaround is rendering a div with role=\"combobox\" (passed in via TextField props).\n    return React.createElement(\"div\", __assign({}, divProps, {\n      className: readOnlyTextFieldClassName,\n      tabIndex: tabIndex || 0\n    }), formattedDate ||\n    // Putting the placeholder in a separate span fixes specificity issues for the text color\n    React.createElement(\"span\", {\n      className: classNames.readOnlyPlaceholder\n    }, placeholder));\n  };\n  /**\n   * Callback for closing the calendar callout\n   */\n  var calendarDismissed = function (newlySelectedDate) {\n    preventNextFocusOpeningPicker();\n    dismissDatePickerPopup(newlySelectedDate);\n    // don't need to focus the text box, if necessary the focusTrapZone will do it\n  };\n\n  var calloutDismissed = function (ev) {\n    calendarDismissed();\n  };\n  var handleEscKey = function (ev) {\n    if (isCalendarShown) {\n      ev.stopPropagation();\n      calendarDismissed();\n    }\n  };\n  var onCalendarDismissed = function (ev) {\n    calendarDismissed();\n  };\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    disabled: disabled,\n    underlined: underlined,\n    label: !!label,\n    isDatePickerShown: isCalendarShown\n  });\n  var nativeProps = getNativeProps(props, divProperties, ['value']);\n  var iconProps = textFieldProps && textFieldProps.iconProps;\n  var textFieldId = textFieldProps && textFieldProps.id && textFieldProps.id !== id ? textFieldProps.id : id + '-label';\n  var readOnly = !allowTextInput && !disabled;\n  var dataIsFocusable = (_b = (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps['data-is-focusable']) !== null && _a !== void 0 ? _a : props['data-is-focusable']) !== null && _b !== void 0 ? _b : true;\n  return React.createElement(\"div\", __assign({}, nativeProps, {\n    className: classNames.root,\n    ref: forwardedRef\n  }), React.createElement(\"div\", {\n    ref: datePickerDiv,\n    \"aria-owns\": isCalendarShown ? calloutId : undefined,\n    className: classNames.wrapper\n  }, React.createElement(TextField, __assign({\n    role: \"combobox\",\n    label: label,\n    \"aria-expanded\": isCalendarShown,\n    ariaLabel: ariaLabel,\n    \"aria-haspopup\": \"dialog\",\n    \"aria-controls\": isCalendarShown ? calloutId : undefined,\n    required: isRequired,\n    disabled: disabled,\n    errorMessage: errorMessage,\n    placeholder: placeholder,\n    borderless: borderless,\n    value: formattedDate,\n    componentRef: textFieldRef,\n    underlined: underlined,\n    tabIndex: tabIndex,\n    readOnly: !allowTextInput\n  }, textFieldProps, {\n    \"data-is-focusable\": dataIsFocusable,\n    id: textFieldId,\n    className: css(classNames.textField, textFieldProps && textFieldProps.className),\n    iconProps: __assign(__assign({\n      iconName: 'Calendar'\n    }, iconProps), {\n      className: css(classNames.icon, iconProps && iconProps.className),\n      onClick: onIconClick\n    }),\n    // eslint-disable-next-line react/jsx-no-bind\n    onRenderDescription: renderTextfieldDescription,\n    // eslint-disable-next-line react/jsx-no-bind\n    onKeyDown: onTextFieldKeyDown,\n    // eslint-disable-next-line react/jsx-no-bind\n    onFocus: onTextFieldFocus,\n    // eslint-disable-next-line react/jsx-no-bind\n    onBlur: onTextFieldBlur,\n    // eslint-disable-next-line react/jsx-no-bind\n    onClick: onTextFieldClick,\n    // eslint-disable-next-line react/jsx-no-bind\n    onChange: onTextFieldChanged,\n    onRenderInput: readOnly ? renderReadOnlyInput : undefined\n  }))), isCalendarShown && React.createElement(Callout, __assign({\n    id: calloutId,\n    role: \"dialog\",\n    ariaLabel: pickerAriaLabel,\n    isBeakVisible: false,\n    gapSpace: 0,\n    doNotLayer: false,\n    target: datePickerDiv.current,\n    directionalHint: DirectionalHint.bottomLeftEdge\n  }, calloutProps, {\n    className: css(classNames.callout, calloutProps && calloutProps.className),\n    // eslint-disable-next-line react/jsx-no-bind\n    onDismiss: calloutDismissed,\n    // eslint-disable-next-line react/jsx-no-bind\n    onPositioned: onCalloutPositioned\n  }), React.createElement(FocusTrapZone, {\n    isClickableOutsideFocusTrap: true,\n    disableFirstFocus: disableAutoFocus\n  }, React.createElement(CalendarType, __assign({}, calendarProps, {\n    // eslint-disable-next-line react/jsx-no-bind\n    onSelectDate: onSelectDate,\n    // eslint-disable-next-line react/jsx-no-bind\n    onDismiss: onCalendarDismissed,\n    isMonthPickerVisible: props.isMonthPickerVisible,\n    showMonthPickerAsOverlay: props.showMonthPickerAsOverlay,\n    today: props.today,\n    value: selectedDate || initialPickerDate,\n    firstDayOfWeek: firstDayOfWeek,\n    strings: strings,\n    highlightCurrentMonth: props.highlightCurrentMonth,\n    highlightSelectedMonth: props.highlightSelectedMonth,\n    showWeekNumbers: props.showWeekNumbers,\n    firstWeekOfYear: props.firstWeekOfYear,\n    showGoToToday: props.showGoToToday,\n    dateTimeFormatter: props.dateTimeFormatter,\n    minDate: minDate,\n    maxDate: maxDate,\n    componentRef: calendar,\n    showCloseButton: showCloseButton,\n    allFocusable: allFocusable\n  })))));\n});\nDatePickerBase.displayName = 'DatePickerBase';\nfunction isDateOutOfBounds(date, minDate, maxDate) {\n  return !!minDate && compareDatePart(minDate, date) > 0 || !!maxDate && compareDatePart(maxDate, date) < 0;\n}","map":{"version":3,"names":["React","KeyCodes","classNamesFunction","getNativeProps","divProperties","css","format","getPropsWithDefaults","Calendar","FirstWeekOfYear","getDatePartHashValue","compareDatePart","DayOfWeek","Callout","DirectionalHint","mergeStyles","TextField","FocusTrapZone","useId","useAsync","useControllableValue","defaultDatePickerStrings","getClassNames","DEFAULT_PROPS","allowTextInput","formatDate","date","toDateString","parseDateFromString","dateStr","match","Date","parse","firstDayOfWeek","Sunday","initialPickerDate","isRequired","isMonthPickerVisible","showMonthPickerAsOverlay","strings","highlightCurrentMonth","highlightSelectedMonth","borderless","pickerAriaLabel","showWeekNumbers","firstWeekOfYear","FirstDay","showGoToToday","showCloseButton","underlined","allFocusable","useFocusLogic","textFieldRef","useRef","preventFocusOpeningPicker","focus","_b","_a","current","call","preventNextFocusOpeningPicker","useCalendarVisibility","onAfterMenuDismiss","useState","isCalendarShown","setIsCalendarShown","isMounted","async","useEffect","requestAnimationFrame","useSelectedDate","value","onSelectDate","undefined","ev","newValue","selectedDate","setSelectedDateState","_c","formattedDate","setFormattedDate","setSelectedDate","newDate","useErrorMessage","inputValue","minDate","maxDate","textField","errorMessage","setErrorMessage","_d","statusMessage","setStatusMessage","isFirstLoadRef","validateOnLoad","validateTextInput","isNaN","getTime","selectedText","statusText","isResetStatusMessage","invalidInputErrorMessage","isDateOutOfBounds","isOutOfBoundsErrorMessage","isRequiredErrorMessage","DatePickerBase","forwardRef","propsWithoutDefaults","forwardedRef","props","label","theme","className","styles","disabled","ariaLabel","placeholder","calendarProps","calloutProps","textFieldProps","calendarAs","CalendarType","tabIndex","disableAutoFocus","id","calloutId","calendar","datePickerDiv","_e","_f","_g","_h","showDatePickerPopup","useCallback","useImperativeHandle","componentRef","reset","onTextFieldFocus","calendarDismissed","onCalloutPositioned","shouldFocus","setInitialFocus","onTextFieldBlur","onTextFieldChanged","dismissDatePickerPopup","onChange","onTextFieldKeyDown","which","enter","preventDefault","stopPropagation","escape","handleEscKey","down","altKey","onTextFieldClick","openOnClick","onIconClick","newlySelectedDate","renderTextfieldDescription","inputProps","defaultRender","createElement","Fragment","description","onRenderDescription","classNames","renderReadOnlyInput","divProps","readOnlyTextFieldClassName","readOnlyTextField","__assign","readOnlyPlaceholder","calloutDismissed","onCalendarDismissed","isDatePickerShown","nativeProps","iconProps","textFieldId","readOnly","dataIsFocusable","root","ref","wrapper","role","required","iconName","icon","onClick","onKeyDown","onFocus","onBlur","onRenderInput","isBeakVisible","gapSpace","doNotLayer","target","directionalHint","bottomLeftEdge","callout","onDismiss","onPositioned","isClickableOutsideFocusTrap","disableFirstFocus","today","dateTimeFormatter","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/DatePicker/DatePicker.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  css,\n  format,\n  getPropsWithDefaults,\n} from '@fluentui/utilities';\nimport { Calendar } from '../../Calendar';\nimport { FirstWeekOfYear, getDatePartHashValue, compareDatePart, DayOfWeek } from '@fluentui/date-time-utilities';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { mergeStyles } from '../../Styling';\nimport { TextField } from '../../TextField';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { useId, useAsync, useControllableValue } from '@fluentui/react-hooks';\nimport { defaultDatePickerStrings } from './defaults';\nimport type { IDatePickerProps, IDatePickerStyleProps, IDatePickerStyles } from './DatePicker.types';\nimport type { IRenderFunction } from '@fluentui/utilities';\nimport type { ICalendar } from '../../Calendar';\nimport type { ITextField, ITextFieldProps } from '../../TextField';\n\nconst getClassNames = classNamesFunction<IDatePickerStyleProps, IDatePickerStyles>();\n\nconst DEFAULT_PROPS: IDatePickerProps = {\n  allowTextInput: false,\n  formatDate: (date: Date) => (date ? date.toDateString() : ''),\n  parseDateFromString: (dateStr: string) => {\n    //if dateStr is DATE ONLY ISO 8601 -> add time so Date.parse() won't convert it to UTC\n    //See here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#date_time_string_format\n    if (dateStr.match(/^\\d{4}(-\\d{2}){2}$/)) {\n      dateStr += 'T12:00';\n    }\n    const date = Date.parse(dateStr);\n    return date ? new Date(date) : null;\n  },\n  firstDayOfWeek: DayOfWeek.Sunday,\n  initialPickerDate: new Date(),\n  isRequired: false,\n  isMonthPickerVisible: true,\n  showMonthPickerAsOverlay: false,\n  strings: defaultDatePickerStrings,\n  highlightCurrentMonth: false,\n  highlightSelectedMonth: false,\n  borderless: false,\n  pickerAriaLabel: 'Calendar',\n  showWeekNumbers: false,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  showGoToToday: true,\n  showCloseButton: false,\n  underlined: false,\n  allFocusable: false,\n};\n\nfunction useFocusLogic() {\n  const textFieldRef = React.useRef<ITextField>(null);\n  const preventFocusOpeningPicker = React.useRef(false);\n\n  const focus = () => {\n    textFieldRef.current?.focus?.();\n  };\n\n  const preventNextFocusOpeningPicker = () => {\n    preventFocusOpeningPicker.current = true;\n  };\n\n  return [textFieldRef, focus, preventFocusOpeningPicker, preventNextFocusOpeningPicker] as const;\n}\n\nfunction useCalendarVisibility({ allowTextInput, onAfterMenuDismiss }: IDatePickerProps, focus: () => void) {\n  const [isCalendarShown, setIsCalendarShown] = React.useState(false);\n  const isMounted = React.useRef(false);\n  const async = useAsync();\n\n  React.useEffect(() => {\n    if (isMounted.current && !isCalendarShown) {\n      // In browsers like IE, textfield gets unfocused when datepicker is collapsed\n      if (allowTextInput) {\n        async.requestAnimationFrame(focus);\n      }\n\n      // If DatePicker's menu (Calendar) is closed, run onAfterMenuDismiss\n      onAfterMenuDismiss?.();\n    }\n    isMounted.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isCalendarShown]);\n\n  return [isCalendarShown, setIsCalendarShown] as const;\n}\n\nfunction useSelectedDate({ formatDate, value, onSelectDate }: IDatePickerProps) {\n  const [selectedDate, setSelectedDateState] = useControllableValue(value, undefined, (ev, newValue) =>\n    onSelectDate?.(newValue),\n  );\n  const [formattedDate, setFormattedDate] = React.useState(() => (value && formatDate ? formatDate(value) : ''));\n\n  const setSelectedDate = (newDate: Date | undefined) => {\n    setSelectedDateState(newDate);\n    setFormattedDate(newDate && formatDate ? formatDate(newDate) : '');\n  };\n\n  React.useEffect(() => {\n    setFormattedDate(value && formatDate ? formatDate(value) : '');\n  }, [formatDate, value]);\n\n  return [selectedDate, formattedDate, setSelectedDate, setFormattedDate] as const;\n}\n\nfunction useErrorMessage(\n  {\n    isRequired,\n    allowTextInput,\n    strings,\n    parseDateFromString,\n    onSelectDate,\n    formatDate,\n    minDate,\n    maxDate,\n    textField,\n  }: IDatePickerProps,\n  selectedDate: Date | undefined,\n  setSelectedDate: (date: Date | undefined) => void,\n  inputValue: string,\n  isCalendarShown: boolean,\n) {\n  const [errorMessage, setErrorMessage] = React.useState<string | undefined>();\n  const [statusMessage, setStatusMessage] = React.useState<string | undefined>();\n  const isFirstLoadRef = React.useRef<boolean>(true);\n\n  const validateOnLoad = textField?.validateOnLoad ?? true;\n\n  const validateTextInput = (date: Date | null = null): void => {\n    if (allowTextInput) {\n      if (inputValue || date) {\n        // Don't parse if the selected date has the same formatted string as what we're about to parse.\n        // The formatted string might be ambiguous (ex: \"1/2/3\" or \"New Year Eve\") and the parser might\n        // not be able to come up with the exact same date.\n        if (selectedDate && !errorMessage && formatDate && formatDate(date ?? selectedDate) === inputValue) {\n          return;\n        }\n        date = date || parseDateFromString!(inputValue);\n\n        // Check if date is null, or date is Invalid Date\n        if (!date || isNaN(date.getTime())) {\n          // Reset invalid input field, if formatting is available\n          setSelectedDate(selectedDate);\n          // default the newer isResetStatusMessage string to invalidInputErrorMessage for legacy support\n          const selectedText = formatDate ? formatDate(selectedDate) : '';\n          const statusText = strings!.isResetStatusMessage\n            ? format(strings!.isResetStatusMessage, inputValue, selectedText)\n            : strings!.invalidInputErrorMessage || '';\n          setStatusMessage(statusText);\n        } else {\n          // Check against optional date boundaries\n          if (isDateOutOfBounds(date, minDate, maxDate)) {\n            setErrorMessage(strings!.isOutOfBoundsErrorMessage || ' ');\n          } else {\n            setSelectedDate(date);\n            setErrorMessage(undefined);\n            setStatusMessage(undefined);\n          }\n        }\n      } else {\n        // Only show error for empty inputValue if it is a required field\n        setErrorMessage(isRequired ? strings!.isRequiredErrorMessage || ' ' : undefined);\n\n        // If no input date string or input date string is invalid\n        // date variable will be null, callback should expect null value for this case\n        onSelectDate?.(date);\n      }\n    } else if (isRequired && !inputValue) {\n      // Check when DatePicker is a required field but has NO input value\n      setErrorMessage(strings!.isRequiredErrorMessage || ' ');\n    } else {\n      // Cleanup the error message and status message\n      setErrorMessage(undefined);\n      setStatusMessage(undefined);\n    }\n  };\n\n  React.useEffect(() => {\n    if (isFirstLoadRef.current) {\n      isFirstLoadRef.current = false;\n\n      if (!validateOnLoad) {\n        return;\n      }\n    }\n\n    if (isRequired && !selectedDate) {\n      setErrorMessage(strings!.isRequiredErrorMessage || ' ');\n    } else if (selectedDate && isDateOutOfBounds(selectedDate, minDate, maxDate)) {\n      setErrorMessage(strings!.isOutOfBoundsErrorMessage || ' ');\n    } else {\n      setErrorMessage(undefined);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // We don't want to compare the date itself, since two instances of date at the same time are not equal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    minDate && getDatePartHashValue(minDate),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    maxDate && getDatePartHashValue(maxDate),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    selectedDate && getDatePartHashValue(selectedDate),\n    isRequired,\n    validateOnLoad,\n  ]);\n\n  return [\n    isCalendarShown ? undefined : errorMessage,\n    validateTextInput,\n    setErrorMessage,\n    isCalendarShown ? undefined : statusMessage,\n    setStatusMessage,\n  ] as const;\n}\n\nexport const DatePickerBase: React.FunctionComponent<IDatePickerProps> = React.forwardRef<\n  HTMLDivElement,\n  IDatePickerProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  const {\n    firstDayOfWeek,\n    strings,\n    label,\n    theme,\n    className,\n    styles,\n    initialPickerDate,\n    isRequired,\n    disabled,\n    ariaLabel,\n    pickerAriaLabel,\n    placeholder,\n    allowTextInput,\n    borderless,\n    minDate,\n    maxDate,\n    showCloseButton,\n    calendarProps,\n    calloutProps,\n    textField: textFieldProps,\n    underlined,\n    allFocusable,\n    calendarAs: CalendarType = Calendar,\n    tabIndex,\n    disableAutoFocus = true,\n  } = props;\n\n  const id = useId('DatePicker', props.id);\n  const calloutId = useId('DatePicker-Callout');\n\n  const calendar = React.useRef<ICalendar>(null);\n  const datePickerDiv = React.useRef<HTMLDivElement>(null);\n\n  const [textFieldRef, focus, preventFocusOpeningPicker, preventNextFocusOpeningPicker] = useFocusLogic();\n  const [isCalendarShown, setIsCalendarShown] = useCalendarVisibility(props, focus);\n  const [selectedDate, formattedDate, setSelectedDate, setFormattedDate] = useSelectedDate(props);\n  const [errorMessage, validateTextInput, setErrorMessage, statusMessage, setStatusMessage] = useErrorMessage(\n    props,\n    selectedDate,\n    setSelectedDate,\n    formattedDate,\n    isCalendarShown,\n  );\n\n  const showDatePickerPopup = React.useCallback((): void => {\n    if (!isCalendarShown) {\n      preventNextFocusOpeningPicker();\n      setIsCalendarShown(true);\n    }\n  }, [isCalendarShown, preventNextFocusOpeningPicker, setIsCalendarShown]);\n\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      focus,\n      reset() {\n        setIsCalendarShown(false);\n        setSelectedDate(undefined);\n        setErrorMessage(undefined);\n        setStatusMessage(undefined);\n      },\n      showDatePickerPopup,\n    }),\n    [focus, setErrorMessage, setIsCalendarShown, setSelectedDate, setStatusMessage, showDatePickerPopup],\n  );\n\n  const onTextFieldFocus = (): void => {\n    if (disableAutoFocus) {\n      return;\n    }\n\n    if (!allowTextInput) {\n      if (!preventFocusOpeningPicker.current) {\n        showDatePickerPopup();\n      }\n      preventFocusOpeningPicker.current = false;\n    }\n  };\n\n  const onSelectDate = (date: Date): void => {\n    if (props.calendarProps && props.calendarProps.onSelectDate) {\n      props.calendarProps.onSelectDate(date);\n    }\n\n    calendarDismissed(date);\n  };\n\n  const onCalloutPositioned = (): void => {\n    let shouldFocus = true;\n    // If the user has specified that the callout shouldn't use initial focus, then respect\n    // that and don't attempt to set focus. That will default to true within the callout\n    // so we need to check if it's undefined here.\n    if (props.calloutProps && props.calloutProps.setInitialFocus !== undefined) {\n      shouldFocus = props.calloutProps.setInitialFocus;\n    }\n    if (calendar.current && shouldFocus) {\n      calendar.current.focus();\n    }\n  };\n\n  const onTextFieldBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    validateTextInput();\n  };\n\n  const onTextFieldChanged = (ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, newValue: string): void => {\n    const { textField } = props;\n\n    if (allowTextInput) {\n      if (isCalendarShown) {\n        dismissDatePickerPopup();\n      }\n\n      setFormattedDate(newValue);\n    }\n\n    textField?.onChange?.(ev, newValue);\n  };\n\n  const onTextFieldKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (!isCalendarShown) {\n          validateTextInput();\n          showDatePickerPopup();\n        } else {\n          // When DatePicker allows input date string directly,\n          // it is expected to hit another enter to close the popup\n          if (props.allowTextInput) {\n            dismissDatePickerPopup();\n          }\n        }\n        break;\n\n      case KeyCodes.escape:\n        handleEscKey(ev);\n        break;\n\n      case KeyCodes.down:\n        if (ev.altKey && !isCalendarShown) {\n          showDatePickerPopup();\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onTextFieldClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    // default openOnClick to !props.disableAutoFocus for legacy support of disableAutoFocus behavior\n    const openOnClick = props.openOnClick || !props.disableAutoFocus;\n    if (openOnClick && !isCalendarShown && !props.disabled) {\n      showDatePickerPopup();\n      return;\n    }\n    if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n\n  const onIconClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.stopPropagation();\n    if (!isCalendarShown && !props.disabled) {\n      showDatePickerPopup();\n    } else if (props.allowTextInput) {\n      dismissDatePickerPopup();\n    }\n  };\n\n  const dismissDatePickerPopup = (newlySelectedDate?: Date): void => {\n    if (isCalendarShown) {\n      setIsCalendarShown(false);\n\n      validateTextInput(newlySelectedDate);\n      if (!allowTextInput && newlySelectedDate) {\n        setSelectedDate(newlySelectedDate);\n      }\n    }\n  };\n\n  const renderTextfieldDescription = (inputProps: ITextFieldProps, defaultRender: IRenderFunction<ITextFieldProps>) => {\n    return (\n      <>\n        {inputProps.description || inputProps.onRenderDescription ? defaultRender(inputProps) : null}\n        <div aria-live=\"assertive\" className={classNames.statusMessage}>\n          {statusMessage}\n        </div>\n      </>\n    );\n  };\n\n  const renderReadOnlyInput: ITextFieldProps['onRenderInput'] = inputProps => {\n    const divProps = getNativeProps(inputProps!, divProperties);\n    // Need to merge styles so the provided styles win over the default ones. This is due to the classnames having the\n    // same specificity.\n    const readOnlyTextFieldClassName = mergeStyles(divProps.className, classNames.readOnlyTextField);\n\n    // Talkback on Android treats readonly inputs as disabled, so swipe gestures to open the Calendar\n    // don't register. Workaround is rendering a div with role=\"combobox\" (passed in via TextField props).\n    return (\n      <div {...divProps} className={readOnlyTextFieldClassName} tabIndex={tabIndex || 0}>\n        {formattedDate || (\n          // Putting the placeholder in a separate span fixes specificity issues for the text color\n          <span className={classNames.readOnlyPlaceholder}>{placeholder}</span>\n        )}\n      </div>\n    );\n  };\n\n  /**\n   * Callback for closing the calendar callout\n   */\n  const calendarDismissed = (newlySelectedDate?: Date): void => {\n    preventNextFocusOpeningPicker();\n    dismissDatePickerPopup(newlySelectedDate);\n    // don't need to focus the text box, if necessary the focusTrapZone will do it\n  };\n\n  const calloutDismissed = (ev: React.MouseEvent<HTMLElement>): void => {\n    calendarDismissed();\n  };\n\n  const handleEscKey = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (isCalendarShown) {\n      ev.stopPropagation();\n      calendarDismissed();\n    }\n  };\n\n  const onCalendarDismissed = (ev?: React.MouseEvent<HTMLElement>): void => {\n    calendarDismissed();\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    disabled,\n    underlined,\n    label: !!label,\n    isDatePickerShown: isCalendarShown,\n  });\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['value']);\n  const iconProps = textFieldProps && textFieldProps.iconProps;\n  const textFieldId =\n    textFieldProps && textFieldProps.id && textFieldProps.id !== id ? textFieldProps.id : id + '-label';\n  const readOnly = !allowTextInput && !disabled;\n\n  const dataIsFocusable = (textFieldProps as any)?.['data-is-focusable'] ?? (props as any)['data-is-focusable'] ?? true;\n\n  return (\n    <div {...nativeProps} className={classNames.root} ref={forwardedRef}>\n      <div ref={datePickerDiv} aria-owns={isCalendarShown ? calloutId : undefined} className={classNames.wrapper}>\n        <TextField\n          role=\"combobox\"\n          label={label}\n          aria-expanded={isCalendarShown}\n          ariaLabel={ariaLabel}\n          aria-haspopup=\"dialog\"\n          aria-controls={isCalendarShown ? calloutId : undefined}\n          required={isRequired}\n          disabled={disabled}\n          errorMessage={errorMessage}\n          placeholder={placeholder}\n          borderless={borderless}\n          value={formattedDate}\n          componentRef={textFieldRef}\n          underlined={underlined}\n          tabIndex={tabIndex}\n          readOnly={!allowTextInput}\n          {...textFieldProps}\n          data-is-focusable={dataIsFocusable}\n          id={textFieldId}\n          className={css(classNames.textField, textFieldProps && textFieldProps.className)}\n          iconProps={{\n            iconName: 'Calendar',\n            ...iconProps,\n            className: css(classNames.icon, iconProps && iconProps.className),\n            onClick: onIconClick,\n          }}\n          // eslint-disable-next-line react/jsx-no-bind\n          onRenderDescription={renderTextfieldDescription}\n          // eslint-disable-next-line react/jsx-no-bind\n          onKeyDown={onTextFieldKeyDown}\n          // eslint-disable-next-line react/jsx-no-bind\n          onFocus={onTextFieldFocus}\n          // eslint-disable-next-line react/jsx-no-bind\n          onBlur={onTextFieldBlur}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={onTextFieldClick}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={onTextFieldChanged}\n          onRenderInput={readOnly ? renderReadOnlyInput : undefined}\n        />\n      </div>\n      {isCalendarShown && (\n        <Callout\n          id={calloutId}\n          role=\"dialog\"\n          ariaLabel={pickerAriaLabel}\n          isBeakVisible={false}\n          gapSpace={0}\n          doNotLayer={false}\n          target={datePickerDiv.current}\n          directionalHint={DirectionalHint.bottomLeftEdge}\n          {...calloutProps}\n          className={css(classNames.callout, calloutProps && calloutProps.className)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onDismiss={calloutDismissed}\n          // eslint-disable-next-line react/jsx-no-bind\n          onPositioned={onCalloutPositioned}\n        >\n          <FocusTrapZone isClickableOutsideFocusTrap={true} disableFirstFocus={disableAutoFocus}>\n            <CalendarType\n              {...calendarProps}\n              // eslint-disable-next-line react/jsx-no-bind\n              onSelectDate={onSelectDate}\n              // eslint-disable-next-line react/jsx-no-bind\n              onDismiss={onCalendarDismissed}\n              isMonthPickerVisible={props.isMonthPickerVisible}\n              showMonthPickerAsOverlay={props.showMonthPickerAsOverlay}\n              today={props.today}\n              value={selectedDate || initialPickerDate}\n              firstDayOfWeek={firstDayOfWeek}\n              strings={strings!}\n              highlightCurrentMonth={props.highlightCurrentMonth}\n              highlightSelectedMonth={props.highlightSelectedMonth}\n              showWeekNumbers={props.showWeekNumbers}\n              firstWeekOfYear={props.firstWeekOfYear}\n              showGoToToday={props.showGoToToday}\n              dateTimeFormatter={props.dateTimeFormatter}\n              minDate={minDate}\n              maxDate={maxDate}\n              componentRef={calendar}\n              showCloseButton={showCloseButton}\n              allFocusable={allFocusable}\n            />\n          </FocusTrapZone>\n        </Callout>\n      )}\n    </div>\n  );\n});\nDatePickerBase.displayName = 'DatePickerBase';\n\nfunction isDateOutOfBounds(date: Date, minDate?: Date, maxDate?: Date): boolean {\n  return (!!minDate && compareDatePart(minDate!, date) > 0) || (!!maxDate && compareDatePart(maxDate!, date) < 0);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}