{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, KeyCodes, getRTL, initializeComponentRef } from '@fluentui/utilities';\nimport { AnimationDirection } from '../Calendar/Calendar.types';\nimport { CalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid';\nimport { compareDatePart, getStartDateOfWeek, addDays, addMonths, compareDates, FirstWeekOfYear, DateRangeType, DayOfWeek, DEFAULT_DATE_FORMATTING } from '@fluentui/date-time-utilities';\nimport { Icon } from '../../Icon';\nimport { defaultWeeklyDayPickerStrings, defaultWeeklyDayPickerNavigationIcons } from './defaults';\nvar getClassNames = classNamesFunction();\nvar WeeklyDayPickerBase = /** @class */function (_super) {\n  __extends(WeeklyDayPickerBase, _super);\n  function WeeklyDayPickerBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._dayGrid = React.createRef();\n    _this._onSelectDate = function (date) {\n      var onSelectDate = _this.props.onSelectDate;\n      // don't set the navigated date on selection because selection never causes navigation\n      _this.setState({\n        selectedDate: date\n      });\n      _this._focusOnUpdate = true;\n      if (onSelectDate) {\n        onSelectDate(date);\n      }\n    };\n    _this._onNavigateDate = function (date, focusOnNavigatedDay) {\n      var onNavigateDate = _this.props.onNavigateDate;\n      _this.setState({\n        navigatedDate: date\n      });\n      _this._focusOnUpdate = focusOnNavigatedDay;\n      if (onNavigateDate) {\n        onNavigateDate(date);\n      }\n    };\n    _this._renderPreviousWeekNavigationButton = function (classNames) {\n      var _a;\n      var _b = _this.props,\n        minDate = _b.minDate,\n        firstDayOfWeek = _b.firstDayOfWeek,\n        navigationIcons = _b.navigationIcons;\n      var navigatedDate = _this.state.navigatedDate;\n      var leftNavigationIcon = getRTL() ? navigationIcons.rightNavigation : navigationIcons.leftNavigation;\n      // determine if previous week in bounds\n      var prevWeekInBounds = minDate ? compareDatePart(minDate, getStartDateOfWeek(navigatedDate, firstDayOfWeek)) < 0 : true;\n      return React.createElement(\"button\", {\n        className: css(classNames.navigationIconButton, (_a = {}, _a[classNames.disabledStyle] = !prevWeekInBounds, _a)),\n        disabled: !prevWeekInBounds,\n        \"aria-disabled\": !prevWeekInBounds,\n        onClick: prevWeekInBounds ? _this._onSelectPrevDateRange : undefined,\n        onKeyDown: prevWeekInBounds ? _this._onButtonKeyDown(_this._onSelectPrevDateRange) : undefined,\n        title: _this._createPreviousWeekAriaLabel(),\n        type: \"button\"\n      }, React.createElement(Icon, {\n        iconName: leftNavigationIcon\n      }));\n    };\n    _this._renderNextWeekNavigationButton = function (classNames) {\n      var _a;\n      var _b = _this.props,\n        maxDate = _b.maxDate,\n        firstDayOfWeek = _b.firstDayOfWeek,\n        navigationIcons = _b.navigationIcons;\n      var navigatedDate = _this.state.navigatedDate;\n      var rightNavigationIcon = getRTL() ? navigationIcons.leftNavigation : navigationIcons.rightNavigation;\n      // determine if next week in bounds\n      var nextWeekInBounds = maxDate ? compareDatePart(addDays(getStartDateOfWeek(navigatedDate, firstDayOfWeek), 7), maxDate) < 0 : true;\n      return React.createElement(\"button\", {\n        className: css(classNames.navigationIconButton, (_a = {}, _a[classNames.disabledStyle] = !nextWeekInBounds, _a)),\n        disabled: !nextWeekInBounds,\n        \"aria-disabled\": !nextWeekInBounds,\n        onClick: nextWeekInBounds ? _this._onSelectNextDateRange : undefined,\n        onKeyDown: nextWeekInBounds ? _this._onButtonKeyDown(_this._onSelectNextDateRange) : undefined,\n        title: _this._createNextWeekAriaLabel(),\n        type: \"button\"\n      }, React.createElement(Icon, {\n        iconName: rightNavigationIcon\n      }));\n    };\n    _this._onSelectPrevDateRange = function () {\n      if (_this.props.showFullMonth) {\n        _this._navigateDate(addMonths(_this.state.navigatedDate, -1));\n      } else {\n        _this._navigateDate(addDays(_this.state.navigatedDate, -7));\n      }\n    };\n    _this._onSelectNextDateRange = function () {\n      if (_this.props.showFullMonth) {\n        _this._navigateDate(addMonths(_this.state.navigatedDate, 1));\n      } else {\n        _this._navigateDate(addDays(_this.state.navigatedDate, 7));\n      }\n    };\n    _this._navigateDate = function (date) {\n      _this.setState({\n        navigatedDate: date\n      });\n      if (_this.props.onNavigateDate) {\n        _this.props.onNavigateDate(date);\n      }\n    };\n    _this._onWrapperKeyDown = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.enter:\n          ev.preventDefault();\n          break;\n        case KeyCodes.backspace:\n          ev.preventDefault();\n          break;\n        default:\n          break;\n      }\n    };\n    _this._onButtonKeyDown = function (callback) {\n      return function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n          case KeyCodes.enter:\n            callback();\n            break;\n        }\n      };\n    };\n    _this._onTouchStart = function (ev) {\n      var touch = ev.touches[0];\n      if (touch) {\n        _this._initialTouchX = touch.clientX;\n      }\n    };\n    _this._onTouchMove = function (ev) {\n      var isRtl = getRTL();\n      var touch = ev.touches[0];\n      if (touch && _this._initialTouchX !== undefined && touch.clientX !== _this._initialTouchX) {\n        if ((touch.clientX - _this._initialTouchX) * (isRtl ? -1 : 1) < 0) {\n          // swipe right\n          _this._onSelectNextDateRange();\n        } else {\n          // swipe left\n          _this._onSelectPrevDateRange();\n        }\n        _this._initialTouchX = undefined;\n      }\n    };\n    _this._createPreviousWeekAriaLabel = function () {\n      var _a = _this.props,\n        strings = _a.strings,\n        showFullMonth = _a.showFullMonth,\n        firstDayOfWeek = _a.firstDayOfWeek;\n      var navigatedDate = _this.state.navigatedDate;\n      var ariaLabel = undefined;\n      if (showFullMonth && strings.prevMonthAriaLabel) {\n        ariaLabel = strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, -1).getMonth()];\n      } else if (!showFullMonth && strings.prevWeekAriaLabel) {\n        var firstDayOfPreviousWeek = getStartDateOfWeek(addDays(navigatedDate, -7), firstDayOfWeek);\n        var lastDayOfPreviousWeek = addDays(firstDayOfPreviousWeek, 6);\n        ariaLabel = strings.prevWeekAriaLabel + ' ' + _this._formatDateRange(firstDayOfPreviousWeek, lastDayOfPreviousWeek);\n      }\n      return ariaLabel;\n    };\n    _this._createNextWeekAriaLabel = function () {\n      var _a = _this.props,\n        strings = _a.strings,\n        showFullMonth = _a.showFullMonth,\n        firstDayOfWeek = _a.firstDayOfWeek;\n      var navigatedDate = _this.state.navigatedDate;\n      var ariaLabel = undefined;\n      if (showFullMonth && strings.nextMonthAriaLabel) {\n        ariaLabel = strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate, 1).getMonth()];\n      } else if (!showFullMonth && strings.nextWeekAriaLabel) {\n        var firstDayOfNextWeek = getStartDateOfWeek(addDays(navigatedDate, 7), firstDayOfWeek);\n        var lastDayOfNextWeek = addDays(firstDayOfNextWeek, 6);\n        ariaLabel = strings.nextWeekAriaLabel + ' ' + _this._formatDateRange(firstDayOfNextWeek, lastDayOfNextWeek);\n      }\n      return ariaLabel;\n    };\n    _this._formatDateRange = function (startDate, endDate) {\n      var _a = _this.props,\n        dateTimeFormatter = _a.dateTimeFormatter,\n        strings = _a.strings;\n      return \"\".concat(dateTimeFormatter === null || dateTimeFormatter === void 0 ? void 0 : dateTimeFormatter.formatMonthDayYear(startDate, strings), \" - \").concat(dateTimeFormatter === null || dateTimeFormatter === void 0 ? void 0 : dateTimeFormatter.formatMonthDayYear(endDate, strings));\n    };\n    initializeComponentRef(_this);\n    var currentDate = props.initialDate && !isNaN(props.initialDate.getTime()) ? props.initialDate : props.today || new Date();\n    _this.state = {\n      selectedDate: currentDate,\n      navigatedDate: currentDate,\n      previousShowFullMonth: !!props.showFullMonth,\n      animationDirection: props.animationDirection\n    };\n    _this._focusOnUpdate = false;\n    return _this;\n  }\n  WeeklyDayPickerBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var currentDate = nextProps.initialDate && !isNaN(nextProps.initialDate.getTime()) ? nextProps.initialDate : nextProps.today || new Date();\n    var showFullMonth = !!nextProps.showFullMonth;\n    var newAnimationDirection = showFullMonth !== prevState.previousShowFullMonth ? AnimationDirection.Vertical : AnimationDirection.Horizontal;\n    if (!compareDates(currentDate, prevState.selectedDate)) {\n      return {\n        selectedDate: currentDate,\n        navigatedDate: currentDate,\n        previousShowFullMonth: showFullMonth,\n        animationDirection: newAnimationDirection\n      };\n    }\n    return {\n      selectedDate: currentDate,\n      navigatedDate: prevState.navigatedDate,\n      previousShowFullMonth: showFullMonth,\n      animationDirection: newAnimationDirection\n    };\n  };\n  WeeklyDayPickerBase.prototype.focus = function () {\n    if (this._dayGrid && this._dayGrid.current) {\n      this._dayGrid.current.focus();\n    }\n  };\n  WeeklyDayPickerBase.prototype.render = function () {\n    var _a = this.props,\n      strings = _a.strings,\n      dateTimeFormatter = _a.dateTimeFormatter,\n      firstDayOfWeek = _a.firstDayOfWeek,\n      minDate = _a.minDate,\n      maxDate = _a.maxDate,\n      restrictedDates = _a.restrictedDates,\n      today = _a.today,\n      styles = _a.styles,\n      theme = _a.theme,\n      className = _a.className,\n      showFullMonth = _a.showFullMonth,\n      weeksToShow = _a.weeksToShow,\n      calendarDayGridProps = __rest(_a, [\"strings\", \"dateTimeFormatter\", \"firstDayOfWeek\", \"minDate\", \"maxDate\", \"restrictedDates\", \"today\", \"styles\", \"theme\", \"className\", \"showFullMonth\", \"weeksToShow\"]);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    return React.createElement(\"div\", {\n      className: classNames.root,\n      onKeyDown: this._onWrapperKeyDown,\n      onTouchStart: this._onTouchStart,\n      onTouchMove: this._onTouchMove,\n      \"aria-expanded\": showFullMonth\n    }, this._renderPreviousWeekNavigationButton(classNames), React.createElement(CalendarDayGrid, __assign({\n      styles: styles,\n      componentRef: this._dayGrid,\n      strings: strings,\n      selectedDate: this.state.selectedDate,\n      navigatedDate: this.state.navigatedDate,\n      firstDayOfWeek: firstDayOfWeek,\n      firstWeekOfYear: FirstWeekOfYear.FirstDay,\n      dateRangeType: DateRangeType.Day,\n      weeksToShow: showFullMonth ? weeksToShow : 1,\n      dateTimeFormatter: dateTimeFormatter,\n      minDate: minDate,\n      maxDate: maxDate,\n      restrictedDates: restrictedDates,\n      onSelectDate: this._onSelectDate,\n      onNavigateDate: this._onNavigateDate,\n      today: today,\n      lightenDaysOutsideNavigatedMonth: showFullMonth,\n      animationDirection: this.state.animationDirection\n    }, calendarDayGridProps)), this._renderNextWeekNavigationButton(classNames));\n  };\n  WeeklyDayPickerBase.prototype.componentDidUpdate = function () {\n    if (this._focusOnUpdate) {\n      this.focus();\n      this._focusOnUpdate = false;\n    }\n  };\n  WeeklyDayPickerBase.defaultProps = {\n    onSelectDate: undefined,\n    initialDate: undefined,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    strings: defaultWeeklyDayPickerStrings,\n    navigationIcons: defaultWeeklyDayPickerNavigationIcons,\n    dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n    animationDirection: AnimationDirection.Horizontal\n  };\n  return WeeklyDayPickerBase;\n}(React.Component);\nexport { WeeklyDayPickerBase };","map":{"version":3,"names":["React","classNamesFunction","css","KeyCodes","getRTL","initializeComponentRef","AnimationDirection","CalendarDayGrid","compareDatePart","getStartDateOfWeek","addDays","addMonths","compareDates","FirstWeekOfYear","DateRangeType","DayOfWeek","DEFAULT_DATE_FORMATTING","Icon","defaultWeeklyDayPickerStrings","defaultWeeklyDayPickerNavigationIcons","getClassNames","WeeklyDayPickerBase","_super","__extends","props","_this","call","_dayGrid","createRef","_onSelectDate","date","onSelectDate","setState","selectedDate","_focusOnUpdate","_onNavigateDate","focusOnNavigatedDay","onNavigateDate","navigatedDate","_renderPreviousWeekNavigationButton","classNames","_b","minDate","firstDayOfWeek","navigationIcons","state","leftNavigationIcon","rightNavigation","leftNavigation","prevWeekInBounds","createElement","className","navigationIconButton","_a","disabledStyle","disabled","onClick","_onSelectPrevDateRange","undefined","onKeyDown","_onButtonKeyDown","title","_createPreviousWeekAriaLabel","type","iconName","_renderNextWeekNavigationButton","maxDate","rightNavigationIcon","nextWeekInBounds","_onSelectNextDateRange","_createNextWeekAriaLabel","showFullMonth","_navigateDate","_onWrapperKeyDown","ev","which","enter","preventDefault","backspace","callback","_onTouchStart","touch","touches","_initialTouchX","clientX","_onTouchMove","isRtl","strings","ariaLabel","prevMonthAriaLabel","months","getMonth","prevWeekAriaLabel","firstDayOfPreviousWeek","lastDayOfPreviousWeek","_formatDateRange","nextMonthAriaLabel","nextWeekAriaLabel","firstDayOfNextWeek","lastDayOfNextWeek","startDate","endDate","dateTimeFormatter","concat","formatMonthDayYear","currentDate","initialDate","isNaN","getTime","today","Date","previousShowFullMonth","animationDirection","getDerivedStateFromProps","nextProps","prevState","newAnimationDirection","Vertical","Horizontal","prototype","focus","current","render","restrictedDates","styles","theme","weeksToShow","calendarDayGridProps","__rest","root","onTouchStart","onTouchMove","__assign","componentRef","firstWeekOfYear","FirstDay","dateRangeType","Day","lightenDaysOutsideNavigatedMonth","componentDidUpdate","defaultProps","Sunday","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/WeeklyDayPicker/WeeklyDayPicker.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, css, KeyCodes, getRTL, initializeComponentRef } from '@fluentui/utilities';\nimport { AnimationDirection } from '../Calendar/Calendar.types';\nimport { CalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid';\nimport {\n  compareDatePart,\n  getStartDateOfWeek,\n  addDays,\n  addMonths,\n  compareDates,\n  FirstWeekOfYear,\n  DateRangeType,\n  DayOfWeek,\n  DEFAULT_DATE_FORMATTING,\n} from '@fluentui/date-time-utilities';\nimport { Icon } from '../../Icon';\nimport { defaultWeeklyDayPickerStrings, defaultWeeklyDayPickerNavigationIcons } from './defaults';\nimport type { IProcessedStyleSet } from '@fluentui/style-utilities';\nimport type {\n  IWeeklyDayPickerProps,\n  IWeeklyDayPickerStyleProps,\n  IWeeklyDayPickerStyles,\n} from './WeeklyDayPicker.types';\nimport type { ICalendarDayGrid } from '../CalendarDayGrid/CalendarDayGrid.types';\n\nconst getClassNames = classNamesFunction<IWeeklyDayPickerStyleProps, IWeeklyDayPickerStyles>();\n\nexport interface IWeeklyDayPickerState {\n  /** The currently focused date in the week picker, but not necessarily selected */\n  navigatedDate: Date;\n\n  /** The currently selected date in the calendar */\n  selectedDate: Date;\n\n  /** Tracking whether we just toggled showFullMonth */\n  previousShowFullMonth: boolean;\n\n  /** Whether to animate veritcally or horizontally */\n  animationDirection: AnimationDirection;\n}\n\nexport class WeeklyDayPickerBase extends React.Component<IWeeklyDayPickerProps, IWeeklyDayPickerState> {\n  public static defaultProps: IWeeklyDayPickerProps = {\n    onSelectDate: undefined,\n    initialDate: undefined,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    strings: defaultWeeklyDayPickerStrings,\n    navigationIcons: defaultWeeklyDayPickerNavigationIcons,\n    dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n    animationDirection: AnimationDirection.Horizontal,\n  };\n\n  private _dayGrid = React.createRef<ICalendarDayGrid>();\n  private _focusOnUpdate: boolean;\n  private _initialTouchX: number | undefined;\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IWeeklyDayPickerProps>,\n    prevState: Readonly<IWeeklyDayPickerState>,\n  ): Partial<IWeeklyDayPickerState> | null {\n    const currentDate =\n      nextProps.initialDate && !isNaN(nextProps.initialDate.getTime())\n        ? nextProps.initialDate\n        : nextProps.today || new Date();\n    const showFullMonth = !!nextProps.showFullMonth;\n    const newAnimationDirection =\n      showFullMonth !== prevState.previousShowFullMonth ? AnimationDirection.Vertical : AnimationDirection.Horizontal;\n\n    if (!compareDates(currentDate, prevState.selectedDate)) {\n      return {\n        selectedDate: currentDate,\n        navigatedDate: currentDate,\n        previousShowFullMonth: showFullMonth,\n        animationDirection: newAnimationDirection,\n      };\n    }\n\n    return {\n      selectedDate: currentDate,\n      navigatedDate: prevState.navigatedDate,\n      previousShowFullMonth: showFullMonth,\n      animationDirection: newAnimationDirection,\n    };\n  }\n\n  public constructor(props: IWeeklyDayPickerProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    const currentDate =\n      props.initialDate && !isNaN(props.initialDate.getTime()) ? props.initialDate : props.today || new Date();\n\n    this.state = {\n      selectedDate: currentDate,\n      navigatedDate: currentDate,\n      previousShowFullMonth: !!props.showFullMonth,\n      animationDirection: props.animationDirection!,\n    };\n    this._focusOnUpdate = false;\n  }\n\n  public focus(): void {\n    if (this._dayGrid && this._dayGrid.current) {\n      this._dayGrid.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      strings,\n      dateTimeFormatter,\n      firstDayOfWeek,\n      minDate,\n      maxDate,\n      restrictedDates,\n      today,\n      styles,\n      theme,\n      className,\n      showFullMonth,\n      weeksToShow,\n      ...calendarDayGridProps\n    } = this.props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <div\n        className={classNames.root}\n        onKeyDown={this._onWrapperKeyDown}\n        onTouchStart={this._onTouchStart}\n        onTouchMove={this._onTouchMove}\n        aria-expanded={showFullMonth}\n      >\n        {this._renderPreviousWeekNavigationButton(classNames)}\n        <CalendarDayGrid\n          styles={styles}\n          componentRef={this._dayGrid}\n          strings={strings}\n          selectedDate={this.state.selectedDate!}\n          navigatedDate={this.state.navigatedDate!}\n          firstDayOfWeek={firstDayOfWeek!}\n          firstWeekOfYear={FirstWeekOfYear.FirstDay}\n          dateRangeType={DateRangeType.Day}\n          weeksToShow={showFullMonth ? weeksToShow : 1}\n          dateTimeFormatter={dateTimeFormatter!}\n          minDate={minDate}\n          maxDate={maxDate}\n          restrictedDates={restrictedDates}\n          onSelectDate={this._onSelectDate}\n          onNavigateDate={this._onNavigateDate}\n          today={today}\n          lightenDaysOutsideNavigatedMonth={showFullMonth}\n          animationDirection={this.state.animationDirection}\n          {...calendarDayGridProps}\n        />\n        {this._renderNextWeekNavigationButton(classNames)}\n      </div>\n    );\n  }\n\n  public componentDidUpdate(): void {\n    if (this._focusOnUpdate) {\n      this.focus();\n      this._focusOnUpdate = false;\n    }\n  }\n\n  private _onSelectDate = (date: Date): void => {\n    const { onSelectDate } = this.props;\n\n    // don't set the navigated date on selection because selection never causes navigation\n    this.setState({\n      selectedDate: date,\n    });\n    this._focusOnUpdate = true;\n\n    if (onSelectDate) {\n      onSelectDate(date);\n    }\n  };\n\n  private _onNavigateDate = (date: Date, focusOnNavigatedDay: boolean): void => {\n    const { onNavigateDate } = this.props;\n\n    this.setState({\n      navigatedDate: date,\n    });\n    this._focusOnUpdate = focusOnNavigatedDay;\n\n    if (onNavigateDate) {\n      onNavigateDate(date);\n    }\n  };\n\n  private _renderPreviousWeekNavigationButton = (\n    classNames: IProcessedStyleSet<IWeeklyDayPickerStyles>,\n  ): JSX.Element => {\n    const { minDate, firstDayOfWeek, navigationIcons } = this.props;\n    const { navigatedDate } = this.state;\n    const leftNavigationIcon = getRTL() ? navigationIcons!.rightNavigation : navigationIcons!.leftNavigation;\n\n    // determine if previous week in bounds\n    const prevWeekInBounds = minDate\n      ? compareDatePart(minDate, getStartDateOfWeek(navigatedDate, firstDayOfWeek!)) < 0\n      : true;\n\n    return (\n      <button\n        className={css(classNames.navigationIconButton, {\n          [classNames.disabledStyle]: !prevWeekInBounds,\n        })}\n        disabled={!prevWeekInBounds}\n        aria-disabled={!prevWeekInBounds}\n        onClick={prevWeekInBounds ? this._onSelectPrevDateRange : undefined}\n        onKeyDown={prevWeekInBounds ? this._onButtonKeyDown(this._onSelectPrevDateRange) : undefined}\n        title={this._createPreviousWeekAriaLabel()}\n        type=\"button\"\n      >\n        <Icon iconName={leftNavigationIcon} />\n      </button>\n    );\n  };\n\n  private _renderNextWeekNavigationButton = (classNames: IProcessedStyleSet<IWeeklyDayPickerStyles>): JSX.Element => {\n    const { maxDate, firstDayOfWeek, navigationIcons } = this.props;\n    const { navigatedDate } = this.state;\n    const rightNavigationIcon = getRTL() ? navigationIcons!.leftNavigation : navigationIcons!.rightNavigation;\n\n    // determine if next week in bounds\n    const nextWeekInBounds = maxDate\n      ? compareDatePart(addDays(getStartDateOfWeek(navigatedDate, firstDayOfWeek!), 7), maxDate) < 0\n      : true;\n\n    return (\n      <button\n        className={css(classNames.navigationIconButton, {\n          [classNames.disabledStyle]: !nextWeekInBounds,\n        })}\n        disabled={!nextWeekInBounds}\n        aria-disabled={!nextWeekInBounds}\n        onClick={nextWeekInBounds ? this._onSelectNextDateRange : undefined}\n        onKeyDown={nextWeekInBounds ? this._onButtonKeyDown(this._onSelectNextDateRange) : undefined}\n        title={this._createNextWeekAriaLabel()}\n        type=\"button\"\n      >\n        <Icon iconName={rightNavigationIcon} />\n      </button>\n    );\n  };\n\n  private _onSelectPrevDateRange = () => {\n    if (this.props.showFullMonth) {\n      this._navigateDate(addMonths(this.state.navigatedDate, -1));\n    } else {\n      this._navigateDate(addDays(this.state.navigatedDate, -7));\n    }\n  };\n\n  private _onSelectNextDateRange = () => {\n    if (this.props.showFullMonth) {\n      this._navigateDate(addMonths(this.state.navigatedDate, 1));\n    } else {\n      this._navigateDate(addDays(this.state.navigatedDate, 7));\n    }\n  };\n\n  private _navigateDate = (date: Date) => {\n    this.setState({\n      navigatedDate: date,\n    });\n    if (this.props.onNavigateDate) {\n      this.props.onNavigateDate(date);\n    }\n  };\n\n  private _onWrapperKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.backspace:\n        ev.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  private _onButtonKeyDown = (callback: () => void): ((ev: React.KeyboardEvent<HTMLButtonElement>) => void) => {\n    return (ev: React.KeyboardEvent<HTMLButtonElement>) => {\n      // eslint-disable-next-line deprecation/deprecation\n      switch (ev.which) {\n        case KeyCodes.enter:\n          callback();\n          break;\n      }\n    };\n  };\n\n  private _onTouchStart = (ev: React.TouchEvent<HTMLDivElement>) => {\n    const touch = ev.touches[0];\n    if (touch) {\n      this._initialTouchX = touch.clientX;\n    }\n  };\n\n  private _onTouchMove = (ev: React.TouchEvent<HTMLDivElement>) => {\n    const isRtl = getRTL();\n    const touch = ev.touches[0];\n    if (touch && this._initialTouchX !== undefined && touch.clientX !== this._initialTouchX) {\n      if ((touch.clientX - this._initialTouchX) * (isRtl ? -1 : 1) < 0) {\n        // swipe right\n        this._onSelectNextDateRange();\n      } else {\n        // swipe left\n        this._onSelectPrevDateRange();\n      }\n      this._initialTouchX = undefined;\n    }\n  };\n\n  private _createPreviousWeekAriaLabel = () => {\n    const { strings, showFullMonth, firstDayOfWeek } = this.props;\n    const { navigatedDate } = this.state;\n\n    let ariaLabel = undefined;\n    if (showFullMonth && strings.prevMonthAriaLabel) {\n      ariaLabel = strings.prevMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate!, -1).getMonth()];\n    } else if (!showFullMonth && strings.prevWeekAriaLabel) {\n      const firstDayOfPreviousWeek = getStartDateOfWeek(addDays(navigatedDate!, -7), firstDayOfWeek!);\n      const lastDayOfPreviousWeek = addDays(firstDayOfPreviousWeek, 6);\n      ariaLabel =\n        strings.prevWeekAriaLabel + ' ' + this._formatDateRange(firstDayOfPreviousWeek, lastDayOfPreviousWeek);\n    }\n    return ariaLabel;\n  };\n\n  private _createNextWeekAriaLabel = () => {\n    const { strings, showFullMonth, firstDayOfWeek } = this.props;\n    const { navigatedDate } = this.state;\n\n    let ariaLabel = undefined;\n    if (showFullMonth && strings.nextMonthAriaLabel) {\n      ariaLabel = strings.nextMonthAriaLabel + ' ' + strings.months[addMonths(navigatedDate!, 1).getMonth()];\n    } else if (!showFullMonth && strings.nextWeekAriaLabel) {\n      const firstDayOfNextWeek = getStartDateOfWeek(addDays(navigatedDate!, 7), firstDayOfWeek!);\n      const lastDayOfNextWeek = addDays(firstDayOfNextWeek, 6);\n      ariaLabel = strings.nextWeekAriaLabel + ' ' + this._formatDateRange(firstDayOfNextWeek, lastDayOfNextWeek);\n    }\n    return ariaLabel;\n  };\n\n  private _formatDateRange = (startDate: Date, endDate: Date) => {\n    const { dateTimeFormatter, strings } = this.props;\n    return `${dateTimeFormatter?.formatMonthDayYear(startDate, strings)} - ${dateTimeFormatter?.formatMonthDayYear(\n      endDate,\n      strings,\n    )}`;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}