{"ast":null,"code":"import { createMemoizer } from '../memoize';\nfunction createComposedRenderFunction(outer) {\n  var outerMemoizer = createMemoizer(function (inner) {\n    var innerMemoizer = createMemoizer(function (defaultRender) {\n      return function (innerProps) {\n        return inner(innerProps, defaultRender);\n      };\n    });\n    return function (outerProps, defaultRender) {\n      return outer(outerProps, defaultRender ? innerMemoizer(defaultRender) : inner);\n    };\n  });\n  return outerMemoizer;\n}\nvar memoizer = createMemoizer(createComposedRenderFunction);\n/**\n * Composes two 'render functions' to produce a final render function that renders\n * the outer function, passing the inner function as 'default render'. The inner function\n * is then passed the original 'default render' prop.\n * @public\n */\nexport function composeRenderFunction(outer, inner) {\n  return memoizer(outer)(inner);\n}","map":{"version":3,"names":["createMemoizer","createComposedRenderFunction","outer","outerMemoizer","inner","innerMemoizer","defaultRender","innerProps","outerProps","memoizer","composeRenderFunction"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/lib/src/renderFunction/composeRenderFunction.tsx"],"sourcesContent":["import { createMemoizer } from '../memoize';\nimport type { IRenderFunction } from '../IRenderFunction';\n\ninterface IRenderFunctionComposer {\n  <TProps>(outer: IRenderFunction<TProps>): (inner: IRenderFunction<TProps>) => IRenderFunction<TProps>;\n}\n\nfunction createComposedRenderFunction<TProps>(\n  outer: IRenderFunction<TProps>,\n): (inner: IRenderFunction<TProps>) => IRenderFunction<TProps> {\n  const outerMemoizer = createMemoizer((inner: IRenderFunction<TProps>) => {\n    const innerMemoizer = createMemoizer((defaultRender: IRenderFunction<TProps>) => {\n      return (innerProps?: TProps) => {\n        return inner(innerProps, defaultRender);\n      };\n    });\n\n    return (outerProps?: TProps, defaultRender?: IRenderFunction<TProps>) => {\n      return outer(outerProps, defaultRender ? innerMemoizer(defaultRender) : inner);\n    };\n  });\n\n  return outerMemoizer;\n}\n\nconst memoizer = createMemoizer<IRenderFunctionComposer>(createComposedRenderFunction);\n\n/**\n * Composes two 'render functions' to produce a final render function that renders\n * the outer function, passing the inner function as 'default render'. The inner function\n * is then passed the original 'default render' prop.\n * @public\n */\nexport function composeRenderFunction<TProps>(\n  outer: IRenderFunction<TProps>,\n  inner: IRenderFunction<TProps>,\n): IRenderFunction<TProps> {\n  return memoizer(outer)(inner);\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAO3C,SAASC,4BAA4BA,CACnCC,KAA8B;EAE9B,IAAMC,aAAa,GAAGH,cAAc,CAAC,UAACI,KAA8B;IAClE,IAAMC,aAAa,GAAGL,cAAc,CAAC,UAACM,aAAsC;MAC1E,OAAO,UAACC,UAAmB;QACzB,OAAOH,KAAK,CAACG,UAAU,EAAED,aAAa,CAAC;MACzC,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,UAACE,UAAmB,EAAEF,aAAuC;MAClE,OAAOJ,KAAK,CAACM,UAAU,EAAEF,aAAa,GAAGD,aAAa,CAACC,aAAa,CAAC,GAAGF,KAAK,CAAC;IAChF,CAAC;EACH,CAAC,CAAC;EAEF,OAAOD,aAAa;AACtB;AAEA,IAAMM,QAAQ,GAAGT,cAAc,CAA0BC,4BAA4B,CAAC;AAEtF;;;;;;AAMA,OAAM,SAAUS,qBAAqBA,CACnCR,KAA8B,EAC9BE,KAA8B;EAE9B,OAAOK,QAAQ,CAACP,KAAK,CAAC,CAACE,KAAK,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}