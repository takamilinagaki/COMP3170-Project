{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\nvar DocumentCardActivityBase = /** @class */function (_super) {\n  __extends(DocumentCardActivityBase, _super);\n  function DocumentCardActivityBase(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    return _this;\n  }\n  DocumentCardActivityBase.prototype.render = function () {\n    var _a = this.props,\n      activity = _a.activity,\n      people = _a.people,\n      styles = _a.styles,\n      theme = _a.theme,\n      className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      multiplePeople: people.length > 1\n    });\n    if (!people || people.length === 0) {\n      return null;\n    }\n    return React.createElement(\"div\", {\n      className: this._classNames.root\n    }, this._renderAvatars(people), React.createElement(\"div\", {\n      className: this._classNames.details\n    }, React.createElement(\"span\", {\n      className: this._classNames.name\n    }, this._getNameString(people)), React.createElement(\"span\", {\n      className: this._classNames.activity\n    }, activity)));\n  };\n  DocumentCardActivityBase.prototype._renderAvatars = function (people) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatars\n    }, people.length > 1 ? this._renderAvatar(people[1]) : null, this._renderAvatar(people[0]));\n  };\n  DocumentCardActivityBase.prototype._renderAvatar = function (person) {\n    return React.createElement(\"div\", {\n      className: this._classNames.avatar\n    }, React.createElement(PersonaCoin, {\n      imageInitials: person.initials,\n      text: person.name,\n      imageUrl: person.profileImageSrc,\n      initialsColor: person.initialsColor,\n      allowPhoneInitials: person.allowPhoneInitials,\n      role: \"presentation\",\n      size: PersonaSize.size32\n    }));\n  };\n  DocumentCardActivityBase.prototype._getNameString = function (people) {\n    var nameString = people[0].name;\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n    return nameString;\n  };\n  return DocumentCardActivityBase;\n}(React.Component);\nexport { DocumentCardActivityBase };","map":{"version":3,"names":["React","classNamesFunction","initializeComponentRef","PersonaSize","PersonaCoin","getClassNames","DocumentCardActivityBase","_super","__extends","props","_this","call","prototype","render","_a","activity","people","styles","theme","className","_classNames","multiplePeople","length","createElement","root","_renderAvatars","details","name","_getNameString","avatars","_renderAvatar","person","avatar","imageInitials","initials","text","imageUrl","profileImageSrc","initialsColor","allowPhoneInitials","role","size","size32","nameString","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/DocumentCard/DocumentCardActivity.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\nimport type {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityPerson,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\nimport type { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDocumentCardActivityStyleProps, IDocumentCardActivityStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActivityBase extends React.Component<IDocumentCardActivityProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActivityStyles>;\n\n  constructor(props: IDocumentCardActivityProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element | null {\n    const { activity, people, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      multiplePeople: people.length > 1,\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.root}>\n        {this._renderAvatars(people)}\n        <div className={this._classNames.details}>\n          <span className={this._classNames.name}>{this._getNameString(people)}</span>\n          <span className={this._classNames.activity}>{activity}</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={this._classNames.avatars}>\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\n        {this._renderAvatar(people[0])}\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\n    return (\n      <div className={this._classNames.avatar}>\n        <PersonaCoin\n          imageInitials={person.initials}\n          text={person.name}\n          imageUrl={person.profileImageSrc}\n          initialsColor={person.initialsColor}\n          allowPhoneInitials={person.allowPhoneInitials}\n          role=\"presentation\"\n          size={PersonaSize.size32}\n        />\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}