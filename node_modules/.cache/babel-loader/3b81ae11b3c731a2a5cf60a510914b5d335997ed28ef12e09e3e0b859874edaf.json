{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nvar getClassNames = classNamesFunction();\nexport var CheckboxBase = React.forwardRef(function (props, forwardedRef) {\n  var disabled = props.disabled,\n    required = props.required,\n    inputProps = props.inputProps,\n    name = props.name,\n    ariaLabel = props.ariaLabel,\n    ariaLabelledBy = props.ariaLabelledBy,\n    ariaDescribedBy = props.ariaDescribedBy,\n    ariaPositionInSet = props.ariaPositionInSet,\n    ariaSetSize = props.ariaSetSize,\n    title = props.title,\n    checkmarkIconProps = props.checkmarkIconProps,\n    styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    _a = props.boxSide,\n    boxSide = _a === void 0 ? 'start' : _a;\n  var id = useId('checkbox-', props.id);\n  var rootRef = React.useRef(null);\n  var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n  var inputRef = React.useRef(null);\n  var _b = useControllableValue(props.checked, props.defaultChecked, props.onChange),\n    isChecked = _b[0],\n    setIsChecked = _b[1];\n  var _c = useControllableValue(props.indeterminate, props.defaultIndeterminate),\n    isIndeterminate = _c[0],\n    setIsIndeterminate = _c[1];\n  useFocusRects(rootRef);\n  useDebugWarning(props);\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    disabled: disabled,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    reversed: boxSide !== 'start',\n    isUsingCustomLabelRender: !!props.onRenderLabel\n  });\n  var onChange = React.useCallback(function (event) {\n    if (isIndeterminate) {\n      // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n      // controlled, lets the consumer know to change it by calling onChange). It doesn't\n      // change the checked state.\n      setIsChecked(!!isChecked, event);\n      setIsIndeterminate(false);\n    } else {\n      setIsChecked(!isChecked, event);\n    }\n  }, [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked]);\n  var defaultLabelRenderer = React.useCallback(function (checkboxProps) {\n    if (!checkboxProps) {\n      return null;\n    }\n    return checkboxProps.label ? React.createElement(\"span\", {\n      className: classNames.text,\n      title: checkboxProps.title\n    }, checkboxProps.label) : null;\n  }, [classNames.text]);\n  var setNativeIndeterminate = React.useCallback(function (indeterminate) {\n    if (!inputRef.current) {\n      return;\n    }\n    var value = !!indeterminate;\n    inputRef.current.indeterminate = value;\n    setIsIndeterminate(value);\n  }, [setIsIndeterminate]);\n  useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n  React.useEffect(function () {\n    return setNativeIndeterminate(isIndeterminate);\n  }, [setNativeIndeterminate, isIndeterminate]);\n  var onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n  var ariaChecked = isIndeterminate ? 'mixed' : undefined;\n  var mergedInputProps = __assign(__assign({\n    className: classNames.input,\n    type: 'checkbox'\n  }, inputProps), {\n    checked: !!isChecked,\n    disabled: disabled,\n    required: required,\n    name: name,\n    id: id,\n    title: title,\n    onChange: onChange,\n    'aria-disabled': disabled,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-describedby': ariaDescribedBy,\n    'aria-posinset': ariaPositionInSet,\n    'aria-setsize': ariaSetSize,\n    'aria-checked': ariaChecked\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    title: title,\n    ref: mergedRootRefs\n  }, React.createElement(\"input\", __assign({}, mergedInputProps, {\n    ref: inputRef,\n    title: title,\n    \"data-ktp-execute-target\": true\n  })), React.createElement(\"label\", {\n    className: classNames.label,\n    htmlFor: id\n  }, React.createElement(\"div\", {\n    className: classNames.checkbox,\n    \"data-ktp-target\": true\n  }, React.createElement(Icon, __assign({\n    iconName: \"CheckMark\"\n  }, checkmarkIconProps, {\n    className: classNames.checkmark\n  }))), onRenderLabel(props, defaultLabelRenderer)));\n});\nCheckboxBase.displayName = 'CheckboxBase';\nfunction useDebugWarning(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Checkbox',\n      props: props,\n      mutuallyExclusive: {\n        checked: 'defaultChecked',\n        indeterminate: 'defaultIndeterminate'\n      }\n    });\n  }\n}\nfunction useComponentRef(props, isChecked, isIndeterminate, setIndeterminate, checkBoxRef) {\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      get checked() {\n        return !!isChecked;\n      },\n      get indeterminate() {\n        return !!isIndeterminate;\n      },\n      set indeterminate(indeterminate) {\n        setIndeterminate(indeterminate);\n      },\n      focus: function () {\n        if (checkBoxRef.current) {\n          checkBoxRef.current.focus();\n        }\n      }\n    };\n  }, [checkBoxRef, isChecked, isIndeterminate, setIndeterminate]);\n}","map":{"version":3,"names":["React","useControllableValue","useId","useMergedRefs","useWarnings","useFocusRects","classNamesFunction","Icon","getClassNames","CheckboxBase","forwardRef","props","forwardedRef","disabled","required","inputProps","name","ariaLabel","ariaLabelledBy","ariaDescribedBy","ariaPositionInSet","ariaSetSize","title","checkmarkIconProps","styles","theme","className","_a","boxSide","id","rootRef","useRef","mergedRootRefs","inputRef","_b","checked","defaultChecked","onChange","isChecked","setIsChecked","_c","indeterminate","defaultIndeterminate","isIndeterminate","setIsIndeterminate","useDebugWarning","classNames","reversed","isUsingCustomLabelRender","onRenderLabel","useCallback","event","defaultLabelRenderer","checkboxProps","label","createElement","text","setNativeIndeterminate","current","value","useComponentRef","useEffect","ariaChecked","undefined","mergedInputProps","__assign","input","type","root","ref","htmlFor","checkbox","iconName","checkmark","displayName","process","env","NODE_ENV","mutuallyExclusive","setIndeterminate","checkBoxRef","useImperativeHandle","componentRef","focus"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Checkbox/Checkbox.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nimport type { ICheckboxProps, ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\n\nconst getClassNames = classNamesFunction<ICheckboxStyleProps, ICheckboxStyles>();\n\nexport const CheckboxBase: React.FunctionComponent<ICheckboxProps> = React.forwardRef<HTMLDivElement, ICheckboxProps>(\n  (props, forwardedRef) => {\n    const {\n      disabled,\n      required,\n      inputProps,\n      name,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaDescribedBy,\n      ariaPositionInSet,\n      ariaSetSize,\n      title,\n      checkmarkIconProps,\n      styles,\n      theme,\n      className,\n      boxSide = 'start',\n    } = props;\n\n    const id = useId('checkbox-', props.id);\n\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const [isChecked, setIsChecked] = useControllableValue(props.checked, props.defaultChecked, props.onChange);\n    const [isIndeterminate, setIsIndeterminate] = useControllableValue(props.indeterminate, props.defaultIndeterminate);\n\n    useFocusRects(rootRef);\n    useDebugWarning(props);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      indeterminate: isIndeterminate,\n      checked: isChecked,\n      reversed: boxSide !== 'start',\n      isUsingCustomLabelRender: !!props.onRenderLabel,\n    });\n\n    const onChange = React.useCallback(\n      (event: React.ChangeEvent<HTMLElement>): void => {\n        if (isIndeterminate) {\n          // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n          // controlled, lets the consumer know to change it by calling onChange). It doesn't\n          // change the checked state.\n          setIsChecked(!!isChecked, event);\n          setIsIndeterminate(false);\n        } else {\n          setIsChecked(!isChecked, event);\n        }\n      },\n      [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked],\n    );\n\n    const defaultLabelRenderer = React.useCallback(\n      (checkboxProps?: ICheckboxProps): JSX.Element | null => {\n        if (!checkboxProps) {\n          return null;\n        }\n        return checkboxProps.label ? (\n          <span className={classNames.text} title={checkboxProps.title}>\n            {checkboxProps.label}\n          </span>\n        ) : null;\n      },\n      [classNames.text],\n    );\n\n    const setNativeIndeterminate = React.useCallback(\n      (indeterminate: boolean | undefined) => {\n        if (!inputRef.current) {\n          return;\n        }\n\n        const value = !!indeterminate;\n\n        inputRef.current.indeterminate = value;\n        setIsIndeterminate(value);\n      },\n      [setIsIndeterminate],\n    );\n\n    useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n    React.useEffect(() => setNativeIndeterminate(isIndeterminate), [setNativeIndeterminate, isIndeterminate]);\n\n    const onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n\n    const ariaChecked: React.InputHTMLAttributes<HTMLInputElement>['aria-checked'] = isIndeterminate\n      ? 'mixed'\n      : undefined;\n\n    const mergedInputProps: React.InputHTMLAttributes<HTMLInputElement> = {\n      className: classNames.input,\n      type: 'checkbox' as React.InputHTMLAttributes<HTMLInputElement>['type'],\n      ...inputProps,\n      checked: !!isChecked,\n      disabled,\n      required,\n      name,\n      id,\n      title,\n      onChange,\n      'aria-disabled': disabled,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-describedby': ariaDescribedBy,\n      'aria-posinset': ariaPositionInSet,\n      'aria-setsize': ariaSetSize,\n      'aria-checked': ariaChecked,\n    };\n\n    return (\n      <div className={classNames.root} title={title} ref={mergedRootRefs}>\n        <input {...mergedInputProps} ref={inputRef} title={title} data-ktp-execute-target={true} />\n        <label className={classNames.label} htmlFor={id}>\n          <div className={classNames.checkbox} data-ktp-target={true}>\n            <Icon iconName=\"CheckMark\" {...checkmarkIconProps} className={classNames.checkmark} />\n          </div>\n          {onRenderLabel(props, defaultLabelRenderer)}\n        </label>\n      </div>\n    );\n  },\n);\n\nCheckboxBase.displayName = 'CheckboxBase';\n\nfunction useDebugWarning(props: ICheckboxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Checkbox',\n      props,\n      mutuallyExclusive: {\n        checked: 'defaultChecked',\n        indeterminate: 'defaultIndeterminate',\n      },\n    });\n  }\n}\n\nfunction useComponentRef(\n  props: ICheckboxProps,\n  isChecked: boolean | undefined,\n  isIndeterminate: boolean | undefined,\n  setIndeterminate: (indeterminate: boolean) => void,\n  checkBoxRef: React.RefObject<HTMLInputElement>,\n) {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get checked() {\n        return !!isChecked;\n      },\n      get indeterminate() {\n        return !!isIndeterminate;\n      },\n      set indeterminate(indeterminate: boolean) {\n        setIndeterminate(indeterminate);\n      },\n      focus() {\n        if (checkBoxRef.current) {\n          checkBoxRef.current.focus();\n        }\n      },\n    }),\n    [checkBoxRef, isChecked, isIndeterminate, setIndeterminate],\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}