{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nvar isMacResult;\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset) {\n  var _a;\n  if (typeof isMacResult === 'undefined' || reset) {\n    var win = getWindow();\n    // In certain SSR frameworks, `window` will be defined even on the server but `navigator` will be undefined\n    var userAgent = (_a = win === null || win === void 0 ? void 0 : win.navigator) === null || _a === void 0 ? void 0 : _a.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}","map":{"version":3,"names":["getWindow","isMacResult","isMac","reset","win","userAgent","_a","navigator","indexOf"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/osDetector.ts"],"sourcesContent":["import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    // In certain SSR frameworks, `window` will be defined even on the server but `navigator` will be undefined\n    const userAgent = win?.navigator?.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,IAAIC,WAAgC;AAEpC;;;;AAIA,OAAM,SAAUC,KAAKA,CAACC,KAAe;;EACnC,IAAI,OAAOF,WAAW,KAAK,WAAW,IAAIE,KAAK,EAAE;IAC/C,IAAMC,GAAG,GAAGJ,SAAS,EAAE;IACvB;IACA,IAAMK,SAAS,GAAG,CAAAC,EAAA,GAAAF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,SAAS,cAAAD,EAAA,uBAAAA,EAAA,CAAED,SAAS;IAC3CJ,WAAW,GAAG,CAAC,CAACI,SAAS,IAAIA,SAAS,CAACG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;EAEpE,OAAO,CAAC,CAACP,WAAW;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}