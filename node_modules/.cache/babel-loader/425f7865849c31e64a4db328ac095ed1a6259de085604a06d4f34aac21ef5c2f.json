{"ast":null,"code":"/**\n * asAsync - a HOC for async loading components.\n *\n * Usage:\n *\n * const AsyncDialog = asAsync({\n *   load: () => import('Dialog').then(result => result.default),\n * });\n *\n * React.render(domElement, <AsyncDialog asyncPlaceholder={ () => <Spinner/> } { ...dialogProps } />);\n *\n * Note the `asyncPlaceholder` prop will be respected when rendering the async component and it hasn't\n * been loaded yet.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\n/**\n * If possible, use a WeakMap to maintain a cache of loaded components.\n * This can be used to synchronously render components that have already been loaded,\n * rather than having to wait for at least one async tick.\n */\nvar _syncModuleCache = typeof WeakMap !== 'undefined' ?\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnew WeakMap() : undefined;\n/**\n * Produces a component which internally loads the target component before first mount.\n * The component passes all props through to the loaded component.\n *\n * This overload accepts a module with a default export for the component.\n */\nexport function asAsync(options) {\n  var Async = /** @class */function (_super) {\n    __extends(Async, _super);\n    function Async() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      _this.state = {\n        Component: _syncModuleCache ? _syncModuleCache.get(options.load) : undefined\n      };\n      return _this;\n    }\n    Async.prototype.render = function () {\n      // Typescript issue: the rest can't be pulled without the any cast, as TypeScript fails with rest on generics.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var _a = this.props,\n        forwardedRef = _a.forwardedRef,\n        Placeholder = _a.asyncPlaceholder,\n        rest = __rest(_a, [\"forwardedRef\", \"asyncPlaceholder\"]);\n      var Component = this.state.Component;\n      return Component ? React.createElement(Component, __assign(__assign({}, rest), {\n        ref: forwardedRef\n      })) : Placeholder ? React.createElement(Placeholder, null) : null;\n    };\n    Async.prototype.componentDidMount = function () {\n      var _this = this;\n      var Component = this.state.Component;\n      if (!Component) {\n        options.load().then(function (LoadedComponent) {\n          if (LoadedComponent) {\n            // Cache component for future reference.\n            _syncModuleCache && _syncModuleCache.set(options.load, LoadedComponent);\n            // Set state.\n            _this.setState({\n              Component: LoadedComponent\n            }, options.onLoad);\n          }\n        }).catch(options.onError);\n      }\n    };\n    return Async;\n  }(React.Component);\n  return React.forwardRef(function (props, ref) {\n    return React.createElement(Async, __assign({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","_syncModuleCache","WeakMap","undefined","asAsync","options","Async","_super","__extends","_this","apply","arguments","state","Component","get","load","prototype","render","_a","props","forwardedRef","Placeholder","asyncPlaceholder","rest","__rest","createElement","__assign","ref","componentDidMount","then","LoadedComponent","set","setState","onLoad","catch","onError","forwardRef"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/asAsync.tsx"],"sourcesContent":["/**\n * asAsync - a HOC for async loading components.\n *\n * Usage:\n *\n * const AsyncDialog = asAsync({\n *   load: () => import('Dialog').then(result => result.default),\n * });\n *\n * React.render(domElement, <AsyncDialog asyncPlaceholder={ () => <Spinner/> } { ...dialogProps } />);\n *\n * Note the `asyncPlaceholder` prop will be respected when rendering the async component and it hasn't\n * been loaded yet.\n */\n\nimport * as React from 'react';\n\nexport interface IAsAsyncOptions<TProps> {\n  /**\n   * Callback which returns a promise resolving an object which exports the component.\n   */\n  load: () => Promise<React.ElementType<TProps>>;\n\n  /**\n   * Callback executed when async loading is complete.\n   */\n  onLoad?: () => void;\n\n  /**\n   * Callback when async loading fails.\n   */\n  onError?: (error: Error) => void;\n}\n\n/**\n * If possible, use a WeakMap to maintain a cache of loaded components.\n * This can be used to synchronously render components that have already been loaded,\n * rather than having to wait for at least one async tick.\n */\nconst _syncModuleCache =\n  typeof WeakMap !== 'undefined'\n    ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      new WeakMap<() => Promise<React.ElementType<any>>, React.ElementType<any> | undefined>()\n    : undefined;\n\n/**\n * Produces a component which internally loads the target component before first mount.\n * The component passes all props through to the loaded component.\n *\n * This overload accepts a module with a default export for the component.\n */\nexport function asAsync<TProps>(options: IAsAsyncOptions<TProps>) {\n  class Async extends React.Component<\n    TProps & {\n      asyncPlaceholder?: React.ElementType;\n      forwardedRef: React.Ref<React.ElementType<TProps>>;\n    },\n    { Component?: React.ElementType<TProps> }\n  > {\n    public state = {\n      Component: _syncModuleCache ? (_syncModuleCache.get(options.load) as React.ElementType<TProps>) : undefined,\n    };\n\n    public render(): JSX.Element | null {\n      // Typescript issue: the rest can't be pulled without the any cast, as TypeScript fails with rest on generics.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const { forwardedRef, asyncPlaceholder: Placeholder, ...rest } = this.props as any;\n      const { Component } = this.state;\n      return Component ? (\n        React.createElement(Component, { ...rest, ref: forwardedRef })\n      ) : Placeholder ? (\n        <Placeholder />\n      ) : null;\n    }\n\n    public componentDidMount(): void {\n      let { Component } = this.state;\n\n      if (!Component) {\n        options\n          .load()\n          .then((LoadedComponent: React.ElementType<TProps>) => {\n            if (LoadedComponent) {\n              // Cache component for future reference.\n              _syncModuleCache && _syncModuleCache.set(options.load, LoadedComponent);\n\n              // Set state.\n              this.setState(\n                {\n                  Component: LoadedComponent,\n                },\n                options.onLoad,\n              );\n            }\n          })\n          .catch(options.onError);\n      }\n    }\n  }\n\n  return React.forwardRef<React.ElementType<TProps>, TProps & { asyncPlaceholder?: React.ElementType }>(\n    (props, ref) => <Async {...props} forwardedRef={ref} />,\n  );\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAmB9B;;;;;AAKA,IAAMC,gBAAgB,GACpB,OAAOC,OAAO,KAAK,WAAW;AAC1B;AACA,IAAIA,OAAO,EAA6E,GACxFC,SAAS;AAEf;;;;;;AAMA,OAAM,SAAUC,OAAOA,CAASC,OAAgC;EAC9D,IAAAC,KAAA,0BAAAC,MAAA;IAAoBC,SAAA,CAAAF,KAAA,EAAAC,MAAA;IAApB,SAAAD,MAAA;MAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;MAOSF,KAAA,CAAAG,KAAK,GAAG;QACbC,SAAS,EAAEZ,gBAAgB,GAAIA,gBAAgB,CAACa,GAAG,CAACT,OAAO,CAACU,IAAI,CAA+B,GAAGZ;OACnG;;IAqCH;IAnCSG,KAAA,CAAAU,SAAA,CAAAC,MAAM,GAAb;MACE;MACA;MACA,IAAMC,EAAA,GAA2D,IAAI,CAACC,KAAY;QAA1EC,YAAY,GAAAF,EAAA,CAAAE,YAAA;QAAoBC,WAAW,GAAAH,EAAA,CAAAI,gBAAA;QAAKC,IAAI,GAAAC,MAAA,CAAAN,EAAA,EAAtD,oCAAwD,CAAoB;MAC1E,IAAAL,SAAS,GAAK,IAAI,CAACD,KAAK,CAAAC,SAAf;MACjB,OAAOA,SAAS,GACdb,KAAK,CAACyB,aAAa,CAACZ,SAAS,EAAAa,QAAA,CAAAA,QAAA,KAAOH,IAAI;QAAEI,GAAG,EAAEP;MAAY,GAAG,GAC5DC,WAAW,GACbrB,KAAA,CAAAyB,aAAA,CAACJ,WAAW,OAAG,GACb,IAAI;IACV,CAAC;IAEMf,KAAA,CAAAU,SAAA,CAAAY,iBAAiB,GAAxB;MAAA,IAAAnB,KAAA;MACQ,IAAAI,SAAS,GAAK,IAAI,CAACD,KAAK,CAAAC,SAAf;MAEf,IAAI,CAACA,SAAS,EAAE;QACdR,OAAO,CACJU,IAAI,EAAE,CACNc,IAAI,CAAC,UAACC,eAA0C;UAC/C,IAAIA,eAAe,EAAE;YACnB;YACA7B,gBAAgB,IAAIA,gBAAgB,CAAC8B,GAAG,CAAC1B,OAAO,CAACU,IAAI,EAAEe,eAAe,CAAC;YAEvE;YACArB,KAAI,CAACuB,QAAQ,CACX;cACEnB,SAAS,EAAEiB;aACZ,EACDzB,OAAO,CAAC4B,MAAM,CACf;;QAEL,CAAC,CAAC,CACDC,KAAK,CAAC7B,OAAO,CAAC8B,OAAO,CAAC;;IAE7B,CAAC;IACH,OAAA7B,KAAC;EAAD,CAAC,CA9CmBN,KAAK,CAACa,SAAS;EAgDnC,OAAOb,KAAK,CAACoC,UAAU,CACrB,UAACjB,KAAK,EAAEQ,GAAG;IAAK,OAAA3B,KAAA,CAAAyB,aAAA,CAACnB,KAAK,EAAAoB,QAAA,KAAKP,KAAK;MAAEC,YAAY,EAAEO;IAAG,GAAI;EAAvC,CAAuC,CACxD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}