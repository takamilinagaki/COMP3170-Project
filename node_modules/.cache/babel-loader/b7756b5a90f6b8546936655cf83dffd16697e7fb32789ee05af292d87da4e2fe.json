{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, ScreenWidthMaxMedium, ScreenWidthMaxSmall, ScreenWidthMinMedium, getFocusStyle, getScreenSelector, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item'\n};\nvar SingleLineTextStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden'\n};\nvar overflowButtonFontSize = 16;\nvar chevronSmallFontSize = 8;\nvar itemLineHeight = 36;\nvar itemFontSize = 18;\nvar MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nvar MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e;\n  var className = props.className,\n    theme = props.theme;\n  var palette = theme.palette,\n    semanticColors = theme.semanticColors,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  // Tokens\n  var itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  var itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  var itemTextColor = palette.neutralSecondary;\n  var itemTextFontWeight = FontWeights.regular;\n  var itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  var itemLastChildTextColor = palette.neutralPrimary;\n  var itemLastChildTextFontWeight = FontWeights.semibold;\n  var chevronButtonColor = palette.neutralSecondary;\n  var overflowButtonColor = palette.neutralSecondary;\n  var lastChildItemStyles = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor\n  };\n  var itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Highlight',\n        backgroundColor: 'transparent'\n      }, _a)\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none'\n    }\n  };\n  var commonItemStyles = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight\n  };\n  var overflowButtonHighContrastFocus = {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      margin: '11px 0 1px'\n    }, className],\n    list: [classNames.list, {\n      whiteSpace: 'nowrap',\n      padding: 0,\n      margin: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    listItem: [classNames.listItem, {\n      listStyleType: 'none',\n      margin: '0',\n      padding: '0',\n      display: 'flex',\n      position: 'relative',\n      alignItems: 'center',\n      selectors: {\n        '&:last-child .ms-Breadcrumb-itemLink': __assign(__assign({}, lastChildItemStyles), (_b = {}, _b[HighContrastSelector] = {\n          MsHighContrastAdjust: 'auto',\n          forcedColorAdjust: 'auto'\n        }, _b)),\n        '&:last-child .ms-Breadcrumb-item': lastChildItemStyles\n      }\n    }],\n    chevron: [classNames.chevron, {\n      color: chevronButtonColor,\n      fontSize: fonts.small.fontSize,\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c[MediumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _c[MinimumScreenSelector] = {\n        fontSize: chevronSmallFontSize\n      }, _c)\n    }],\n    overflow: [classNames.overflow, {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    }],\n    overflowButton: [classNames.overflowButton, getFocusStyle(theme, {\n      highContrastStyle: overflowButtonHighContrastFocus\n    }), SingleLineTextStyle, {\n      fontSize: overflowButtonFontSize,\n      color: overflowButtonColor,\n      height: '100%',\n      cursor: 'pointer',\n      selectors: __assign(__assign({}, itemStateSelectors), (_d = {}, _d[MinimumScreenSelector] = {\n        padding: '4px 6px'\n      }, _d[MediumScreenSelector] = {\n        fontSize: fonts.mediumPlus.fontSize\n      }, _d))\n    }],\n    itemLink: [classNames.itemLink, getFocusStyle(theme), SingleLineTextStyle, __assign(__assign({}, commonItemStyles), {\n      selectors: __assign((_e = {\n        ':focus': {\n          color: palette.neutralDark\n        }\n      }, _e[\".\".concat(IsFocusVisibleClassName, \" &:focus\")] = {\n        outline: \"none\"\n      }, _e), itemStateSelectors)\n    })],\n    item: [classNames.item, __assign(__assign({}, commonItemStyles), {\n      selectors: {\n        ':hover': {\n          cursor: 'default'\n        }\n      }\n    })]\n  };\n};","map":{"version":3,"names":["HighContrastSelector","ScreenWidthMaxMedium","ScreenWidthMaxSmall","ScreenWidthMinMedium","getFocusStyle","getScreenSelector","getGlobalClassNames","FontWeights","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","GlobalClassNames","root","list","listItem","chevron","overflow","overflowButton","itemLink","item","SingleLineTextStyle","whiteSpace","textOverflow","overflowButtonFontSize","chevronSmallFontSize","itemLineHeight","itemFontSize","MinimumScreenSelector","MediumScreenSelector","getStyles","props","className","theme","palette","semanticColors","fonts","classNames","itemBackgroundHoveredColor","menuItemBackgroundHovered","itemBackgroundPressedColor","menuItemBackgroundPressed","itemTextColor","neutralSecondary","itemTextFontWeight","regular","itemTextHoveredOrPressedColor","neutralPrimary","itemLastChildTextColor","itemLastChildTextFontWeight","semibold","chevronButtonColor","overflowButtonColor","lastChildItemStyles","fontWeight","color","itemStateSelectors","backgroundColor","cursor","selectors","_a","textDecoration","commonItemStyles","padding","lineHeight","fontSize","overflowButtonHighContrastFocus","left","right","top","bottom","medium","margin","display","alignItems","listStyleType","position","__assign","_b","MsHighContrastAdjust","forcedColorAdjust","small","_c","highContrastStyle","height","_d","mediumPlus","_e","neutralDark","concat","outline"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Breadcrumb/Breadcrumb.styles.ts"],"sourcesContent":["import {\n  HighContrastSelector,\n  ScreenWidthMaxMedium,\n  ScreenWidthMaxSmall,\n  ScreenWidthMinMedium,\n  getFocusStyle,\n  getScreenSelector,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IRawStyle } from '../../Styling';\nimport type { IBreadcrumbStyleProps, IBreadcrumbStyles } from './Breadcrumb.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Breadcrumb',\n  list: 'ms-Breadcrumb-list',\n  listItem: 'ms-Breadcrumb-listItem',\n  chevron: 'ms-Breadcrumb-chevron',\n  overflow: 'ms-Breadcrumb-overflow',\n  overflowButton: 'ms-Breadcrumb-overflowButton',\n  itemLink: 'ms-Breadcrumb-itemLink',\n  item: 'ms-Breadcrumb-item',\n};\n\nconst SingleLineTextStyle: IRawStyle = {\n  whiteSpace: 'nowrap',\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n};\n\nconst overflowButtonFontSize = 16;\nconst chevronSmallFontSize = 8;\nconst itemLineHeight = 36;\nconst itemFontSize = 18;\n\nconst MinimumScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\nconst MediumScreenSelector = getScreenSelector(ScreenWidthMinMedium, ScreenWidthMaxMedium);\n\nexport const getStyles = (props: IBreadcrumbStyleProps): IBreadcrumbStyles => {\n  const { className, theme } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  const itemBackgroundHoveredColor = semanticColors.menuItemBackgroundHovered;\n  const itemBackgroundPressedColor = semanticColors.menuItemBackgroundPressed;\n  const itemTextColor = palette.neutralSecondary;\n  const itemTextFontWeight = FontWeights.regular;\n  const itemTextHoveredOrPressedColor = palette.neutralPrimary;\n  const itemLastChildTextColor = palette.neutralPrimary;\n  const itemLastChildTextFontWeight = FontWeights.semibold;\n  const chevronButtonColor = palette.neutralSecondary;\n  const overflowButtonColor = palette.neutralSecondary;\n\n  const lastChildItemStyles: IRawStyle = {\n    fontWeight: itemLastChildTextFontWeight,\n    color: itemLastChildTextColor,\n  };\n\n  const itemStateSelectors = {\n    ':hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundHoveredColor,\n      cursor: 'pointer',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Highlight',\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n    ':active': {\n      backgroundColor: itemBackgroundPressedColor,\n      color: itemTextHoveredOrPressedColor,\n    },\n    '&:active:hover': {\n      color: itemTextHoveredOrPressedColor,\n      backgroundColor: itemBackgroundPressedColor,\n    },\n    '&:active, &:hover, &:active:hover': {\n      textDecoration: 'none',\n    },\n  };\n\n  const commonItemStyles: IRawStyle = {\n    color: itemTextColor,\n    padding: '0 8px',\n    lineHeight: itemLineHeight,\n    fontSize: itemFontSize,\n    fontWeight: itemTextFontWeight,\n  };\n\n  const overflowButtonHighContrastFocus = {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1,\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        margin: '11px 0 1px',\n      },\n      className,\n    ],\n\n    list: [\n      classNames.list,\n      {\n        whiteSpace: 'nowrap',\n        padding: 0,\n        margin: 0,\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n\n    listItem: [\n      classNames.listItem,\n      {\n        listStyleType: 'none',\n        margin: '0',\n        padding: '0',\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        selectors: {\n          '&:last-child .ms-Breadcrumb-itemLink': {\n            ...lastChildItemStyles,\n            [HighContrastSelector]: {\n              MsHighContrastAdjust: 'auto',\n              forcedColorAdjust: 'auto',\n            },\n          },\n          '&:last-child .ms-Breadcrumb-item': lastChildItemStyles,\n        },\n      },\n    ],\n\n    chevron: [\n      classNames.chevron,\n      {\n        color: chevronButtonColor,\n        fontSize: fonts.small.fontSize,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n          [MediumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n          [MinimumScreenSelector]: {\n            fontSize: chevronSmallFontSize,\n          },\n        },\n      },\n    ],\n\n    overflow: [\n      classNames.overflow,\n      {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n\n    overflowButton: [\n      classNames.overflowButton,\n      getFocusStyle(theme, { highContrastStyle: overflowButtonHighContrastFocus }),\n      SingleLineTextStyle,\n      {\n        fontSize: overflowButtonFontSize,\n        color: overflowButtonColor,\n        height: '100%',\n        cursor: 'pointer',\n        selectors: {\n          ...itemStateSelectors,\n          [MinimumScreenSelector]: {\n            padding: '4px 6px',\n          },\n          [MediumScreenSelector]: {\n            fontSize: fonts.mediumPlus.fontSize,\n          },\n        },\n      },\n    ],\n\n    itemLink: [\n      classNames.itemLink,\n      getFocusStyle(theme),\n      SingleLineTextStyle,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':focus': {\n            color: palette.neutralDark,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            outline: `none`,\n          },\n          ...itemStateSelectors,\n        },\n      },\n    ],\n\n    item: [\n      classNames.item,\n      {\n        ...commonItemStyles,\n        selectors: {\n          ':hover': {\n            cursor: 'default',\n          },\n        },\n      },\n    ],\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}