{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, css, format, divProperties, getNativeProps, KeyCodes, useFocusRects } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nimport { useId, useWarnings, useControllableValue, useMergedRefs } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar RatingStar = function (props) {\n  return React.createElement(\"div\", {\n    className: props.classNames.ratingStar\n  }, React.createElement(Icon, {\n    className: props.classNames.ratingStarBack,\n    iconName: props.fillPercentage === 0 || props.fillPercentage === 100 ? props.icon : props.unselectedIcon\n  }), !props.disabled && React.createElement(Icon, {\n    className: props.classNames.ratingStarFront,\n    iconName: props.icon,\n    style: {\n      width: props.fillPercentage + '%'\n    }\n  }));\n};\nvar useComponentRef = function (componentRef, rating) {\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      rating: rating\n    };\n  }, [rating]);\n};\nvar useDebugWarnings = function (props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Rating',\n      props: props,\n      controlledUsage: {\n        valueProp: 'rating',\n        defaultValueProp: 'defaultRating',\n        onChangeProp: 'onChange',\n        readOnlyProp: 'readOnly'\n      }\n    });\n  }\n};\nvar getClampedRating = function (rating, min, max) {\n  return Math.min(Math.max(rating !== null && rating !== void 0 ? rating : min, min), max);\n};\nvar getFillingPercentage = function (starNum, displayRating) {\n  var ceilValue = Math.ceil(displayRating);\n  var fillPercentage = 100;\n  if (starNum === displayRating) {\n    fillPercentage = 100;\n  } else if (starNum === ceilValue) {\n    fillPercentage = 100 * (displayRating % 1);\n  } else if (starNum > ceilValue) {\n    fillPercentage = 0;\n  }\n  return fillPercentage;\n};\nvar getStarId = function (id, starNum) {\n  return \"\".concat(id, \"-star-\").concat(starNum - 1);\n};\nexport var RatingBase = React.forwardRef(function (props, forwardedRef) {\n  var id = useId('Rating');\n  var labelId = useId('RatingLabel');\n  var ariaLabel = props.ariaLabel,\n    ariaLabelFormat = props.ariaLabelFormat,\n    disabled = props.disabled,\n    getAriaLabel = props.getAriaLabel,\n    styles = props.styles,\n    // eslint-disable-next-line deprecation/deprecation\n    _a = props.min,\n    // eslint-disable-next-line deprecation/deprecation\n    minFromProps = _a === void 0 ? props.allowZeroStars ? 0 : 1 : _a,\n    _b = props.max,\n    max = _b === void 0 ? 5 : _b,\n    readOnly = props.readOnly,\n    size = props.size,\n    theme = props.theme,\n    _c = props.icon,\n    icon = _c === void 0 ? 'FavoriteStarFill' : _c,\n    _d = props.unselectedIcon,\n    unselectedIcon = _d === void 0 ? 'FavoriteStar' : _d,\n    onRenderStar = props.onRenderStar;\n  // Ensure min is >= 0 to avoid issues elsewhere\n  var min = Math.max(minFromProps, 0);\n  var _e = useControllableValue(props.rating, props.defaultRating, props.onChange),\n    rating = _e[0],\n    setRating = _e[1];\n  /** Rating clamped within valid range. Will be `min` if `rating` is undefined. */\n  var displayRating = getClampedRating(rating, min, max);\n  useDebugWarnings(props);\n  useComponentRef(props.componentRef, displayRating);\n  var rootRef = React.useRef(null);\n  var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n  useFocusRects(rootRef);\n  var divProps = getNativeProps(props, divProperties);\n  var classNames = getClassNames(styles, {\n    disabled: disabled,\n    readOnly: readOnly,\n    theme: theme\n  });\n  var readOnlyAriaLabel = getAriaLabel === null || getAriaLabel === void 0 ? void 0 : getAriaLabel(displayRating, max);\n  var normalModeAriaLabel = ariaLabel ? ariaLabel : readOnlyAriaLabel;\n  var stars = [];\n  var renderStar = function (starProps, renderer) {\n    return renderer ? renderer(starProps) : React.createElement(RatingStar, __assign({}, starProps));\n  };\n  var _loop_1 = function (starNum) {\n    var fillPercentage = getFillingPercentage(starNum, displayRating);\n    var onSelectStar = function (ev) {\n      // Use the actual rating (not display value) here, to ensure that we update if the actual\n      // rating is undefined and the user clicks the first star.\n      if (rating === undefined || Math.ceil(rating) !== starNum) {\n        setRating(starNum, ev);\n      }\n    };\n    var onStarKeyDown = function (event) {\n      // eslint-disable-next-line deprecation/deprecation\n      var which = event.which;\n      var newRating = starNum;\n      switch (which) {\n        case KeyCodes.right:\n        case KeyCodes.down:\n          newRating = Math.min(max, newRating + 1);\n          break;\n        case KeyCodes.left:\n        case KeyCodes.up:\n          newRating = Math.max(1, newRating - 1);\n          break;\n        case KeyCodes.home:\n        case KeyCodes.pageUp:\n          newRating = 1;\n          break;\n        case KeyCodes.end:\n        case KeyCodes.pageDown:\n          newRating = max;\n          break;\n      }\n      if (newRating !== starNum && (rating === undefined || Math.ceil(rating) !== newRating)) {\n        setRating(newRating, event);\n      }\n    };\n    stars.push(React.createElement(\"button\", __assign({\n      className: css(classNames.ratingButton, size === RatingSize.Large ? classNames.ratingStarIsLarge : classNames.ratingStarIsSmall),\n      id: getStarId(id, starNum),\n      key: starNum\n    }, starNum === Math.ceil(displayRating) && {\n      'data-is-current': true\n    }, {\n      onKeyDown: onStarKeyDown,\n      onClick: onSelectStar,\n      disabled: !!(disabled || readOnly),\n      role: \"radio\",\n      \"aria-hidden\": readOnly ? 'true' : undefined,\n      type: \"button\",\n      \"aria-checked\": starNum === Math.ceil(displayRating)\n    }), React.createElement(\"span\", {\n      id: \"\".concat(labelId, \"-\").concat(starNum),\n      className: classNames.labelText\n    }, format(ariaLabelFormat || '', starNum, max)), renderStar({\n      fillPercentage: fillPercentage,\n      disabled: disabled,\n      classNames: classNames,\n      icon: fillPercentage > 0 ? icon : unselectedIcon,\n      starNum: starNum,\n      unselectedIcon: unselectedIcon\n    }, onRenderStar)));\n  };\n  for (var starNum = 1; starNum <= max; starNum++) {\n    _loop_1(starNum);\n  }\n  var rootSizeClass = size === RatingSize.Large ? classNames.rootIsLarge : classNames.rootIsSmall;\n  return React.createElement(\"div\", __assign({\n    ref: mergedRootRefs,\n    className: css('ms-Rating-star', classNames.root, rootSizeClass),\n    \"aria-label\": !readOnly ? normalModeAriaLabel : undefined,\n    id: id,\n    role: !readOnly ? 'radiogroup' : undefined\n  }, divProps), React.createElement(FocusZone, __assign({\n    direction: FocusZoneDirection.bidirectional,\n    className: css(classNames.ratingFocusZone, rootSizeClass),\n    defaultActiveElement: '#' + getStarId(id, Math.ceil(displayRating))\n  }, readOnly && {\n    allowFocusRoot: true,\n    disabled: true,\n    role: 'textbox',\n    'aria-label': readOnlyAriaLabel,\n    'aria-readonly': true,\n    'data-is-focusable': true,\n    tabIndex: 0\n  }), stars));\n});\nRatingBase.displayName = 'RatingBase';","map":{"version":3,"names":["React","classNamesFunction","css","format","divProperties","getNativeProps","KeyCodes","useFocusRects","Icon","FocusZone","FocusZoneDirection","RatingSize","useId","useWarnings","useControllableValue","useMergedRefs","getClassNames","RatingStar","props","createElement","className","classNames","ratingStar","ratingStarBack","iconName","fillPercentage","icon","unselectedIcon","disabled","ratingStarFront","style","width","useComponentRef","componentRef","rating","useImperativeHandle","useDebugWarnings","process","env","NODE_ENV","name","controlledUsage","valueProp","defaultValueProp","onChangeProp","readOnlyProp","getClampedRating","min","max","Math","getFillingPercentage","starNum","displayRating","ceilValue","ceil","getStarId","id","concat","RatingBase","forwardRef","forwardedRef","labelId","ariaLabel","ariaLabelFormat","getAriaLabel","styles","_a","minFromProps","allowZeroStars","_b","readOnly","size","theme","_c","_d","onRenderStar","_e","defaultRating","onChange","setRating","rootRef","useRef","mergedRootRefs","divProps","readOnlyAriaLabel","normalModeAriaLabel","stars","renderStar","starProps","renderer","__assign","onSelectStar","ev","undefined","onStarKeyDown","event","which","newRating","right","down","left","up","home","pageUp","end","pageDown","push","ratingButton","Large","ratingStarIsLarge","ratingStarIsSmall","key","onKeyDown","onClick","role","type","labelText","rootSizeClass","rootIsLarge","rootIsSmall","ref","root","direction","bidirectional","ratingFocusZone","defaultActiveElement","allowFocusRoot","tabIndex","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Rating/Rating.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  css,\n  format,\n  divProperties,\n  getNativeProps,\n  KeyCodes,\n  useFocusRects,\n} from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { RatingSize } from './Rating.types';\nimport { useId, useWarnings, useControllableValue, useMergedRefs } from '@fluentui/react-hooks';\nimport type { IRatingProps, IRatingStyleProps, IRatingStyles, IRating, IRatingStarProps } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\nconst RatingStar = (props: IRatingStarProps) => {\n  return (\n    <div className={props.classNames.ratingStar}>\n      <Icon\n        className={props.classNames.ratingStarBack}\n        iconName={props.fillPercentage === 0 || props.fillPercentage === 100 ? props.icon : props.unselectedIcon}\n      />\n      {!props.disabled && (\n        <Icon\n          className={props.classNames.ratingStarFront}\n          iconName={props.icon}\n          style={{ width: props.fillPercentage + '%' }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst useComponentRef = (componentRef: React.Ref<IRating> | undefined, rating: number) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      rating,\n    }),\n    [rating],\n  );\n};\n\nconst useDebugWarnings = (props: IRatingProps) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Rating',\n      props,\n      controlledUsage: {\n        valueProp: 'rating',\n        defaultValueProp: 'defaultRating',\n        onChangeProp: 'onChange',\n        readOnlyProp: 'readOnly',\n      },\n    });\n  }\n};\n\nconst getClampedRating = (rating: number | undefined, min: number, max: number): number => {\n  return Math.min(Math.max(rating ?? min, min), max);\n};\n\nconst getFillingPercentage = (starNum: number, displayRating: number): number => {\n  const ceilValue = Math.ceil(displayRating);\n  let fillPercentage = 100;\n\n  if (starNum === displayRating) {\n    fillPercentage = 100;\n  } else if (starNum === ceilValue) {\n    fillPercentage = 100 * (displayRating % 1);\n  } else if (starNum > ceilValue) {\n    fillPercentage = 0;\n  }\n  return fillPercentage;\n};\n\nconst getStarId = (id: string, starNum: number) => {\n  return `${id}-star-${starNum - 1}`;\n};\n\nexport const RatingBase: React.FunctionComponent<IRatingProps> = React.forwardRef<HTMLDivElement, IRatingProps>(\n  (props, forwardedRef) => {\n    const id = useId('Rating');\n    const labelId = useId('RatingLabel');\n    const {\n      ariaLabel,\n      ariaLabelFormat,\n      disabled,\n      getAriaLabel,\n      styles,\n      // eslint-disable-next-line deprecation/deprecation\n      min: minFromProps = props.allowZeroStars ? 0 : 1,\n      max = 5,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar',\n      onRenderStar,\n    } = props;\n\n    // Ensure min is >= 0 to avoid issues elsewhere\n    const min = Math.max(minFromProps, 0);\n\n    const [rating, setRating] = useControllableValue(props.rating, props.defaultRating, props.onChange);\n    /** Rating clamped within valid range. Will be `min` if `rating` is undefined. */\n    const displayRating = getClampedRating(rating, min, max);\n\n    useDebugWarnings(props);\n\n    useComponentRef(props.componentRef, displayRating);\n\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    useFocusRects(rootRef);\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!,\n    });\n\n    const readOnlyAriaLabel = getAriaLabel?.(displayRating, max);\n    const normalModeAriaLabel = ariaLabel ? ariaLabel : readOnlyAriaLabel;\n\n    const stars: JSX.Element[] = [];\n\n    const renderStar = (starProps: IRatingStarProps, renderer?: IRatingProps['onRenderStar']) =>\n      renderer ? renderer(starProps) : <RatingStar {...starProps} />;\n\n    for (let starNum = 1; starNum <= max; starNum++) {\n      const fillPercentage = getFillingPercentage(starNum, displayRating);\n\n      const onSelectStar = (ev: React.SyntheticEvent<HTMLElement>): void => {\n        // Use the actual rating (not display value) here, to ensure that we update if the actual\n        // rating is undefined and the user clicks the first star.\n        if (rating === undefined || Math.ceil(rating) !== starNum) {\n          setRating(starNum, ev);\n        }\n      };\n\n      const onStarKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n        // eslint-disable-next-line deprecation/deprecation\n        const { which } = event;\n        let newRating = starNum;\n        switch (which) {\n          case KeyCodes.right:\n          case KeyCodes.down:\n            newRating = Math.min(max, newRating + 1);\n            break;\n          case KeyCodes.left:\n          case KeyCodes.up:\n            newRating = Math.max(1, newRating - 1);\n            break;\n          case KeyCodes.home:\n          case KeyCodes.pageUp:\n            newRating = 1;\n            break;\n          case KeyCodes.end:\n          case KeyCodes.pageDown:\n            newRating = max;\n            break;\n        }\n\n        if (newRating !== starNum && (rating === undefined || Math.ceil(rating) !== newRating)) {\n          setRating(newRating, event);\n        }\n      };\n\n      stars.push(\n        <button\n          className={css(\n            classNames.ratingButton,\n            size === RatingSize.Large ? classNames.ratingStarIsLarge : classNames.ratingStarIsSmall,\n          )}\n          id={getStarId(id, starNum)}\n          key={starNum}\n          {...(starNum === Math.ceil(displayRating) && { 'data-is-current': true })}\n          onKeyDown={onStarKeyDown}\n          onClick={onSelectStar}\n          disabled={!!(disabled || readOnly)}\n          role=\"radio\"\n          aria-hidden={readOnly ? 'true' : undefined}\n          type=\"button\"\n          aria-checked={starNum === Math.ceil(displayRating)}\n        >\n          <span id={`${labelId}-${starNum}`} className={classNames.labelText}>\n            {format(ariaLabelFormat || '', starNum, max)}\n          </span>\n          {renderStar(\n            {\n              fillPercentage,\n              disabled,\n              classNames,\n              icon: fillPercentage > 0 ? icon : unselectedIcon,\n              starNum,\n              unselectedIcon,\n            },\n            onRenderStar,\n          )}\n        </button>,\n      );\n    }\n\n    const rootSizeClass = size === RatingSize.Large ? classNames.rootIsLarge : classNames.rootIsSmall;\n\n    return (\n      <div\n        ref={mergedRootRefs}\n        className={css('ms-Rating-star', classNames.root, rootSizeClass)}\n        aria-label={!readOnly ? normalModeAriaLabel : undefined}\n        id={id}\n        role={!readOnly ? 'radiogroup' : undefined}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.bidirectional}\n          className={css(classNames.ratingFocusZone, rootSizeClass)}\n          defaultActiveElement={'#' + getStarId(id, Math.ceil(displayRating))}\n          // When in read-only mode, we allow focus (per ARIA standards) and set up ARIA attributes to indicate element\n          // is read-only. https://www.w3.org/TR/wai-aria-1.1/#aria-readonly\n          {...(readOnly && {\n            allowFocusRoot: true,\n            disabled: true,\n            role: 'textbox',\n            'aria-label': readOnlyAriaLabel,\n            'aria-readonly': true,\n            'data-is-focusable': true,\n            tabIndex: 0,\n          })}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  },\n);\nRatingBase.displayName = 'RatingBase';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}