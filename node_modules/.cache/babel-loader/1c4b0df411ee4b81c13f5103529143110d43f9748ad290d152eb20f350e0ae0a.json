{"ast":null,"code":"import { getColorFromRGBA } from './getColorFromRGBA';\n/**\n * Gets a color with a single RGBA component updated to a new value.\n * Does not modify the original `color`. Alpha defaults to 100 if not set.\n */\nexport function updateRGB(color, component, value) {\n  var _a;\n  return getColorFromRGBA((_a = {\n    r: color.r,\n    g: color.g,\n    b: color.b,\n    a: color.a\n  }, _a[component] = value, _a));\n}","map":{"version":3,"names":["getColorFromRGBA","updateRGB","color","component","value","_a","r","g","b","a"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/color/updateRGB.ts"],"sourcesContent":["import { getColorFromRGBA } from './getColorFromRGBA';\nimport type { IColor, IRGB } from './interfaces';\n\n/**\n * Gets a color with a single RGBA component updated to a new value.\n * Does not modify the original `color`. Alpha defaults to 100 if not set.\n */\nexport function updateRGB(color: IColor, component: keyof IRGB, value: number): IColor {\n  return getColorFromRGBA({\n    r: color.r,\n    g: color.g,\n    b: color.b,\n    a: color.a,\n    [component]: value,\n  });\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAGrD;;;;AAIA,OAAM,SAAUC,SAASA,CAACC,KAAa,EAAEC,SAAqB,EAAEC,KAAa;;EAC3E,OAAOJ,gBAAgB,EAAAK,EAAA;IACrBC,CAAC,EAAEJ,KAAK,CAACI,CAAC;IACVC,CAAC,EAAEL,KAAK,CAACK,CAAC;IACVC,CAAC,EAAEN,KAAK,CAACM,CAAC;IACVC,CAAC,EAAEP,KAAK,CAACO;KACTJ,EAAA,CAACF,SAAS,IAAGC,KAAK,E,IAClB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}