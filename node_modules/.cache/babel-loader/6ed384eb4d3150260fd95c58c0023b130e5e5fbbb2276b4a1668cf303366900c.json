{"ast":null,"code":"import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './sessionStorage';\nimport { setRTL as mergeStylesSetRTL } from '@fluentui/merge-styles';\nvar RTL_LOCAL_STORAGE_KEY = 'isRTL';\n// Default to undefined so that we initialize on first read.\nvar _isRTL;\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(theme) {\n  if (theme === void 0) {\n    theme = {};\n  }\n  if (theme.rtl !== undefined) {\n    return theme.rtl;\n  }\n  if (_isRTL === undefined) {\n    // Fabric supports persisting the RTL setting between page refreshes via session storage\n    var savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\n    if (savedRTL !== null) {\n      _isRTL = savedRTL === '1';\n      setRTL(_isRTL);\n    }\n    var doc = getDocument();\n    if (_isRTL === undefined && doc) {\n      _isRTL = (doc.body && doc.body.getAttribute('dir') || doc.documentElement.getAttribute('dir')) === 'rtl';\n      mergeStylesSetRTL(_isRTL);\n    }\n  }\n  return !!_isRTL;\n}\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL, persistSetting) {\n  if (persistSetting === void 0) {\n    persistSetting = false;\n  }\n  var doc = getDocument();\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n  if (persistSetting) {\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\n  }\n  _isRTL = isRTL;\n  mergeStylesSetRTL(_isRTL);\n}\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key, theme) {\n  if (theme === void 0) {\n    theme = {};\n  }\n  if (getRTL(theme)) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n  return key;\n}","map":{"version":3,"names":["KeyCodes","getDocument","getItem","setItem","setRTL","mergeStylesSetRTL","RTL_LOCAL_STORAGE_KEY","_isRTL","getRTL","theme","rtl","undefined","savedRTL","doc","body","getAttribute","documentElement","isRTL","persistSetting","setAttribute","getRTLSafeKeyCode","key","left","right"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/rtl.ts"],"sourcesContent":["import { KeyCodes } from './KeyCodes';\nimport { getDocument } from './dom/getDocument';\nimport { getItem, setItem } from './sessionStorage';\nimport { setRTL as mergeStylesSetRTL } from '@fluentui/merge-styles';\n\nconst RTL_LOCAL_STORAGE_KEY = 'isRTL';\n\n// Default to undefined so that we initialize on first read.\nlet _isRTL: boolean | undefined;\n\n/**\n * Gets the rtl state of the page (returns true if in rtl.)\n */\nexport function getRTL(theme: { rtl?: boolean } = {}): boolean {\n  if (theme.rtl !== undefined) {\n    return theme.rtl;\n  }\n  if (_isRTL === undefined) {\n    // Fabric supports persisting the RTL setting between page refreshes via session storage\n    let savedRTL = getItem(RTL_LOCAL_STORAGE_KEY);\n    if (savedRTL !== null) {\n      _isRTL = savedRTL === '1';\n      setRTL(_isRTL);\n    }\n\n    let doc = getDocument();\n    if (_isRTL === undefined && doc) {\n      _isRTL = ((doc.body && doc.body.getAttribute('dir')) || doc.documentElement.getAttribute('dir')) === 'rtl';\n      mergeStylesSetRTL(_isRTL);\n    }\n  }\n\n  return !!_isRTL;\n}\n\n/**\n * Sets the rtl state of the page (by adjusting the dir attribute of the html element.)\n */\nexport function setRTL(isRTL: boolean, persistSetting: boolean = false): void {\n  let doc = getDocument();\n  if (doc) {\n    doc.documentElement.setAttribute('dir', isRTL ? 'rtl' : 'ltr');\n  }\n\n  if (persistSetting) {\n    setItem(RTL_LOCAL_STORAGE_KEY, isRTL ? '1' : '0');\n  }\n\n  _isRTL = isRTL;\n  mergeStylesSetRTL(_isRTL);\n}\n\n/**\n * Returns the given key, but flips right/left arrows if necessary.\n */\nexport function getRTLSafeKeyCode(key: number, theme: { rtl?: boolean } = {}): number {\n  if (getRTL(theme)) {\n    if (key === KeyCodes.left) {\n      key = KeyCodes.right;\n    } else if (key === KeyCodes.right) {\n      key = KeyCodes.left;\n    }\n  }\n\n  return key;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,EAAEC,OAAO,QAAQ,kBAAkB;AACnD,SAASC,MAAM,IAAIC,iBAAiB,QAAQ,wBAAwB;AAEpE,IAAMC,qBAAqB,GAAG,OAAO;AAErC;AACA,IAAIC,MAA2B;AAE/B;;;AAGA,OAAM,SAAUC,MAAMA,CAACC,KAA6B;EAA7B,IAAAA,KAAA;IAAAA,KAAA,KAA6B;EAAA;EAClD,IAAIA,KAAK,CAACC,GAAG,KAAKC,SAAS,EAAE;IAC3B,OAAOF,KAAK,CAACC,GAAG;;EAElB,IAAIH,MAAM,KAAKI,SAAS,EAAE;IACxB;IACA,IAAIC,QAAQ,GAAGV,OAAO,CAACI,qBAAqB,CAAC;IAC7C,IAAIM,QAAQ,KAAK,IAAI,EAAE;MACrBL,MAAM,GAAGK,QAAQ,KAAK,GAAG;MACzBR,MAAM,CAACG,MAAM,CAAC;;IAGhB,IAAIM,GAAG,GAAGZ,WAAW,EAAE;IACvB,IAAIM,MAAM,KAAKI,SAAS,IAAIE,GAAG,EAAE;MAC/BN,MAAM,GAAG,CAAEM,GAAG,CAACC,IAAI,IAAID,GAAG,CAACC,IAAI,CAACC,YAAY,CAAC,KAAK,CAAC,IAAKF,GAAG,CAACG,eAAe,CAACD,YAAY,CAAC,KAAK,CAAC,MAAM,KAAK;MAC1GV,iBAAiB,CAACE,MAAM,CAAC;;;EAI7B,OAAO,CAAC,CAACA,MAAM;AACjB;AAEA;;;AAGA,OAAM,SAAUH,MAAMA,CAACa,KAAc,EAAEC,cAA+B;EAA/B,IAAAA,cAAA;IAAAA,cAAA,QAA+B;EAAA;EACpE,IAAIL,GAAG,GAAGZ,WAAW,EAAE;EACvB,IAAIY,GAAG,EAAE;IACPA,GAAG,CAACG,eAAe,CAACG,YAAY,CAAC,KAAK,EAAEF,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;;EAGhE,IAAIC,cAAc,EAAE;IAClBf,OAAO,CAACG,qBAAqB,EAAEW,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;;EAGnDV,MAAM,GAAGU,KAAK;EACdZ,iBAAiB,CAACE,MAAM,CAAC;AAC3B;AAEA;;;AAGA,OAAM,SAAUa,iBAAiBA,CAACC,GAAW,EAAEZ,KAA6B;EAA7B,IAAAA,KAAA;IAAAA,KAAA,KAA6B;EAAA;EAC1E,IAAID,MAAM,CAACC,KAAK,CAAC,EAAE;IACjB,IAAIY,GAAG,KAAKrB,QAAQ,CAACsB,IAAI,EAAE;MACzBD,GAAG,GAAGrB,QAAQ,CAACuB,KAAK;KACrB,MAAM,IAAIF,GAAG,KAAKrB,QAAQ,CAACuB,KAAK,EAAE;MACjCF,GAAG,GAAGrB,QAAQ,CAACsB,IAAI;;;EAIvB,OAAOD,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}