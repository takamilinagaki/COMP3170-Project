{"ast":null,"code":"import { labelProperties, audioProperties, videoProperties, olProperties, liProperties, anchorProperties, buttonProperties, inputProperties, textAreaProperties, selectProperties, optionProperties, tableProperties, trProperties, thProperties, tdProperties, colGroupProperties, colProperties, formProperties, iframeProperties, imgProperties, htmlElementProperties, getNativeProps } from './properties';\nvar nativeElementMap = {\n  label: labelProperties,\n  audio: audioProperties,\n  video: videoProperties,\n  ol: olProperties,\n  li: liProperties,\n  a: anchorProperties,\n  button: buttonProperties,\n  input: inputProperties,\n  textarea: textAreaProperties,\n  select: selectProperties,\n  option: optionProperties,\n  table: tableProperties,\n  tr: trProperties,\n  th: thProperties,\n  td: tdProperties,\n  colGroup: colGroupProperties,\n  col: colProperties,\n  form: formProperties,\n  iframe: iframeProperties,\n  img: imgProperties\n};\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps(tagName, props, excludedPropNames) {\n  var allowedPropNames = tagName && nativeElementMap[tagName] || htmlElementProperties;\n  return getNativeProps(props, allowedPropNames, excludedPropNames);\n}","map":{"version":3,"names":["labelProperties","audioProperties","videoProperties","olProperties","liProperties","anchorProperties","buttonProperties","inputProperties","textAreaProperties","selectProperties","optionProperties","tableProperties","trProperties","thProperties","tdProperties","colGroupProperties","colProperties","formProperties","iframeProperties","imgProperties","htmlElementProperties","getNativeProps","nativeElementMap","label","audio","video","ol","li","a","button","input","textarea","select","option","table","tr","th","td","colGroup","col","form","iframe","img","getNativeElementProps","tagName","props","excludedPropNames","allowedPropNames"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/getNativeElementProps.ts"],"sourcesContent":["import {\n  labelProperties,\n  audioProperties,\n  videoProperties,\n  olProperties,\n  liProperties,\n  anchorProperties,\n  buttonProperties,\n  inputProperties,\n  textAreaProperties,\n  selectProperties,\n  optionProperties,\n  tableProperties,\n  trProperties,\n  thProperties,\n  tdProperties,\n  colGroupProperties,\n  colProperties,\n  formProperties,\n  iframeProperties,\n  imgProperties,\n  htmlElementProperties,\n  getNativeProps,\n} from './properties';\nimport * as React from 'react';\n\nconst nativeElementMap: Record<string, Record<string, number>> = {\n  label: labelProperties,\n  audio: audioProperties,\n  video: videoProperties,\n  ol: olProperties,\n  li: liProperties,\n  a: anchorProperties,\n  button: buttonProperties,\n  input: inputProperties,\n  textarea: textAreaProperties,\n  select: selectProperties,\n  option: optionProperties,\n  table: tableProperties,\n  tr: trProperties,\n  th: thProperties,\n  td: tdProperties,\n  colGroup: colGroupProperties,\n  col: colProperties,\n  form: formProperties,\n  iframe: iframeProperties,\n  img: imgProperties,\n};\n\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps<TAttributes extends React.HTMLAttributes<any>>(\n  tagName: string,\n  props: {},\n  excludedPropNames?: string[],\n): TAttributes {\n  const allowedPropNames = (tagName && nativeElementMap[tagName]) || htmlElementProperties;\n\n  return getNativeProps(props, allowedPropNames, excludedPropNames);\n}\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,gBAAgB,EAChBC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAChBC,gBAAgB,EAChBC,eAAe,EACfC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,kBAAkB,EAClBC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,aAAa,EACbC,qBAAqB,EACrBC,cAAc,QACT,cAAc;AAGrB,IAAMC,gBAAgB,GAA2C;EAC/DC,KAAK,EAAEvB,eAAe;EACtBwB,KAAK,EAAEvB,eAAe;EACtBwB,KAAK,EAAEvB,eAAe;EACtBwB,EAAE,EAAEvB,YAAY;EAChBwB,EAAE,EAAEvB,YAAY;EAChBwB,CAAC,EAAEvB,gBAAgB;EACnBwB,MAAM,EAAEvB,gBAAgB;EACxBwB,KAAK,EAAEvB,eAAe;EACtBwB,QAAQ,EAAEvB,kBAAkB;EAC5BwB,MAAM,EAAEvB,gBAAgB;EACxBwB,MAAM,EAAEvB,gBAAgB;EACxBwB,KAAK,EAAEvB,eAAe;EACtBwB,EAAE,EAAEvB,YAAY;EAChBwB,EAAE,EAAEvB,YAAY;EAChBwB,EAAE,EAAEvB,YAAY;EAChBwB,QAAQ,EAAEvB,kBAAkB;EAC5BwB,GAAG,EAAEvB,aAAa;EAClBwB,IAAI,EAAEvB,cAAc;EACpBwB,MAAM,EAAEvB,gBAAgB;EACxBwB,GAAG,EAAEvB;CACN;AAED;;;;;;;AAOA;AACA,OAAM,SAAUwB,qBAAqBA,CACnCC,OAAe,EACfC,KAAS,EACTC,iBAA4B;EAE5B,IAAMC,gBAAgB,GAAIH,OAAO,IAAItB,gBAAgB,CAACsB,OAAO,CAAC,IAAKxB,qBAAqB;EAExF,OAAOC,cAAc,CAACwB,KAAK,EAAEE,gBAAgB,EAAED,iBAAiB,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}