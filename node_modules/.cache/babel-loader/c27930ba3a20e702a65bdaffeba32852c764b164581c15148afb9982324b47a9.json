{"ast":null,"code":"/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled(props, valueProp) {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}","map":{"version":3,"names":["isControlled","props","valueProp","undefined"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/controlled.ts"],"sourcesContent":["/**\n * Determines whether a component is controlled.\n * @param props - Component props\n * @param valueProp - Prop containing the controlled value\n * @returns true if controlled, false if uncontrolled\n */\nexport function isControlled<P>(props: P, valueProp: keyof P): boolean {\n  // React's built-in <input> considers a prop to be provided if its value is non-null/undefined.\n  // Mirror that behavior here (rather than checking for just undefined).\n  return props[valueProp] !== undefined && props[valueProp] !== null;\n}\n"],"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,YAAYA,CAAIC,KAAQ,EAAEC,SAAkB;EAC1D;EACA;EACA,OAAOD,KAAK,CAACC,SAAS,CAAC,KAAKC,SAAS,IAAIF,KAAK,CAACC,SAAS,CAAC,KAAK,IAAI;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}