{"ast":null,"code":"export var SelectableOptionMenuItemType;\n(function (SelectableOptionMenuItemType) {\n  SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Normal\"] = 0] = \"Normal\";\n  SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Divider\"] = 1] = \"Divider\";\n  SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Header\"] = 2] = \"Header\";\n  SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"SelectAll\"] = 3] = \"SelectAll\";\n})(SelectableOptionMenuItemType || (SelectableOptionMenuItemType = {}));","map":{"version":3,"names":["SelectableOptionMenuItemType"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/selectableOption/SelectableOption.types.ts"],"sourcesContent":["export interface ISelectableOption<T = any> {\n  /**\n   * Arbitrary string associated with this option.\n   */\n  key: string | number;\n\n  /**\n   * ID attribute associated with this option\n   */\n  id?: string;\n\n  /**\n   * Text to render for this option\n   */\n  text: string;\n\n  /**\n   * Title attribute (built in tooltip) for a given option.\n   */\n  title?: string;\n\n  /**\n   * Text to render for this option\n   * Note: the SelectAll itemType is only supported on one option in multiselect components\n   */\n  itemType?: SelectableOptionMenuItemType;\n\n  /**\n   * Index for this option\n   */\n  index?: number;\n\n  /**\n   * The aria label for the dropdown option. If not present, the `text` will be used.\n   */\n  ariaLabel?: string;\n\n  /** If option is selected. */\n  selected?: boolean;\n\n  /**\n   * Whether the option is disabled\n   * @defaultvalue false\n   */\n  disabled?: boolean;\n\n  /**\n   * Defines whether the option is hidden or not.\n   * @defaultvalue false\n   */\n  hidden?: boolean;\n\n  /**\n   * Data available to custom onRender functions.\n   */\n  data?: T;\n}\n\nexport enum SelectableOptionMenuItemType {\n  Normal = 0,\n  Divider = 1,\n  Header = 2,\n  SelectAll = 3,\n}\n"],"mappings":"AA0DA,WAAYA,4BAKX;AALD,WAAYA,4BAA4B;EACtCA,4BAAA,CAAAA,4BAAA,0BAAU;EACVA,4BAAA,CAAAA,4BAAA,4BAAW;EACXA,4BAAA,CAAAA,4BAAA,0BAAU;EACVA,4BAAA,CAAAA,4BAAA,gCAAa;AACf,CAAC,EALWA,4BAA4B,KAA5BA,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}