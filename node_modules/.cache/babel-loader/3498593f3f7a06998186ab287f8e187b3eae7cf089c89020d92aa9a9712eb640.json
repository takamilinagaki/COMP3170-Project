{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useId, useControllableValue, useConst, useSetTimeout } from '@fluentui/react-hooks';\nimport { KeyCodes, css, getRTL, getRTLSafeKeyCode, on, classNamesFunction, getNativeProps, divProperties } from '@fluentui/utilities';\nexport var ONKEYDOWN_TIMEOUT_DURATION = 1000;\nvar getClassNames = classNamesFunction();\nvar getSlotStyleFn = function (sty) {\n  return function (value) {\n    var _a;\n    return _a = {}, _a[sty] = \"\".concat(value, \"%\"), _a;\n  };\n};\nvar getPercent = function (value, sliderMin, sliderMax) {\n  return sliderMax === sliderMin ? 0 : (value - sliderMin) / (sliderMax - sliderMin) * 100;\n};\nvar useComponentRef = function (props, sliderBoxRef, value, range) {\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      get value() {\n        return value;\n      },\n      get range() {\n        return range;\n      },\n      focus: function () {\n        var _a;\n        (_a = sliderBoxRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    };\n  }, [range, sliderBoxRef, value]);\n};\nexport var useSlider = function (props, ref) {\n  var _a = props.step,\n    step = _a === void 0 ? 1 : _a,\n    className = props.className,\n    _b = props.disabled,\n    disabled = _b === void 0 ? false : _b,\n    label = props.label,\n    _c = props.max,\n    max = _c === void 0 ? 10 : _c,\n    _d = props.min,\n    min = _d === void 0 ? 0 : _d,\n    _e = props.showValue,\n    showValue = _e === void 0 ? true : _e,\n    _f = props.buttonProps,\n    buttonProps = _f === void 0 ? {} : _f,\n    _g = props.vertical,\n    vertical = _g === void 0 ? false : _g,\n    snapToStep = props.snapToStep,\n    valueFormat = props.valueFormat,\n    styles = props.styles,\n    theme = props.theme,\n    originFromZero = props.originFromZero,\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    _h = props.ariaLabel,\n    ariaLabel = _h === void 0 ? props['aria-label'] : _h,\n    ranged = props.ranged,\n    onChange = props.onChange,\n    onChanged = props.onChanged;\n  var disposables = React.useRef([]);\n  var _j = useSetTimeout(),\n    setTimeout = _j.setTimeout,\n    clearTimeout = _j.clearTimeout;\n  var sliderLine = React.useRef(null);\n  // Casting here is necessary because useControllableValue expects the event for the change callback\n  // to extend React.SyntheticEvent, when in fact for Slider, the event could be either a React event\n  // or a native browser event depending on the context.\n  var _k = useControllableValue(props.value, props.defaultValue, function (ev, v) {\n      return onChange === null || onChange === void 0 ? void 0 : onChange(v, ranged ? [internalState.latestLowerValue, v] : undefined, ev);\n    }),\n    unclampedValue = _k[0],\n    setValue = _k[1];\n  var _l = useControllableValue(props.lowerValue, props.defaultLowerValue, function (ev, lv) {\n      return onChange === null || onChange === void 0 ? void 0 : onChange(internalState.latestValue, [lv, internalState.latestValue], ev);\n    }),\n    unclampedLowerValue = _l[0],\n    setLowerValue = _l[1];\n  // Ensure that value is always a number and is clamped by min/max.\n  var value = Math.max(min, Math.min(max, unclampedValue || 0));\n  var lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n  var internalState = useConst({\n    onKeyDownTimer: -1,\n    isAdjustingLowerValue: false,\n    latestValue: value,\n    latestLowerValue: lowerValue\n  });\n  // On each render, update this saved value used by callbacks. (This should be safe even if render\n  // is called multiple times, because an event handler or timeout callback will only run once.)\n  internalState.latestValue = value;\n  internalState.latestLowerValue = lowerValue;\n  var id = useId('Slider', props.id || (buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.id));\n  var classNames = getClassNames(styles, {\n    className: className,\n    disabled: disabled,\n    vertical: vertical,\n    showTransitions: !snapToStep && !internalState.isBetweenSteps,\n    showValue: showValue,\n    ranged: ranged,\n    theme: theme\n  });\n  var steps = (max - min) / step;\n  var clearOnKeyDownTimer = function () {\n    clearTimeout(internalState.onKeyDownTimer);\n    internalState.onKeyDownTimer = -1;\n  };\n  var setOnKeyDownTimer = function (event) {\n    clearOnKeyDownTimer();\n    if (onChanged) {\n      internalState.onKeyDownTimer = setTimeout(function () {\n        onChanged(event, internalState.latestValue, ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined);\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    }\n  };\n  var getAriaValueText = function (valueProps) {\n    var ariaValueText = props.ariaValueText;\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n    return undefined;\n  };\n  /**\n   * Update `value` or `lowerValue`, including clamping between min/max and rounding to\n   * appropriate precision.\n   * @param newValue - New current value of the slider, possibly rounded to a whole step.\n   * @param newUnroundedValue - Like `newValue` but without the rounding to a step. If this is\n   * provided and not equal to `newValue`, `internalState.isBetweenSteps` will be set, which\n   * may cause thumb movement animations to be disabled.\n   */\n  var updateValue = function (ev, newValue, newUnroundedValue) {\n    newValue = Math.min(max, Math.max(min, newValue));\n    newUnroundedValue = newUnroundedValue !== undefined ? Math.min(max, Math.max(min, newUnroundedValue)) : undefined;\n    var numDec = 0;\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    }\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    var roundedValue = parseFloat(newValue.toFixed(numDec));\n    internalState.isBetweenSteps = newUnroundedValue !== undefined && newUnroundedValue !== roundedValue;\n    if (ranged) {\n      // decided which thumb value to change\n      if (internalState.isAdjustingLowerValue && (originFromZero ? roundedValue <= 0 : roundedValue <= internalState.latestValue)) {\n        setLowerValue(roundedValue, ev);\n      } else if (!internalState.isAdjustingLowerValue && (originFromZero ? roundedValue >= 0 : roundedValue >= internalState.latestLowerValue)) {\n        setValue(roundedValue, ev);\n      }\n    } else {\n      setValue(roundedValue, ev);\n    }\n  };\n  var onKeyDown = function (event) {\n    var newCurrentValue = internalState.isAdjustingLowerValue ? internalState.latestLowerValue : internalState.latestValue;\n    var diff = 0;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      default:\n        return;\n    }\n    updateValue(event, newCurrentValue + diff);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  var getPosition = function (event, verticalProp) {\n    var currentPosition = 0;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? event.clientX : event.clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp ? event.touches[0].clientX : event.touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  };\n  var calculateCurrentSteps = function (event) {\n    // eslint-disable-next-line deprecation/deprecation\n    var sliderPositionRect = sliderLine.current.getBoundingClientRect();\n    var sliderLength = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    var stepLength = sliderLength / steps;\n    var currentSteps;\n    var distance;\n    if (!props.vertical) {\n      var left = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      var bottom = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom;\n      currentSteps = distance / stepLength;\n    }\n    return currentSteps;\n  };\n  var onMouseMoveOrTouchMove = function (event, suppressEventCancelation) {\n    var currentSteps = calculateCurrentSteps(event);\n    var newUnroundedValue = min + step * currentSteps;\n    var newCurrentValue = min + step * Math.round(currentSteps);\n    updateValue(event, newCurrentValue, newUnroundedValue);\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n  var onMouseDownOrTouchStart = function (event) {\n    if (ranged) {\n      var currentSteps = calculateCurrentSteps(event);\n      var newValue = min + step * currentSteps;\n      internalState.isAdjustingLowerValue = newValue <= internalState.latestLowerValue || newValue - internalState.latestLowerValue <= internalState.latestValue - newValue;\n    }\n    if (event.type === 'mousedown') {\n      disposables.current.push(on(window, 'mousemove', onMouseMoveOrTouchMove, true), on(window, 'mouseup', onMouseUpOrTouchEnd, true));\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(on(window, 'touchmove', onMouseMoveOrTouchMove, true), on(window, 'touchend', onMouseUpOrTouchEnd, true));\n    }\n    onMouseMoveOrTouchMove(event, true);\n  };\n  var onMouseUpOrTouchEnd = function (event) {\n    // Done adjusting, so clear this value\n    internalState.isBetweenSteps = undefined;\n    onChanged === null || onChanged === void 0 ? void 0 : onChanged(event, internalState.latestValue, ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined);\n    disposeListeners();\n  };\n  var onThumbFocus = function (event) {\n    internalState.isAdjustingLowerValue = event.target === lowerValueThumbRef.current;\n  };\n  var disposeListeners = React.useCallback(function () {\n    disposables.current.forEach(function (dispose) {\n      return dispose();\n    });\n    disposables.current = [];\n  }, []);\n  React.useEffect(function () {\n    return disposeListeners;\n  }, [disposeListeners]);\n  var lowerValueThumbRef = React.useRef(null);\n  var thumbRef = React.useRef(null);\n  var sliderBoxRef = React.useRef(null);\n  useComponentRef(props, sliderBoxRef, value, ranged ? [lowerValue, value] : undefined);\n  var getPositionStyles = getSlotStyleFn(vertical ? 'bottom' : getRTL(props.theme) ? 'right' : 'left');\n  var getTrackStyles = getSlotStyleFn(vertical ? 'height' : 'width');\n  var originValue = originFromZero ? 0 : min;\n  var valuePercent = getPercent(value, min, max);\n  var lowerValuePercent = getPercent(lowerValue, min, max);\n  var originPercentOfLine = getPercent(originValue, min, max);\n  var activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  var topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  var bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n  var rootProps = {\n    className: classNames.root,\n    ref: ref\n  };\n  var labelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled: disabled,\n    htmlFor: ariaLabel ? undefined : id\n  };\n  var valueLabelProps = showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(value) : value,\n    disabled: disabled,\n    htmlFor: disabled ? id : undefined\n  } : undefined;\n  var lowerValueLabelProps = ranged && showValue ? {\n    className: classNames.valueLabel,\n    children: valueFormat ? valueFormat(lowerValue) : lowerValue,\n    disabled: disabled\n  } : undefined;\n  var zeroTickProps = originFromZero ? {\n    className: classNames.zeroTick,\n    style: getPositionStyles(originPercentOfLine)\n  } : undefined;\n  var trackActiveProps = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth)\n  };\n  var trackTopInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth)\n  };\n  var trackBottomInactiveProps = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth)\n  };\n  var sliderProps = __assign({\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0\n  }, {\n    'data-is-focusable': !disabled\n  });\n  var sliderBoxProps = __assign(__assign(__assign({\n    id: id,\n    className: css(classNames.slideBox, buttonProps.className),\n    ref: sliderBoxRef\n  }, !disabled && {\n    onMouseDown: onMouseDownOrTouchStart,\n    onTouchStart: onMouseDownOrTouchStart,\n    onKeyDown: onKeyDown\n  }), buttonProps && getNativeProps(buttonProps, divProperties, ['id', 'className'])), !ranged && __assign(__assign({}, sliderProps), {\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': ariaLabel || label,\n    'aria-labelledby': ariaLabelledBy\n  }));\n  var onFocusProp = disabled ? {} : {\n    onFocus: onThumbFocus\n  };\n  var thumbProps = __assign({\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent)\n  }, ranged && __assign(__assign(__assign({}, sliderProps), onFocusProp), {\n    id: \"max-\".concat(id),\n    'aria-valuemin': lowerValue,\n    'aria-valuemax': max,\n    'aria-valuenow': value,\n    'aria-valuetext': getAriaValueText(value),\n    'aria-label': \"max \".concat(ariaLabel || label)\n  }));\n  var lowerValueThumbProps = ranged ? __assign(__assign(__assign({\n    ref: lowerValueThumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(lowerValuePercent)\n  }, sliderProps), onFocusProp), {\n    id: \"min-\".concat(id),\n    'aria-valuemin': min,\n    'aria-valuemax': value,\n    'aria-valuenow': lowerValue,\n    'aria-valuetext': getAriaValueText(lowerValue),\n    'aria-label': \"min \".concat(ariaLabel || label)\n  }) : undefined;\n  var containerProps = {\n    className: classNames.container\n  };\n  var sliderLineProps = {\n    ref: sliderLine,\n    className: classNames.line\n  };\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps\n  };\n};","map":{"version":3,"names":["React","useId","useControllableValue","useConst","useSetTimeout","KeyCodes","css","getRTL","getRTLSafeKeyCode","on","classNamesFunction","getNativeProps","divProperties","ONKEYDOWN_TIMEOUT_DURATION","getClassNames","getSlotStyleFn","sty","value","_a","concat","getPercent","sliderMin","sliderMax","useComponentRef","props","sliderBoxRef","range","useImperativeHandle","componentRef","focus","current","useSlider","ref","step","className","_b","disabled","label","_c","max","_d","min","_e","showValue","_f","buttonProps","_g","vertical","snapToStep","valueFormat","styles","theme","originFromZero","ariaLabelledBy","_h","ariaLabel","ranged","onChange","onChanged","disposables","useRef","_j","setTimeout","clearTimeout","sliderLine","_k","defaultValue","ev","v","internalState","latestLowerValue","undefined","unclampedValue","setValue","_l","lowerValue","defaultLowerValue","lv","latestValue","unclampedLowerValue","setLowerValue","Math","onKeyDownTimer","isAdjustingLowerValue","id","classNames","showTransitions","isBetweenSteps","steps","clearOnKeyDownTimer","setOnKeyDownTimer","event","getAriaValueText","valueProps","ariaValueText","toString","updateValue","newValue","newUnroundedValue","numDec","isFinite","round","pow","roundedValue","parseFloat","toFixed","onKeyDown","newCurrentValue","diff","which","left","down","right","up","home","end","preventDefault","stopPropagation","getPosition","verticalProp","currentPosition","type","clientX","clientY","touches","calculateCurrentSteps","sliderPositionRect","getBoundingClientRect","sliderLength","width","height","stepLength","currentSteps","distance","bottom","onMouseMoveOrTouchMove","suppressEventCancelation","onMouseDownOrTouchStart","push","window","onMouseUpOrTouchEnd","disposeListeners","onThumbFocus","target","lowerValueThumbRef","useCallback","forEach","dispose","useEffect","thumbRef","getPositionStyles","getTrackStyles","originValue","valuePercent","lowerValuePercent","originPercentOfLine","activeSectionWidth","abs","topSectionWidth","bottomSectionWidth","rootProps","root","labelProps","titleLabel","children","htmlFor","valueLabelProps","valueLabel","lowerValueLabelProps","zeroTickProps","zeroTick","style","trackActiveProps","lineContainer","activeSection","trackTopInactiveProps","inactiveSection","trackBottomInactiveProps","sliderProps","__assign","role","tabIndex","sliderBoxProps","slideBox","onMouseDown","onTouchStart","onFocusProp","onFocus","thumbProps","thumb","lowerValueThumbProps","containerProps","container","sliderLineProps","line","sliderBox","lowerValueLabel","lowerValueThumb","activeTrack","topInactiveTrack","bottomInactiveTrack"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Slider/useSlider.ts"],"sourcesContent":["import * as React from 'react';\nimport { useId, useControllableValue, useConst, useSetTimeout } from '@fluentui/react-hooks';\nimport {\n  KeyCodes,\n  css,\n  getRTL,\n  getRTLSafeKeyCode,\n  on,\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n} from '@fluentui/utilities';\nimport type { ISliderProps, ISliderStyleProps, ISliderStyles } from './Slider.types';\nimport type { ILabelProps } from '../Label/index';\n\nexport const ONKEYDOWN_TIMEOUT_DURATION = 1000;\n\ninterface ISliderInternalState {\n  onKeyDownTimer: number;\n  /** For a ranged slider, whether the thumb currently being dragged is the lower value one. */\n  isAdjustingLowerValue: boolean;\n  /** Allows access to the latest `value` inside reused callbacks (to avoid stale capture issues) */\n  latestValue: number;\n  /** Allows access to the latest `lowerValue` inside reused callbacks (to avoid stale capture issues) */\n  latestLowerValue: number;\n  /**\n   * Whether the user is currently dragging the thumb and it's between step intervals.\n   * (If true, and `props.snapToStep` is falsy, transition animations will be disabled.)\n   */\n  isBetweenSteps?: boolean;\n}\n\nconst getClassNames = classNamesFunction<ISliderStyleProps, ISliderStyles>();\n\ntype Dimension = 'height' | 'width';\ntype Position = 'bottom' | 'left' | 'right';\ntype PositionOrDimension = Dimension | Position;\n/** All the possible event types for a change event */\ntype ChangeEvent = Parameters<Required<ISliderProps>['onChange']>[2];\n/** All the possible event types for a change event that's dragging the slider (mouse or touch) */\ntype DragChangeEvent = React.MouseEvent | React.TouchEvent | MouseEvent | TouchEvent;\n\nconst getSlotStyleFn = (sty: PositionOrDimension) => {\n  return (value: number) => {\n    return {\n      [sty]: `${value}%`,\n    };\n  };\n};\n\nconst getPercent = (value: number, sliderMin: number, sliderMax: number) => {\n  return sliderMax === sliderMin ? 0 : ((value - sliderMin) / (sliderMax - sliderMin)) * 100;\n};\n\nconst useComponentRef = (\n  props: ISliderProps,\n  sliderBoxRef: React.RefObject<HTMLDivElement>,\n  value: number | undefined,\n  range: [number, number] | undefined,\n) => {\n  React.useImperativeHandle(\n    props.componentRef,\n    () => ({\n      get value() {\n        return value;\n      },\n      get range() {\n        return range;\n      },\n      focus() {\n        sliderBoxRef.current?.focus();\n      },\n    }),\n    [range, sliderBoxRef, value],\n  );\n};\n\nexport const useSlider = (props: ISliderProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n  const {\n    step = 1,\n    className,\n    disabled = false,\n    label,\n    max = 10,\n    min = 0,\n    showValue = true,\n    buttonProps = {},\n    vertical = false,\n    snapToStep,\n    valueFormat,\n    styles,\n    theme,\n    originFromZero,\n    'aria-labelledby': ariaLabelledBy,\n    ariaLabel = props['aria-label'],\n    ranged,\n    onChange,\n    onChanged,\n  } = props;\n\n  const disposables = React.useRef<(() => void)[]>([]);\n  const { setTimeout, clearTimeout } = useSetTimeout();\n  const sliderLine = React.useRef<HTMLDivElement>(null);\n\n  // Casting here is necessary because useControllableValue expects the event for the change callback\n  // to extend React.SyntheticEvent, when in fact for Slider, the event could be either a React event\n  // or a native browser event depending on the context.\n  const [unclampedValue, setValue] = useControllableValue(props.value, props.defaultValue, (ev: any, v) =>\n    onChange?.(v!, ranged ? [internalState.latestLowerValue, v!] : undefined, ev),\n  ) as [number | undefined, (v: number | undefined, ev: ChangeEvent) => void];\n  const [unclampedLowerValue, setLowerValue] = useControllableValue(\n    props.lowerValue,\n    props.defaultLowerValue,\n    (ev: any, lv) => onChange?.(internalState.latestValue, [lv!, internalState.latestValue], ev),\n  ) as [number | undefined, (v: number | undefined, ev: ChangeEvent) => void];\n\n  // Ensure that value is always a number and is clamped by min/max.\n  const value = Math.max(min, Math.min(max, unclampedValue || 0));\n  const lowerValue = Math.max(min, Math.min(value, unclampedLowerValue || 0));\n\n  const internalState = useConst<ISliderInternalState>({\n    onKeyDownTimer: -1,\n    isAdjustingLowerValue: false,\n    latestValue: value,\n    latestLowerValue: lowerValue,\n  });\n  // On each render, update this saved value used by callbacks. (This should be safe even if render\n  // is called multiple times, because an event handler or timeout callback will only run once.)\n  internalState.latestValue = value;\n  internalState.latestLowerValue = lowerValue;\n\n  const id = useId('Slider', props.id || buttonProps?.id);\n  const classNames = getClassNames(styles, {\n    className,\n    disabled,\n    vertical,\n    showTransitions: !snapToStep && !internalState.isBetweenSteps,\n    showValue,\n    ranged,\n    theme: theme!,\n  });\n\n  const steps = (max - min) / step;\n\n  const clearOnKeyDownTimer = (): void => {\n    clearTimeout(internalState.onKeyDownTimer);\n    internalState.onKeyDownTimer = -1;\n  };\n\n  const setOnKeyDownTimer = (event: React.KeyboardEvent) => {\n    clearOnKeyDownTimer();\n    if (onChanged) {\n      internalState.onKeyDownTimer = setTimeout(() => {\n        onChanged(\n          event,\n          internalState.latestValue,\n          ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined,\n        );\n      }, ONKEYDOWN_TIMEOUT_DURATION);\n    }\n  };\n\n  const getAriaValueText = (valueProps: number | undefined): string | undefined => {\n    const { ariaValueText } = props;\n    if (valueProps !== undefined) {\n      return ariaValueText ? ariaValueText(valueProps) : valueProps.toString();\n    }\n    return undefined;\n  };\n\n  /**\n   * Update `value` or `lowerValue`, including clamping between min/max and rounding to\n   * appropriate precision.\n   * @param newValue - New current value of the slider, possibly rounded to a whole step.\n   * @param newUnroundedValue - Like `newValue` but without the rounding to a step. If this is\n   * provided and not equal to `newValue`, `internalState.isBetweenSteps` will be set, which\n   * may cause thumb movement animations to be disabled.\n   */\n  const updateValue = (ev: any, newValue: number, newUnroundedValue?: number): void => {\n    newValue = Math.min(max, Math.max(min, newValue));\n    newUnroundedValue = newUnroundedValue !== undefined ? Math.min(max, Math.max(min, newUnroundedValue)) : undefined;\n\n    let numDec = 0;\n    if (isFinite(step)) {\n      while (Math.round(step * Math.pow(10, numDec)) / Math.pow(10, numDec) !== step) {\n        numDec++;\n      }\n    }\n    // Make sure value has correct number of decimal places based on number of decimals in step\n    const roundedValue = parseFloat(newValue.toFixed(numDec));\n\n    internalState.isBetweenSteps = newUnroundedValue !== undefined && newUnroundedValue !== roundedValue;\n\n    if (ranged) {\n      // decided which thumb value to change\n      if (\n        internalState.isAdjustingLowerValue &&\n        (originFromZero ? roundedValue <= 0 : roundedValue <= internalState.latestValue)\n      ) {\n        setLowerValue(roundedValue, ev);\n      } else if (\n        !internalState.isAdjustingLowerValue &&\n        (originFromZero ? roundedValue >= 0 : roundedValue >= internalState.latestLowerValue)\n      ) {\n        setValue(roundedValue, ev);\n      }\n    } else {\n      setValue(roundedValue, ev);\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent): void => {\n    let newCurrentValue = internalState.isAdjustingLowerValue\n      ? internalState.latestLowerValue\n      : internalState.latestValue;\n    let diff = 0;\n    // eslint-disable-next-line deprecation/deprecation\n    switch (event.which) {\n      case getRTLSafeKeyCode(KeyCodes.left, props.theme):\n      case KeyCodes.down:\n        diff = -step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case getRTLSafeKeyCode(KeyCodes.right, props.theme):\n      case KeyCodes.up:\n        diff = step;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.home:\n        newCurrentValue = min;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      case KeyCodes.end:\n        newCurrentValue = max;\n        clearOnKeyDownTimer();\n        setOnKeyDownTimer(event);\n        break;\n      default:\n        return;\n    }\n    updateValue(event, newCurrentValue + diff);\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const getPosition = (event: DragChangeEvent, verticalProp: boolean | undefined): number => {\n    let currentPosition = 0;\n    switch (event.type) {\n      case 'mousedown':\n      case 'mousemove':\n        currentPosition = !verticalProp ? (event as MouseEvent).clientX : (event as MouseEvent).clientY;\n        break;\n      case 'touchstart':\n      case 'touchmove':\n        currentPosition = !verticalProp\n          ? (event as TouchEvent).touches[0].clientX\n          : (event as TouchEvent).touches[0].clientY;\n        break;\n    }\n    return currentPosition;\n  };\n\n  const calculateCurrentSteps = (event: DragChangeEvent) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const sliderPositionRect: ClientRect = sliderLine.current!.getBoundingClientRect();\n    const sliderLength: number = !props.vertical ? sliderPositionRect.width : sliderPositionRect.height;\n    const stepLength: number = sliderLength / steps;\n    let currentSteps: number;\n    let distance: number;\n    if (!props.vertical) {\n      const left = getPosition(event, props.vertical);\n      distance = getRTL(props.theme) ? sliderPositionRect.right - left : left - sliderPositionRect.left;\n      currentSteps = distance / stepLength;\n    } else {\n      const bottom = getPosition(event, props.vertical);\n      distance = sliderPositionRect.bottom - bottom;\n      currentSteps = distance / stepLength;\n    }\n    return currentSteps;\n  };\n\n  const onMouseMoveOrTouchMove = (event: DragChangeEvent, suppressEventCancelation?: boolean): void => {\n    const currentSteps = calculateCurrentSteps(event);\n    const newUnroundedValue = min + step * currentSteps;\n    const newCurrentValue = min + step * Math.round(currentSteps);\n    updateValue(event, newCurrentValue, newUnroundedValue);\n    if (!suppressEventCancelation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  const onMouseDownOrTouchStart = (event: React.MouseEvent | React.TouchEvent): void => {\n    if (ranged) {\n      const currentSteps = calculateCurrentSteps(event);\n      const newValue = min + step * currentSteps;\n\n      internalState.isAdjustingLowerValue =\n        newValue <= internalState.latestLowerValue ||\n        newValue - internalState.latestLowerValue <= internalState.latestValue - newValue;\n    }\n\n    if (event.type === 'mousedown') {\n      disposables.current.push(\n        on(window, 'mousemove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'mouseup', onMouseUpOrTouchEnd, true),\n      );\n    } else if (event.type === 'touchstart') {\n      disposables.current.push(\n        on(window, 'touchmove', onMouseMoveOrTouchMove as (ev: Event) => void, true),\n        on(window, 'touchend', onMouseUpOrTouchEnd, true),\n      );\n    }\n    onMouseMoveOrTouchMove(event, true);\n  };\n\n  const onMouseUpOrTouchEnd = (event: MouseEvent | TouchEvent): void => {\n    // Done adjusting, so clear this value\n    internalState.isBetweenSteps = undefined;\n\n    onChanged?.(\n      event,\n      internalState.latestValue,\n      ranged ? [internalState.latestLowerValue, internalState.latestValue] : undefined,\n    );\n    disposeListeners();\n  };\n\n  const onThumbFocus = (event: React.FocusEvent): void => {\n    internalState.isAdjustingLowerValue = event.target === lowerValueThumbRef.current;\n  };\n\n  const disposeListeners = React.useCallback((): void => {\n    disposables.current.forEach(dispose => dispose());\n    disposables.current = [];\n  }, []);\n\n  React.useEffect(() => disposeListeners, [disposeListeners]);\n\n  const lowerValueThumbRef = React.useRef<HTMLElement>(null);\n  const thumbRef = React.useRef<HTMLElement>(null);\n  const sliderBoxRef = React.useRef<HTMLDivElement>(null);\n  useComponentRef(props, sliderBoxRef, value, ranged ? [lowerValue, value] : undefined);\n  const getPositionStyles = getSlotStyleFn(vertical ? 'bottom' : getRTL(props.theme) ? 'right' : 'left');\n  const getTrackStyles = getSlotStyleFn(vertical ? 'height' : 'width');\n  const originValue = originFromZero ? 0 : min;\n  const valuePercent = getPercent(value, min, max);\n  const lowerValuePercent = getPercent(lowerValue, min, max);\n  const originPercentOfLine = getPercent(originValue, min, max);\n  const activeSectionWidth = ranged ? valuePercent - lowerValuePercent : Math.abs(originPercentOfLine - valuePercent);\n  const topSectionWidth = Math.min(100 - valuePercent, 100 - originPercentOfLine);\n  const bottomSectionWidth = ranged ? lowerValuePercent : Math.min(valuePercent, originPercentOfLine);\n\n  const rootProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    className: classNames.root,\n    ref,\n  };\n\n  const labelProps: ILabelProps = {\n    className: classNames.titleLabel,\n    children: label,\n    disabled,\n    htmlFor: ariaLabel ? undefined : id,\n  };\n\n  const valueLabelProps: ILabelProps | undefined = showValue\n    ? {\n        className: classNames.valueLabel,\n        children: valueFormat ? valueFormat(value) : value,\n        disabled,\n        htmlFor: disabled ? id : undefined,\n      }\n    : undefined;\n\n  const lowerValueLabelProps: ILabelProps | undefined =\n    ranged && showValue\n      ? {\n          className: classNames.valueLabel,\n          children: valueFormat ? valueFormat(lowerValue) : lowerValue,\n          disabled,\n        }\n      : undefined;\n\n  const zeroTickProps: React.HTMLAttributes<HTMLElement> | undefined = originFromZero\n    ? {\n        className: classNames.zeroTick,\n        style: getPositionStyles(originPercentOfLine),\n      }\n    : undefined;\n\n  const trackActiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.activeSection),\n    style: getTrackStyles(activeSectionWidth),\n  };\n\n  const trackTopInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(topSectionWidth),\n  };\n\n  const trackBottomInactiveProps: React.HTMLAttributes<HTMLElement> = {\n    className: css(classNames.lineContainer, classNames.inactiveSection),\n    style: getTrackStyles(bottomSectionWidth),\n  };\n\n  const sliderProps: React.HTMLAttributes<HTMLElement> = {\n    'aria-disabled': disabled,\n    role: 'slider',\n    tabIndex: disabled ? undefined : 0,\n    ...({ 'data-is-focusable': !disabled } as any),\n  };\n\n  const sliderBoxProps: React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLDivElement> = {\n    id,\n    className: css(classNames.slideBox, buttonProps.className),\n    ref: sliderBoxRef,\n    ...(!disabled && {\n      onMouseDown: onMouseDownOrTouchStart,\n      onTouchStart: onMouseDownOrTouchStart,\n      onKeyDown,\n    }),\n    ...(buttonProps &&\n      getNativeProps<React.HTMLAttributes<HTMLDivElement>>(buttonProps, divProperties, ['id', 'className'])),\n    ...(!ranged && {\n      ...sliderProps,\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': ariaLabel || label,\n      'aria-labelledby': ariaLabelledBy,\n    }),\n  };\n\n  const onFocusProp = disabled ? {} : { onFocus: onThumbFocus };\n\n  const thumbProps: React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> = {\n    ref: thumbRef,\n    className: classNames.thumb,\n    style: getPositionStyles(valuePercent),\n    ...(ranged && {\n      ...sliderProps,\n      ...onFocusProp,\n      id: `max-${id}`,\n      'aria-valuemin': lowerValue,\n      'aria-valuemax': max,\n      'aria-valuenow': value,\n      'aria-valuetext': getAriaValueText(value),\n      'aria-label': `max ${ariaLabel || label}`,\n    }),\n  };\n\n  const lowerValueThumbProps: (React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement>) | undefined =\n    ranged\n      ? {\n          ref: lowerValueThumbRef,\n          className: classNames.thumb,\n          style: getPositionStyles(lowerValuePercent),\n          ...sliderProps,\n          ...onFocusProp,\n          id: `min-${id}`,\n          'aria-valuemin': min,\n          'aria-valuemax': value,\n          'aria-valuenow': lowerValue,\n          'aria-valuetext': getAriaValueText(lowerValue),\n          'aria-label': `min ${ariaLabel || label}`,\n        }\n      : undefined;\n\n  const containerProps: React.HTMLAttributes<HTMLElement> = {\n    className: classNames.container,\n  };\n\n  const sliderLineProps: React.HTMLAttributes<HTMLDivElement> & React.RefAttributes<HTMLDivElement> = {\n    ref: sliderLine,\n    className: classNames.line,\n  };\n\n  return {\n    root: rootProps,\n    label: labelProps,\n    sliderBox: sliderBoxProps,\n    container: containerProps,\n    valueLabel: valueLabelProps,\n    lowerValueLabel: lowerValueLabelProps,\n    thumb: thumbProps,\n    lowerValueThumb: lowerValueThumbProps,\n    zeroTick: zeroTickProps,\n    activeTrack: trackActiveProps,\n    topInactiveTrack: trackTopInactiveProps,\n    bottomInactiveTrack: trackBottomInactiveProps,\n    sliderLine: sliderLineProps,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}