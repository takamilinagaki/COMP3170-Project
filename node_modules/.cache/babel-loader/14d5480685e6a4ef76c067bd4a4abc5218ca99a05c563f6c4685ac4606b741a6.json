{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { compareDatePart } from '../dateMath/dateMath';\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\nexport var getBoundedDateRange = function (dateRange, minDate, maxDate) {\n  var boundedDateRange = __spreadArray([], dateRange, true);\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter(function (date) {\n      return compareDatePart(date, minDate) >= 0;\n    });\n  }\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter(function (date) {\n      return compareDatePart(date, maxDate) <= 0;\n    });\n  }\n  return boundedDateRange;\n};","map":{"version":3,"names":["compareDatePart","getBoundedDateRange","dateRange","minDate","maxDate","boundedDateRange","__spreadArray","filter","date"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/date-time-utilities/lib/src/dateGrid/getBoundedDateRange.ts"],"sourcesContent":["import { compareDatePart } from '../dateMath/dateMath';\n\n/**\n * Generates a list of dates, bounded by min and max dates\n * @param dateRange - input date range\n * @param minDate - min date to limit the range\n * @param maxDate - max date to limit the range\n */\nexport const getBoundedDateRange = (dateRange: Date[], minDate?: Date, maxDate?: Date): Date[] => {\n  let boundedDateRange = [...dateRange];\n  if (minDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, minDate as Date) >= 0);\n  }\n  if (maxDate) {\n    boundedDateRange = boundedDateRange.filter((date: Date) => compareDatePart(date, maxDate as Date) <= 0);\n  }\n  return boundedDateRange;\n};\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,sBAAsB;AAEtD;;;;;;AAMA,OAAO,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,SAAiB,EAAEC,OAAc,EAAEC,OAAc;EACnF,IAAIC,gBAAgB,GAAAC,aAAA,KAAOJ,SAAS,OAAC;EACrC,IAAIC,OAAO,EAAE;IACXE,gBAAgB,GAAGA,gBAAgB,CAACE,MAAM,CAAC,UAACC,IAAU;MAAK,OAAAR,eAAe,CAACQ,IAAI,EAAEL,OAAe,CAAC,IAAI,CAAC;IAA3C,CAA2C,CAAC;;EAEzG,IAAIC,OAAO,EAAE;IACXC,gBAAgB,GAAGA,gBAAgB,CAACE,MAAM,CAAC,UAACC,IAAU;MAAK,OAAAR,eAAe,CAACQ,IAAI,EAAEJ,OAAe,CAAC,IAAI,CAAC;IAA3C,CAA2C,CAAC;;EAEzG,OAAOC,gBAAgB;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}