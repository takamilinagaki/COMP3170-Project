{"ast":null,"code":"import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties, scopeName) {\n  var forceUpdate = useForceUpdate();\n  var customizations = React.useContext(CustomizerContext).customizations;\n  var inCustomizerContext = customizations.inCustomizerContext;\n  React.useEffect(function () {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return function () {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\nfunction useForceUpdate() {\n  var _a = React.useState(0),\n    setValue = _a[1];\n  return function () {\n    return setValue(function (value) {\n      return ++value;\n    });\n  };\n}","map":{"version":3,"names":["React","Customizations","CustomizerContext","useCustomizationSettings","properties","scopeName","forceUpdate","useForceUpdate","customizations","useContext","inCustomizerContext","useEffect","observe","unobserve","getSettings","_a","useState","setValue","value"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/lib/src/customizations/useCustomizationSettings.ts"],"sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\nimport type { ISettings } from './Customizations';\n\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties: string[], scopeName?: string): ISettings {\n  const forceUpdate = useForceUpdate();\n  const { customizations } = React.useContext(CustomizerContext);\n  const { inCustomizerContext } = customizations;\n  React.useEffect(() => {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return () => {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\n\nfunction useForceUpdate() {\n  const [, setValue] = React.useState(0);\n  return () => setValue(value => ++value);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,iBAAiB,QAAQ,qBAAqB;AAGvD;;;;AAIA,OAAM,SAAUC,wBAAwBA,CAACC,UAAoB,EAAEC,SAAkB;EAC/E,IAAMC,WAAW,GAAGC,cAAc,EAAE;EAC5B,IAAAC,cAAc,GAAKR,KAAK,CAACS,UAAU,CAACP,iBAAiB,CAAC,CAAAM,cAAxC;EACd,IAAAE,mBAAmB,GAAKF,cAAc,CAAAE,mBAAnB;EAC3BV,KAAK,CAACW,SAAS,CAAC;IACd,IAAI,CAACD,mBAAmB,EAAE;MACxBT,cAAc,CAACW,OAAO,CAACN,WAAW,CAAC;;IAErC,OAAO;MACL,IAAI,CAACI,mBAAmB,EAAE;QACxBT,cAAc,CAACY,SAAS,CAACP,WAAW,CAAC;;IAEzC,CAAC;IACD;EACF,CAAC,EAAE,CAACI,mBAAmB,CAAC,CAAC;EAEzB,OAAOT,cAAc,CAACa,WAAW,CAACV,UAAU,EAAEC,SAAS,EAAEG,cAAc,CAAC;AAC1E;AAEA,SAASD,cAAcA,CAAA;EACf,IAAAQ,EAAA,GAAef,KAAK,CAACgB,QAAQ,CAAC,CAAC,CAAC;IAA7BC,QAAQ,GAAAF,EAAA,GAAqB;EACtC,OAAO;IAAM,OAAAE,QAAQ,CAAC,UAAAC,KAAK;MAAI,SAAEA,KAAK;IAAP,CAAO,CAAC;EAA1B,CAA0B;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}