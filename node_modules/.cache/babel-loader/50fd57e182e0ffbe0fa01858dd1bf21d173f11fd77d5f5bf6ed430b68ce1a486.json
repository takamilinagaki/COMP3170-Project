{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Label } from '../../Label';\nimport { classNamesFunction, find, FocusRectsContext, getNativeProps, divProperties, setFocusVisibility, useFocusRects } from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar getOptionId = function (option, id) {\n  return \"\".concat(id, \"-\").concat(option.key);\n};\nvar findOption = function (options, key) {\n  return key === undefined ? undefined : find(options, function (value) {\n    return value.key === key;\n  });\n};\nvar focusSelectedOption = function (options, keyChecked, id, focusProviders) {\n  var optionToFocus = findOption(options, keyChecked) || options.filter(function (option) {\n    return !option.disabled;\n  })[0];\n  var elementToFocus = optionToFocus && document.getElementById(getOptionId(optionToFocus, id));\n  if (elementToFocus) {\n    elementToFocus.focus();\n    setFocusVisibility(true, elementToFocus, focusProviders);\n  }\n};\nvar focusFromFocusTrapZone = function (evt) {\n  return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\nvar useComponentRef = function (options, keyChecked, id, componentRef, focusProviders) {\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      get checkedOption() {\n        return findOption(options, keyChecked);\n      },\n      focus: function () {\n        focusSelectedOption(options, keyChecked, id, focusProviders);\n      }\n    };\n  }, [options, keyChecked, id, focusProviders]);\n};\nvar COMPONENT_NAME = 'ChoiceGroup';\nexport var ChoiceGroupBase = React.forwardRef(function (props, forwardedRef) {\n  var className = props.className,\n    theme = props.theme,\n    styles = props.styles,\n    _a = props.options,\n    options = _a === void 0 ? [] : _a,\n    label = props.label,\n    required = props.required,\n    disabled = props.disabled,\n    name = props.name,\n    defaultSelectedKey = props.defaultSelectedKey,\n    componentRef = props.componentRef,\n    onChange = props.onChange;\n  var id = useId('ChoiceGroup');\n  var labelId = useId('ChoiceGroupLabel');\n  var divProps = getNativeProps(props, divProperties, ['onChange', 'className', 'required']);\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    optionsContainIconOrImage: options.some(function (option) {\n      return !!(option.iconProps || option.imageSrc);\n    })\n  });\n  var ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n  var _b = useControllableValue(props.selectedKey, defaultSelectedKey),\n    keyChecked = _b[0],\n    setKeyChecked = _b[1];\n  var _c = React.useState(),\n    keyFocused = _c[0],\n    setKeyFocused = _c[1];\n  var rootRef = React.useRef(null);\n  var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n  var focusContext = React.useContext(FocusRectsContext);\n  useDebugWarnings(props);\n  useComponentRef(options, keyChecked, id, componentRef, focusContext === null || focusContext === void 0 ? void 0 : focusContext.registeredProviders);\n  useFocusRects(rootRef);\n  var onFocus = React.useCallback(function (ev, option) {\n    var _a;\n    if (option) {\n      setKeyFocused(option.itemKey);\n      (_a = option.onFocus) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n    }\n  }, []);\n  var onBlur = React.useCallback(function (ev, option) {\n    var _a;\n    setKeyFocused(undefined);\n    (_a = option === null || option === void 0 ? void 0 : option.onBlur) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n  }, []);\n  var onOptionChange = React.useCallback(function (evt, option) {\n    var _a;\n    if (!option) {\n      return;\n    }\n    setKeyChecked(option.itemKey);\n    (_a = option.onChange) === null || _a === void 0 ? void 0 : _a.call(option, evt);\n    onChange === null || onChange === void 0 ? void 0 : onChange(evt, findOption(options, option.itemKey));\n  }, [onChange, options, setKeyChecked]);\n  var onRadioFocus = React.useCallback(function (evt) {\n    // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n    if (focusFromFocusTrapZone(evt)) {\n      focusSelectedOption(options, keyChecked, id, focusContext === null || focusContext === void 0 ? void 0 : focusContext.registeredProviders);\n    }\n  }, [options, keyChecked, id, focusContext]);\n  return React.createElement(\"div\", __assign({\n    className: classNames.root\n  }, divProps, {\n    ref: mergedRootRefs\n  }), React.createElement(\"div\", __assign({\n    role: \"radiogroup\"\n  }, ariaLabelledBy && {\n    'aria-labelledby': ariaLabelledBy\n  }, {\n    onFocus: onRadioFocus\n  }), label && React.createElement(Label, {\n    className: classNames.label,\n    required: required,\n    id: labelId,\n    disabled: disabled\n  }, label), React.createElement(\"div\", {\n    className: classNames.flexContainer\n  }, options.map(function (option) {\n    return React.createElement(ChoiceGroupOption, __assign({\n      itemKey: option.key\n    }, option, {\n      key: option.key,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onChange: onOptionChange,\n      focused: option.key === keyFocused,\n      checked: option.key === keyChecked,\n      disabled: option.disabled || disabled,\n      id: getOptionId(option, id),\n      labelId: option.labelId || \"\".concat(labelId, \"-\").concat(option.key),\n      name: name || id,\n      required: required\n    }));\n  }))));\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\nfunction useDebugWarnings(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      mutuallyExclusive: {\n        selectedKey: 'defaultSelectedKey'\n      }\n    });\n  }\n}","map":{"version":3,"names":["React","Label","classNamesFunction","find","FocusRectsContext","getNativeProps","divProperties","setFocusVisibility","useFocusRects","ChoiceGroupOption","useId","useControllableValue","useMergedRefs","useWarnings","getClassNames","getOptionId","option","id","concat","key","findOption","options","undefined","value","focusSelectedOption","keyChecked","focusProviders","optionToFocus","filter","disabled","elementToFocus","document","getElementById","focus","focusFromFocusTrapZone","evt","relatedTarget","HTMLElement","dataset","isFocusTrapZoneBumper","useComponentRef","componentRef","useImperativeHandle","checkedOption","COMPONENT_NAME","ChoiceGroupBase","forwardRef","props","forwardedRef","className","theme","styles","_a","label","required","name","defaultSelectedKey","onChange","labelId","divProps","classNames","optionsContainIconOrImage","some","iconProps","imageSrc","ariaLabelledBy","_b","selectedKey","setKeyChecked","_c","useState","keyFocused","setKeyFocused","rootRef","useRef","mergedRootRefs","focusContext","useContext","useDebugWarnings","registeredProviders","onFocus","useCallback","ev","itemKey","call","onBlur","onOptionChange","onRadioFocus","createElement","__assign","root","ref","role","flexContainer","map","focused","checked","displayName","process","env","NODE_ENV","mutuallyExclusive"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/ChoiceGroup/ChoiceGroup.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Label } from '../../Label';\nimport {\n  classNamesFunction,\n  find,\n  FocusRectsContext,\n  getNativeProps,\n  divProperties,\n  setFocusVisibility,\n  useFocusRects,\n} from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport type { IRefObject } from '../../Utilities';\nimport type {\n  IChoiceGroupOption,\n  IChoiceGroupProps,\n  IChoiceGroupStyleProps,\n  IChoiceGroupStyles,\n  IChoiceGroup,\n} from './ChoiceGroup.types';\nimport type { IChoiceGroupOptionProps } from './ChoiceGroupOption/ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupStyleProps, IChoiceGroupStyles>();\n\nconst getOptionId = (option: IChoiceGroupOption, id: string): string => {\n  return `${id}-${option.key}`;\n};\n\nconst findOption = (options: IChoiceGroupOption[], key: IChoiceGroupProps['selectedKey']) => {\n  return key === undefined ? undefined : find(options, value => value.key === key);\n};\n\nconst focusSelectedOption = (\n  options: IChoiceGroupOption[],\n  keyChecked: IChoiceGroupProps['selectedKey'],\n  id: string,\n  focusProviders?: React.RefObject<HTMLElement>[],\n) => {\n  const optionToFocus = findOption(options, keyChecked) || options.filter(option => !option.disabled)[0];\n  const elementToFocus = optionToFocus && document.getElementById(getOptionId(optionToFocus, id));\n\n  if (elementToFocus) {\n    elementToFocus.focus();\n    setFocusVisibility(true, elementToFocus as Element, focusProviders);\n  }\n};\n\nconst focusFromFocusTrapZone = (evt: React.FocusEvent<HTMLElement>): boolean => {\n  return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\n\nconst useComponentRef = (\n  options: IChoiceGroupOption[],\n  keyChecked: IChoiceGroupProps['selectedKey'],\n  id: string,\n  componentRef?: IRefObject<IChoiceGroup>,\n  focusProviders?: React.RefObject<HTMLElement>[],\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get checkedOption() {\n        return findOption(options, keyChecked);\n      },\n      focus() {\n        focusSelectedOption(options, keyChecked, id, focusProviders);\n      },\n    }),\n    [options, keyChecked, id, focusProviders],\n  );\n};\n\nconst COMPONENT_NAME = 'ChoiceGroup';\n\nexport const ChoiceGroupBase: React.FunctionComponent<IChoiceGroupProps> = React.forwardRef<\n  HTMLDivElement,\n  IChoiceGroupProps\n>((props, forwardedRef) => {\n  const {\n    className,\n    theme,\n    styles,\n    options = [],\n    label,\n    required,\n    disabled,\n    name,\n    defaultSelectedKey,\n    componentRef,\n    onChange,\n  } = props;\n  const id = useId('ChoiceGroup');\n  const labelId = useId('ChoiceGroupLabel');\n\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, [\n    'onChange',\n    'className',\n    'required',\n  ]);\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    optionsContainIconOrImage: options.some(option => !!(option.iconProps || option.imageSrc)),\n  });\n\n  const ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n\n  const [keyChecked, setKeyChecked] = useControllableValue(props.selectedKey, defaultSelectedKey);\n  const [keyFocused, setKeyFocused] = React.useState<string | number>();\n\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n\n  const focusContext = React.useContext(FocusRectsContext);\n\n  useDebugWarnings(props);\n  useComponentRef(options, keyChecked, id, componentRef, focusContext?.registeredProviders);\n  useFocusRects(rootRef);\n\n  const onFocus = React.useCallback((ev?: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    if (option) {\n      setKeyFocused(option.itemKey);\n      option.onFocus?.(ev);\n    }\n  }, []);\n\n  const onBlur = React.useCallback((ev: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    setKeyFocused(undefined);\n    option?.onBlur?.(ev);\n  }, []);\n\n  const onOptionChange = React.useCallback(\n    (evt?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOptionProps) => {\n      if (!option) {\n        return;\n      }\n      setKeyChecked(option.itemKey);\n\n      option.onChange?.(evt);\n      onChange?.(evt, findOption(options, option.itemKey));\n    },\n    [onChange, options, setKeyChecked],\n  );\n\n  const onRadioFocus = React.useCallback(\n    (evt: React.FocusEvent<HTMLElement>) => {\n      // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n      if (focusFromFocusTrapZone(evt)) {\n        focusSelectedOption(options, keyChecked, id, focusContext?.registeredProviders);\n      }\n    },\n    [options, keyChecked, id, focusContext],\n  );\n\n  return (\n    <div className={classNames.root} {...divProps} ref={mergedRootRefs}>\n      <div role=\"radiogroup\" {...(ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy })} onFocus={onRadioFocus}>\n        {label && (\n          <Label className={classNames.label} required={required} id={labelId} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.flexContainer}>\n          {options.map((option: IChoiceGroupOption) => {\n            return (\n              <ChoiceGroupOption\n                itemKey={option.key}\n                {...option}\n                key={option.key}\n                onBlur={onBlur}\n                onFocus={onFocus}\n                onChange={onOptionChange}\n                focused={option.key === keyFocused}\n                checked={option.key === keyChecked}\n                disabled={option.disabled || disabled}\n                id={getOptionId(option, id)}\n                labelId={option.labelId || `${labelId}-${option.key}`}\n                name={name || id}\n                required={required}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarnings(props: IChoiceGroupProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      mutuallyExclusive: {\n        selectedKey: 'defaultSelectedKey',\n      },\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}