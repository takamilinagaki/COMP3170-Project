{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar getClassNames = classNamesFunction();\nvar CELL_COUNT = 12;\nvar CELLS_PER_ROW = 4;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\nvar CalendarYearGridCell = function (props) {\n  var _a;\n  var _b;\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    highlightCurrentYear = props.highlightCurrentYear,\n    highlightSelectedYear = props.highlightSelectedYear,\n    year = props.year,\n    selected = props.selected,\n    disabled = props.disabled,\n    componentRef = props.componentRef,\n    onSelectYear = props.onSelectYear,\n    onRenderYear = props.onRenderYear;\n  var buttonRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n        (_b = (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n  var onClick = function () {\n    onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n  };\n  var onKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n    }\n  };\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear\n  });\n  return React.createElement(\"button\", {\n    className: css(classNames.itemButton, (_a = {}, _a[classNames.selected] = selected, _a[classNames.disabled] = disabled, _a)),\n    type: \"button\",\n    role: \"gridcell\",\n    onClick: !disabled ? onClick : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    disabled: disabled,\n    \"aria-selected\": selected,\n    ref: buttonRef\n  }, (_b = onRenderYear === null || onRenderYear === void 0 ? void 0 : onRenderYear(year)) !== null && _b !== void 0 ? _b : year);\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\nvar CalendarYearGrid = function (props) {\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    fromYear = props.fromYear,\n    toYear = props.toYear,\n    animationDirection = props.animationDirection,\n    animateBackwards = props.animateBackwards,\n    minYear = props.minYear,\n    maxYear = props.maxYear,\n    onSelectYear = props.onSelectYear,\n    selectedYear = props.selectedYear,\n    componentRef = props.componentRef;\n  var selectedCellRef = React.useRef(null);\n  var currentCellRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n        (_b = (_a = selectedCellRef.current || currentCellRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n  var renderCell = function (yearToRender) {\n    var selected = yearToRender === selectedYear;\n    var disabled = minYear !== undefined && yearToRender < minYear || maxYear !== undefined && yearToRender > maxYear;\n    var current = yearToRender === new Date().getFullYear();\n    return React.createElement(CalendarYearGridCell, __assign({}, props, {\n      key: yearToRender,\n      year: yearToRender,\n      selected: selected,\n      current: current,\n      disabled: disabled,\n      onSelectYear: onSelectYear,\n      componentRef: selected ? selectedCellRef : current ? currentCellRef : undefined,\n      theme: theme\n    }));\n  };\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  var onRenderYear = function (value) {\n    var _a, _b;\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, value)) !== null && _b !== void 0 ? _b : value;\n  };\n  var gridAriaLabel = \"\".concat(onRenderYear(fromYear), \" - \").concat(onRenderYear(toYear));\n  var year = fromYear;\n  var cells = [];\n  for (var i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n    for (var j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n  return React.createElement(FocusZone, null, React.createElement(\"div\", {\n    className: classNames.gridContainer,\n    role: \"grid\",\n    \"aria-label\": gridAriaLabel\n  }, cells.map(function (cellRow, index) {\n    return React.createElement.apply(React, __spreadArray([\"div\", {\n      key: 'yearPickerRow_' + index + '_' + fromYear,\n      role: \"row\",\n      className: classNames.buttonRow\n    }], cellRow, false));\n  })));\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\nvar CalendarYearNavDirection;\n(function (CalendarYearNavDirection) {\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Previous\"] = 0] = \"Previous\";\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Next\"] = 1] = \"Next\";\n})(CalendarYearNavDirection || (CalendarYearNavDirection = {}));\nvar CalendarYearNavArrow = function (props) {\n  var _a;\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    _b = props.navigationIcons,\n    navigationIcons = _b === void 0 ? defaultCalendarNavigationIcons : _b,\n    _c = props.strings,\n    strings = _c === void 0 ? DefaultCalendarYearStrings : _c,\n    direction = props.direction,\n    onSelectPrev = props.onSelectPrev,\n    onSelectNext = props.onSelectNext,\n    fromYear = props.fromYear,\n    toYear = props.toYear,\n    maxYear = props.maxYear,\n    minYear = props.minYear;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  var ariaLabel = direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  var newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  var newRange = {\n    fromYear: fromYear + newRangeOffset,\n    toYear: toYear + newRangeOffset\n  };\n  var ariaLabelString = ariaLabel ? typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange) : undefined;\n  var disabled = direction === CalendarYearNavDirection.Previous ? minYear !== undefined && fromYear < minYear : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n  var onNavigate = function () {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev === null || onSelectPrev === void 0 ? void 0 : onSelectPrev() : onSelectNext === null || onSelectNext === void 0 ? void 0 : onSelectNext();\n  };\n  var onKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  };\n  // can be condensed, but leaving verbose for clarity due to regressions\n  var isLeftNavigation = getRTL() ? direction === CalendarYearNavDirection.Next : direction === CalendarYearNavDirection.Previous;\n  return React.createElement(\"button\", {\n    className: css(classNames.navigationButton, (_a = {}, _a[classNames.disabled] = disabled, _a)),\n    onClick: !disabled ? onNavigate : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    type: \"button\",\n    title: ariaLabelString,\n    disabled: disabled\n  }, React.createElement(Icon, {\n    iconName: isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation\n  }));\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\nvar CalendarYearNav = function (props) {\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.navigationButtonsContainer\n  }, React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: CalendarYearNavDirection.Previous\n  })), React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: CalendarYearNavDirection.Next\n  })));\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\nvar CalendarYearTitle = function (props) {\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    fromYear = props.fromYear,\n    toYear = props.toYear,\n    _a = props.strings,\n    strings = _a === void 0 ? DefaultCalendarYearStrings : _a,\n    animateBackwards = props.animateBackwards,\n    animationDirection = props.animationDirection;\n  var onHeaderSelect = function () {\n    var _a;\n    (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props, true);\n  };\n  var onHeaderKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n  var onRenderYear = function (year) {\n    var _a, _b;\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, year)) !== null && _b !== void 0 ? _b : year;\n  };\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  if (props.onHeaderSelect) {\n    var rangeAriaLabel = strings.rangeAriaLabel;\n    var headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(props) : undefined;\n    var ariaLabel = headerAriaLabelFormatString ? format(headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n    return React.createElement(\"button\", {\n      className: classNames.currentItemButton,\n      onClick: onHeaderSelect,\n      onKeyDown: onHeaderKeyDown,\n      \"aria-label\": ariaLabel,\n      role: \"button\",\n      type: \"button\"\n    }, React.createElement(\"span\", {\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\"\n    }, onRenderYear(fromYear), \" - \", onRenderYear(toYear)));\n  }\n  return React.createElement(\"div\", {\n    className: classNames.current\n  }, onRenderYear(fromYear), \" - \", onRenderYear(toYear));\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\nvar CalendarYearHeader = function (props) {\n  var _a;\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className,\n    animateBackwards = props.animateBackwards,\n    animationDirection = props.animationDirection,\n    onRenderTitle = props.onRenderTitle;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  return React.createElement(\"div\", {\n    className: classNames.headerContainer\n  }, (_a = onRenderTitle === null || onRenderTitle === void 0 ? void 0 : onRenderTitle(props)) !== null && _a !== void 0 ? _a : React.createElement(CalendarYearTitle, __assign({}, props)), React.createElement(CalendarYearNav, __assign({}, props)));\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\nfunction useAnimateBackwards(_a) {\n  var selectedYear = _a.selectedYear,\n    navigatedYear = _a.navigatedYear;\n  var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  var fromYear = Math.floor(rangeYear / 10) * 10;\n  var previousFromYear = usePrevious(fromYear);\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction useYearRangeState(_a) {\n  var selectedYear = _a.selectedYear,\n    navigatedYear = _a.navigatedYear;\n  var rangeYear = React.useMemo(function () {\n    return selectedYear || navigatedYear || Math.floor(new Date().getFullYear() / 10) * 10;\n  }, [navigatedYear, selectedYear]);\n  var _b = React.useState(rangeYear),\n    fromYear = _b[0],\n    setFromYear = _b[1];\n  var onNavNext = function () {\n    setFromYear(function (year) {\n      return year + CELL_COUNT;\n    });\n  };\n  var onNavPrevious = function () {\n    setFromYear(function (year) {\n      return year - CELL_COUNT;\n    });\n  };\n  React.useEffect(function () {\n    setFromYear(rangeYear);\n  }, [rangeYear]);\n  var toYear = fromYear + CELL_COUNT - 1;\n  return [fromYear, toYear, onNavNext, onNavPrevious];\n}\nexport var CalendarYearBase = function (props) {\n  var animateBackwards = useAnimateBackwards(props);\n  var _a = useYearRangeState(props),\n    fromYear = _a[0],\n    toYear = _a[1],\n    onNavNext = _a[2],\n    onNavPrevious = _a[3];\n  var gridRef = React.useRef(null);\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: function () {\n        var _a, _b;\n        (_b = (_a = gridRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  });\n  var styles = props.styles,\n    theme = props.theme,\n    className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(CalendarYearHeader, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    onSelectPrev: onNavPrevious,\n    onSelectNext: onNavNext,\n    animateBackwards: animateBackwards\n  })), React.createElement(CalendarYearGrid, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    animateBackwards: animateBackwards,\n    componentRef: gridRef\n  })));\n};\nCalendarYearBase.displayName = 'CalendarYearBase';","map":{"version":3,"names":["React","KeyCodes","getRTL","classNamesFunction","css","format","FocusZone","Icon","usePrevious","defaultCalendarNavigationIcons","getClassNames","CELL_COUNT","CELLS_PER_ROW","DefaultCalendarYearStrings","prevRangeAriaLabel","undefined","nextRangeAriaLabel","CalendarYearGridCell","props","styles","theme","className","highlightCurrentYear","highlightSelectedYear","year","selected","disabled","componentRef","onSelectYear","onRenderYear","buttonRef","useRef","useImperativeHandle","focus","_b","_a","current","call","onClick","onKeyDown","ev","which","enter","classNames","highlightCurrent","highlightSelected","createElement","itemButton","type","role","ref","displayName","CalendarYearGrid","fromYear","toYear","animationDirection","animateBackwards","minYear","maxYear","selectedYear","selectedCellRef","currentCellRef","renderCell","yearToRender","Date","getFullYear","__assign","key","value","gridAriaLabel","concat","cells","i","push","j","gridContainer","map","cellRow","index","apply","__spreadArray","buttonRow","CalendarYearNavDirection","CalendarYearNavArrow","navigationIcons","_c","strings","direction","onSelectPrev","onSelectNext","ariaLabel","Previous","newRangeOffset","newRange","ariaLabelString","onNavigate","isLeftNavigation","Next","navigationButton","title","iconName","leftNavigation","rightNavigation","CalendarYearNav","navigationButtonsContainer","CalendarYearTitle","onHeaderSelect","onHeaderKeyDown","space","hasHeaderClickCallback","rangeAriaLabel","headerAriaLabelFormatString","currentDateRange","currentItemButton","CalendarYearHeader","onRenderTitle","headerContainer","useAnimateBackwards","navigatedYear","rangeYear","Math","floor","previousFromYear","useYearRangeState","useMemo","useState","setFromYear","onNavNext","onNavPrevious","useEffect","CalendarYearBase","gridRef","root"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Calendar/src/components/Calendar/CalendarYear/CalendarYear.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nimport type {\n  ICalendarYearStrings,\n  ICalendarYearProps,\n  ICalendarYearRange,\n  ICalendarYearHeaderProps,\n  ICalendarYearStyleProps,\n  ICalendarYearStyles,\n} from './CalendarYear.types';\nimport type { IRefObject } from '../../../Utilities';\n\nconst getClassNames = classNamesFunction<ICalendarYearStyleProps, ICalendarYearStyles>();\n\nconst CELL_COUNT = 12;\nconst CELLS_PER_ROW = 4;\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps extends ICalendarYearProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n  animateBackwards?: boolean;\n  componentRef?: IRefObject<ICalendarYearGridCell>;\n}\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\nconst CalendarYearGridCell: React.FunctionComponent<ICalendarYearGridCellProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    highlightCurrentYear,\n    highlightSelectedYear,\n    year,\n    selected,\n    disabled,\n    componentRef,\n    onSelectYear,\n    onRenderYear,\n  } = props;\n\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        buttonRef.current?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const onClick = () => {\n    onSelectYear?.(year);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear?.(year);\n    }\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear,\n  });\n\n  return (\n    <button\n      className={css(classNames.itemButton, {\n        [classNames.selected]: selected,\n        [classNames.disabled]: disabled,\n      })}\n      type=\"button\"\n      role=\"gridcell\"\n      onClick={!disabled ? onClick : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      disabled={disabled}\n      aria-selected={selected}\n      ref={buttonRef}\n    >\n      {onRenderYear?.(year) ?? year}\n    </button>\n  );\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nconst CalendarYearGrid: React.FunctionComponent<ICalendarYearGridProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    animationDirection,\n    animateBackwards,\n    minYear,\n    maxYear,\n    onSelectYear,\n    selectedYear,\n    componentRef,\n  } = props;\n\n  const selectedCellRef = React.useRef<ICalendarYearGridCell>(null);\n  const currentCellRef = React.useRef<ICalendarYearGridCell>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        (selectedCellRef.current || currentCellRef.current)?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const renderCell = (yearToRender: number): React.ReactNode => {\n    const selected = yearToRender === selectedYear;\n    const disabled =\n      (minYear !== undefined && yearToRender < minYear) || (maxYear !== undefined && yearToRender > maxYear);\n    const current = yearToRender === new Date().getFullYear();\n\n    return (\n      <CalendarYearGridCell\n        {...props}\n        key={yearToRender}\n        year={yearToRender}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        componentRef={selected ? selectedCellRef : current ? currentCellRef : undefined}\n        theme={theme}\n      />\n    );\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    animateBackwards,\n    animationDirection,\n  });\n\n  const onRenderYear = (value: number) => {\n    return props.onRenderYear?.(value) ?? value;\n  };\n\n  const gridAriaLabel = `${onRenderYear(fromYear)} - ${onRenderYear(toYear)}`;\n\n  let year = fromYear;\n  const cells: React.ReactNode[][] = [];\n\n  for (let i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n    for (let j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  return (\n    <FocusZone>\n      <div className={classNames.gridContainer} role=\"grid\" aria-label={gridAriaLabel}>\n        {cells.map((cellRow: React.ReactNode[], index: number) => {\n          return (\n            <div key={'yearPickerRow_' + index + '_' + fromYear} role=\"row\" className={classNames.buttonRow}>\n              {...cellRow}\n            </div>\n          );\n        })}\n      </div>\n    </FocusZone>\n  );\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\n\nconst enum CalendarYearNavDirection {\n  Previous,\n  Next,\n}\n\ninterface ICalendarYearNavArrowProps extends ICalendarYearHeaderProps {\n  direction: CalendarYearNavDirection;\n}\n\nconst CalendarYearNavArrow: React.FunctionComponent<ICalendarYearNavArrowProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    navigationIcons = defaultCalendarNavigationIcons,\n    strings = DefaultCalendarYearStrings,\n    direction,\n    onSelectPrev,\n    onSelectNext,\n    fromYear,\n    toYear,\n    maxYear,\n    minYear,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n  });\n\n  const ariaLabel =\n    direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  const newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  const newRange = { fromYear: fromYear + newRangeOffset, toYear: toYear + newRangeOffset };\n  const ariaLabelString = ariaLabel ? (typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange)) : undefined;\n  const disabled =\n    direction === CalendarYearNavDirection.Previous\n      ? minYear !== undefined && fromYear < minYear\n      : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  const onNavigate = () => {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev?.() : onSelectNext?.();\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  };\n\n  // can be condensed, but leaving verbose for clarity due to regressions\n  const isLeftNavigation = getRTL()\n    ? direction === CalendarYearNavDirection.Next\n    : direction === CalendarYearNavDirection.Previous;\n\n  return (\n    <button\n      className={css(classNames.navigationButton, {\n        [classNames.disabled]: disabled,\n      })}\n      onClick={!disabled ? onNavigate : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      type=\"button\"\n      title={ariaLabelString}\n      disabled={disabled}\n    >\n      <Icon iconName={isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation} />\n    </button>\n  );\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nconst CalendarYearNav: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n  });\n\n  return (\n    <div className={classNames.navigationButtonsContainer}>\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Previous} />\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Next} />\n    </div>\n  );\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nconst CalendarYearTitle: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    strings = DefaultCalendarYearStrings,\n    animateBackwards,\n    animationDirection,\n  } = props;\n\n  const onHeaderSelect = () => {\n    props.onHeaderSelect?.(true);\n  };\n\n  const onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n\n  const onRenderYear = (year: number) => {\n    return props.onRenderYear?.(year) ?? year;\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards,\n    animationDirection,\n  });\n\n  if (props.onHeaderSelect) {\n    const rangeAriaLabel = strings.rangeAriaLabel;\n    const headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    const currentDateRange = rangeAriaLabel\n      ? typeof rangeAriaLabel === 'string'\n        ? rangeAriaLabel\n        : rangeAriaLabel(props)\n      : undefined;\n\n    const ariaLabel = headerAriaLabelFormatString\n      ? format(headerAriaLabelFormatString, currentDateRange)\n      : currentDateRange;\n\n    return (\n      <button\n        className={classNames.currentItemButton}\n        onClick={onHeaderSelect}\n        onKeyDown={onHeaderKeyDown}\n        aria-label={ariaLabel}\n        role=\"button\"\n        type=\"button\"\n      >\n        <span aria-live=\"assertive\" aria-atomic=\"true\">\n          {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <div className={classNames.current}>\n      {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n    </div>\n  );\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nconst CalendarYearHeader: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className, animateBackwards, animationDirection, onRenderTitle } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards,\n    animationDirection,\n  });\n\n  return (\n    <div className={classNames.headerContainer}>\n      {onRenderTitle?.(props) ?? <CalendarYearTitle {...props} />}\n      <CalendarYearNav {...props} />\n    </div>\n  );\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  const fromYear = Math.floor(rangeYear / 10) * 10;\n\n  const previousFromYear = usePrevious(fromYear);\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction useYearRangeState({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const rangeYear = React.useMemo(() => {\n    return selectedYear || navigatedYear || Math.floor(new Date().getFullYear() / 10) * 10;\n  }, [navigatedYear, selectedYear]);\n\n  const [fromYear, setFromYear] = React.useState<number>(rangeYear);\n\n  const onNavNext = () => {\n    setFromYear(year => year + CELL_COUNT);\n  };\n\n  const onNavPrevious = () => {\n    setFromYear(year => year - CELL_COUNT);\n  };\n\n  React.useEffect(() => {\n    setFromYear(rangeYear);\n  }, [rangeYear]);\n\n  const toYear = fromYear + CELL_COUNT - 1;\n\n  return [fromYear, toYear, onNavNext, onNavPrevious] as const;\n}\n\nexport const CalendarYearBase: React.FunctionComponent<ICalendarYearProps> = props => {\n  const animateBackwards = useAnimateBackwards(props);\n  const [fromYear, toYear, onNavNext, onNavPrevious] = useYearRangeState(props);\n\n  const gridRef = React.useRef<ICalendarYearGrid>(null);\n\n  React.useImperativeHandle(props.componentRef, () => ({\n    focus() {\n      gridRef.current?.focus?.();\n    },\n  }));\n\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n  });\n\n  return (\n    <div className={classNames.root}>\n      <CalendarYearHeader\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        onSelectPrev={onNavPrevious}\n        onSelectNext={onNavNext}\n        animateBackwards={animateBackwards}\n      />\n      <CalendarYearGrid\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        animateBackwards={animateBackwards}\n        componentRef={gridRef}\n      />\n    </div>\n  );\n};\nCalendarYearBase.displayName = 'CalendarYearBase';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}