{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\nvar styles = stylesImport;\nexport var SuggestionItemType;\n(function (SuggestionItemType) {\n  SuggestionItemType[SuggestionItemType[\"header\"] = 0] = \"header\";\n  SuggestionItemType[SuggestionItemType[\"suggestion\"] = 1] = \"suggestion\";\n  SuggestionItemType[SuggestionItemType[\"footer\"] = 2] = \"footer\";\n})(SuggestionItemType || (SuggestionItemType = {}));\nvar SuggestionsHeaderFooterItem = /** @class */function (_super) {\n  __extends(SuggestionsHeaderFooterItem, _super);\n  function SuggestionsHeaderFooterItem(props) {\n    var _this = _super.call(this, props) || this;\n    initializeComponentRef(_this);\n    return _this;\n  }\n  SuggestionsHeaderFooterItem.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      renderItem = _b.renderItem,\n      onExecute = _b.onExecute,\n      isSelected = _b.isSelected,\n      id = _b.id,\n      className = _b.className;\n    return onExecute ? React.createElement(\"div\", {\n      id: id,\n      onClick: onExecute,\n      className: css('ms-Suggestions-sectionButton', className, styles.actionButton, (_a = {}, _a['is-selected ' + styles.buttonSelected] = isSelected, _a))\n    }, renderItem()) : React.createElement(\"div\", {\n      id: id,\n      className: css('ms-Suggestions-section', className, styles.suggestionsTitle)\n    }, renderItem());\n  };\n  return SuggestionsHeaderFooterItem;\n}(React.Component);\nexport { SuggestionsHeaderFooterItem };\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\nvar SuggestionsControl = /** @class */function (_super) {\n  __extends(SuggestionsControl, _super);\n  function SuggestionsControl(suggestionsProps) {\n    var _this = _super.call(this, suggestionsProps) || this;\n    _this._selectedElement = React.createRef();\n    _this._suggestions = React.createRef();\n    _this.SuggestionsOfProperType = SuggestionsCore;\n    initializeComponentRef(_this);\n    _this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions\n    };\n    return _this;\n  }\n  SuggestionsControl.prototype.componentDidMount = function () {\n    this.resetSelectedItem();\n  };\n  SuggestionsControl.prototype.componentDidUpdate = function (oldProps) {\n    var _this = this;\n    this.scrollSelected();\n    if (oldProps.suggestions && oldProps.suggestions !== this.props.suggestions) {\n      this.setState({\n        suggestions: this.props.suggestions\n      }, function () {\n        _this.resetSelectedItem();\n      });\n    }\n  };\n  SuggestionsControl.prototype.componentWillUnmount = function () {\n    var _a;\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions();\n  };\n  SuggestionsControl.prototype.render = function () {\n    var _a = this.props,\n      className = _a.className,\n      headerItemsProps = _a.headerItemsProps,\n      footerItemsProps = _a.footerItemsProps,\n      suggestionsAvailableAlertText = _a.suggestionsAvailableAlertText;\n    var screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    var shouldAlertSuggestionsAvailableText = this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n    return React.createElement(\"div\", {\n      className: css('ms-Suggestions', className ? className : '', styles.root)\n    }, headerItemsProps && this.renderHeaderItems(), this._renderSuggestions(), footerItemsProps && this.renderFooterItems(), shouldAlertSuggestionsAvailableText ? React.createElement(\"span\", {\n      role: \"alert\",\n      \"aria-live\": \"polite\",\n      className: screenReaderTextStyles\n    }, suggestionsAvailableAlertText) : null);\n  };\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestion\", {\n    get: function () {\n      var _a;\n      return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.getCurrentItem()) || undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestionIndex\", {\n    get: function () {\n      return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"selectedElement\", {\n    get: function () {\n      var _a;\n      return this._selectedElement.current ? this._selectedElement.current : (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.selectedElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SuggestionsControl.prototype.hasSuggestionSelected = function () {\n    var _a;\n    return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) || false;\n  };\n  SuggestionsControl.prototype.hasSelection = function () {\n    var _a = this.state,\n      selectedHeaderIndex = _a.selectedHeaderIndex,\n      selectedFooterIndex = _a.selectedFooterIndex;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  };\n  SuggestionsControl.prototype.executeSelectedAction = function () {\n    var _a;\n    var _b = this.props,\n      headerItemsProps = _b.headerItemsProps,\n      footerItemsProps = _b.footerItemsProps;\n    var _c = this.state,\n      selectedHeaderIndex = _c.selectedHeaderIndex,\n      selectedFooterIndex = _c.selectedFooterIndex;\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      var selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      var selectedFooterItem = footerItemsProps[selectedFooterIndex];\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  };\n  SuggestionsControl.prototype.removeSuggestion = function (index) {\n    var _a, _b;\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.removeSuggestion(index ? index : (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.currentIndex);\n  };\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n  SuggestionsControl.prototype.handleKeyDown = function (keyCode) {\n    var _a, _b, _c, _d;\n    var _e = this.state,\n      selectedHeaderIndex = _e.selectedHeaderIndex,\n      selectedFooterIndex = _e.selectedFooterIndex;\n    var isKeyDownHandled = false;\n    if (keyCode === KeyCodes.down) {\n      if (selectedHeaderIndex === -1 && !((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (selectedHeaderIndex === -1 && !((_c = this._suggestions.current) === null || _c === void 0 ? void 0 : _c.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_d = this._suggestions.current) === null || _d === void 0 ? void 0 : _d.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n    return isKeyDownHandled;\n  };\n  // TODO get the element to scroll into view properly regardless of direction.\n  SuggestionsControl.prototype.scrollSelected = function () {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  };\n  SuggestionsControl.prototype.renderHeaderItems = function () {\n    var _this = this;\n    var _a = this.props,\n      headerItemsProps = _a.headerItemsProps,\n      suggestionsHeaderContainerAriaLabel = _a.suggestionsHeaderContainerAriaLabel;\n    var selectedHeaderIndex = this.state.selectedHeaderIndex;\n    return headerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-headerContainer', styles.suggestionsContainer),\n      id: \"suggestionHeader-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsHeaderContainerAriaLabel\n    }, headerItemsProps.map(function (headerItemProps, index) {\n      var isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n      return headerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-header' + index,\n        key: 'sug-header' + index,\n        role: \"listitem\",\n        \"aria-label\": headerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-header-item' + index,\n        isSelected: isSelected,\n        renderItem: headerItemProps.renderItem,\n        onExecute: headerItemProps.onExecute,\n        className: headerItemProps.className\n      })) : null;\n    })) : null;\n  };\n  SuggestionsControl.prototype.renderFooterItems = function () {\n    var _this = this;\n    var _a = this.props,\n      footerItemsProps = _a.footerItemsProps,\n      suggestionsFooterContainerAriaLabel = _a.suggestionsFooterContainerAriaLabel;\n    var selectedFooterIndex = this.state.selectedFooterIndex;\n    return footerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-footerContainer', styles.suggestionsContainer),\n      id: \"suggestionFooter-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsFooterContainerAriaLabel\n    }, footerItemsProps.map(function (footerItemProps, index) {\n      var isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n      return footerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-footer' + index,\n        key: 'sug-footer' + index,\n        role: \"listitem\",\n        \"aria-label\": footerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-footer-item' + index,\n        isSelected: isSelected,\n        renderItem: footerItemProps.renderItem,\n        onExecute: footerItemProps.onExecute,\n        className: footerItemProps.className\n      })) : null;\n    })) : null;\n  };\n  SuggestionsControl.prototype._renderSuggestions = function () {\n    var TypedSuggestions = this.SuggestionsOfProperType;\n    return React.createElement(TypedSuggestions, __assign({\n      ref: this._suggestions\n    }, this.props, {\n      suggestions: this.state.suggestions\n    }));\n  };\n  /**\n   * Selects the next selectable item\n   */\n  SuggestionsControl.prototype.selectNextItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n      return;\n    }\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n    // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n    var selectionChanged = this._selectNextItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined);\n    // If the selection did not change, try to select from the next suggestion type group\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Selects the previous selectable item\n   */\n  SuggestionsControl.prototype.selectPreviousItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n      return;\n    }\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n    // Try to set the selection to the previous selectable item, of the same suggestion item type group\n    var selectionChanged = this._selectPreviousItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined);\n    // If the selection did not change, try to select from the previous suggestion type group\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n  SuggestionsControl.prototype.resetSelectedItem = function () {\n    var _a;\n    this.setState({\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1\n    });\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions();\n    // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  };\n  /**\n   * Selects the first item\n   */\n  SuggestionsControl.prototype.selectFirstItem = function () {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  };\n  /**\n   * Selects the last item\n   */\n  SuggestionsControl.prototype.selectLastItem = function () {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  };\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n  SuggestionsControl.prototype._selectNextItemOfItemType = function (itemType, currentIndex) {\n    var _a, _b;\n    if (currentIndex === void 0) {\n      currentIndex = -1;\n    }\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(currentIndex + 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (var i = currentIndex + 1; i < itemProps.length; i++) {\n          var item = itemProps[i];\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({\n              selectedHeaderIndex: isHeader ? i : -1\n            });\n            this.setState({\n              selectedFooterIndex: isHeader ? -1 : i\n            });\n            (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  };\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n  SuggestionsControl.prototype._selectPreviousItemOfItemType = function (itemType, currentIndex) {\n    var _a, _b;\n    if (itemType === SuggestionItemType.suggestion) {\n      var index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n      if (index > 0) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(index - 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps) {\n        var index = currentIndex !== undefined ? currentIndex : itemProps.length;\n        if (index > 0) {\n          for (var i = index - 1; i >= 0; i--) {\n            var item = itemProps[i];\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({\n                selectedHeaderIndex: isHeader ? i : -1\n              });\n              this.setState({\n                selectedFooterIndex: isHeader ? -1 : i\n              });\n              (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n  SuggestionsControl.prototype._getCurrentIndexForType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current.currentIndex;\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  };\n  SuggestionsControl.prototype._getNextItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  };\n  SuggestionsControl.prototype._getPreviousItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  };\n  return SuggestionsControl;\n}(React.Component);\nexport { SuggestionsControl };","map":{"version":3,"names":["React","css","KeyCodes","initializeComponentRef","SuggestionsCore","stylesImport","hiddenContentStyle","mergeStyles","styles","SuggestionItemType","SuggestionsHeaderFooterItem","_super","__extends","props","_this","call","prototype","render","_b","renderItem","onExecute","isSelected","id","className","createElement","onClick","actionButton","_a","buttonSelected","suggestionsTitle","Component","SuggestionsControl","suggestionsProps","_selectedElement","createRef","_suggestions","SuggestionsOfProperType","state","selectedHeaderIndex","selectedFooterIndex","suggestions","componentDidMount","resetSelectedItem","componentDidUpdate","oldProps","scrollSelected","setState","componentWillUnmount","current","deselectAllSuggestions","headerItemsProps","footerItemsProps","suggestionsAvailableAlertText","screenReaderTextStyles","shouldAlertSuggestionsAvailableText","length","root","renderHeaderItems","_renderSuggestions","renderFooterItems","role","Object","defineProperty","get","getCurrentItem","undefined","currentIndex","selectedElement","hasSuggestionSelected","hasSelection","executeSelectedAction","_c","selectedHeaderItem","completeSuggestion","selectedFooterItem","removeSuggestion","index","handleKeyDown","keyCode","_e","isKeyDownHandled","down","selectFirstItem","selectNextItem","header","suggestion","footer","up","selectLastItem","selectPreviousItem","_d","enter","tab","scrollIntoView","suggestionsHeaderContainerAriaLabel","suggestionsContainer","map","headerItemProps","shouldShow","ref","key","ariaLabel","suggestionsFooterContainerAriaLabel","footerItemProps","TypedSuggestions","__assign","itemType","originalItemType","_selectNextItemOfItemType","startedItemType","selectionChanged","_getCurrentIndexForType","_getNextItemSectionType","_selectPreviousItemOfItemType","_getPreviousItemSectionType","shouldSelectFirstItem","setSelectedSuggestion","isHeader","itemProps","i","item"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/FloatingPicker/src/components/FloatingPicker/Suggestions/SuggestionsControl.tsx"],"sourcesContent":["import * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\nimport type { IButton } from '../../../Button';\nimport type { ISuggestionModel } from '../../../Pickers';\nimport type {\n  ISuggestionsHeaderFooterItemProps,\n  ISuggestionsControlProps,\n  ISuggestionsCoreProps,\n  ISuggestionsHeaderFooterProps,\n} from './Suggestions.types';\n\nconst styles: any = stylesImport;\n\nexport enum SuggestionItemType {\n  header,\n  suggestion,\n  footer,\n}\n\nexport interface ISuggestionsControlState<T> {\n  selectedHeaderIndex: number;\n  selectedFooterIndex: number;\n  suggestions: ISuggestionModel<T>[];\n}\n\nexport class SuggestionsHeaderFooterItem extends React.Component<ISuggestionsHeaderFooterItemProps, {}> {\n  constructor(props: ISuggestionsHeaderFooterItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { renderItem, onExecute, isSelected, id, className } = this.props;\n    return onExecute ? (\n      <div\n        id={id}\n        onClick={onExecute}\n        className={css('ms-Suggestions-sectionButton', className, styles.actionButton, {\n          ['is-selected ' + styles.buttonSelected]: isSelected,\n        })}\n      >\n        {renderItem()}\n      </div>\n    ) : (\n      <div id={id} className={css('ms-Suggestions-section', className, styles.suggestionsTitle)}>\n        {renderItem()}\n      </div>\n    );\n  }\n}\n\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\nexport class SuggestionsControl<T> extends React.Component<ISuggestionsControlProps<T>, ISuggestionsControlState<T>> {\n  protected _forceResolveButton: IButton;\n  protected _searchForMoreButton: IButton;\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  protected _suggestions = React.createRef<SuggestionsCore<T>>();\n  private SuggestionsOfProperType: new (props: ISuggestionsCoreProps<T>) => SuggestionsCore<T> =\n    SuggestionsCore as new (props: ISuggestionsCoreProps<T>) => SuggestionsCore<T>;\n\n  constructor(suggestionsProps: ISuggestionsControlProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n    this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.resetSelectedItem();\n  }\n\n  public componentDidUpdate(oldProps: ISuggestionsControlProps<T>): void {\n    this.scrollSelected();\n    if (oldProps.suggestions && oldProps.suggestions !== this.props.suggestions) {\n      this.setState({ suggestions: this.props.suggestions }, () => {\n        this.resetSelectedItem();\n      });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._suggestions.current?.deselectAllSuggestions();\n  }\n\n  public render(): JSX.Element {\n    const { className, headerItemsProps, footerItemsProps, suggestionsAvailableAlertText } = this.props;\n\n    const screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    const shouldAlertSuggestionsAvailableText =\n      this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n\n    return (\n      <div className={css('ms-Suggestions', className ? className : '', styles.root)}>\n        {headerItemsProps && this.renderHeaderItems()}\n        {this._renderSuggestions()}\n        {footerItemsProps && this.renderFooterItems()}\n        {shouldAlertSuggestionsAvailableText ? (\n          <span role=\"alert\" aria-live=\"polite\" className={screenReaderTextStyles}>\n            {suggestionsAvailableAlertText}\n          </span>\n        ) : null}\n      </div>\n    );\n  }\n\n  public get currentSuggestion(): ISuggestionModel<T> | undefined {\n    return this._suggestions.current?.getCurrentItem() || undefined;\n  }\n\n  public get currentSuggestionIndex(): number {\n    return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n  }\n\n  public get selectedElement(): HTMLDivElement | undefined {\n    return this._selectedElement.current ? this._selectedElement.current : this._suggestions.current?.selectedElement;\n  }\n\n  public hasSuggestionSelected(): boolean {\n    return this._suggestions.current?.hasSuggestionSelected() || false;\n  }\n\n  public hasSelection(): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  }\n\n  public executeSelectedAction(): void {\n    const { headerItemsProps, footerItemsProps } = this.props;\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      const selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if (this._suggestions.current?.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      const selectedFooterItem = footerItemsProps[selectedFooterIndex];\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  }\n\n  public removeSuggestion(index?: number): void {\n    this._suggestions.current?.removeSuggestion(index ? index : this._suggestions.current?.currentIndex);\n  }\n\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n  public handleKeyDown(keyCode: number): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    let isKeyDownHandled = false;\n    if (keyCode === KeyCodes.down) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n\n    return isKeyDownHandled;\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  protected renderHeaderItems(): JSX.Element | null {\n    const { headerItemsProps, suggestionsHeaderContainerAriaLabel } = this.props;\n    const { selectedHeaderIndex } = this.state;\n\n    return headerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-headerContainer', styles.suggestionsContainer)}\n        id=\"suggestionHeader-list\"\n        role=\"list\"\n        aria-label={suggestionsHeaderContainerAriaLabel}\n      >\n        {headerItemsProps.map((headerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n          return headerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-header' + index}\n              key={'sug-header' + index}\n              role=\"listitem\"\n              aria-label={headerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-header-item' + index}\n                isSelected={isSelected}\n                renderItem={headerItemProps.renderItem}\n                onExecute={headerItemProps.onExecute}\n                className={headerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected renderFooterItems(): JSX.Element | null {\n    const { footerItemsProps, suggestionsFooterContainerAriaLabel } = this.props;\n    const { selectedFooterIndex } = this.state;\n    return footerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-footerContainer', styles.suggestionsContainer)}\n        id=\"suggestionFooter-list\"\n        role=\"list\"\n        aria-label={suggestionsFooterContainerAriaLabel}\n      >\n        {footerItemsProps.map((footerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n          return footerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-footer' + index}\n              key={'sug-footer' + index}\n              role=\"listitem\"\n              aria-label={footerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-footer-item' + index}\n                isSelected={isSelected}\n                renderItem={footerItemProps.renderItem}\n                onExecute={footerItemProps.onExecute}\n                className={footerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected _renderSuggestions(): JSX.Element {\n    const TypedSuggestions = this.SuggestionsOfProperType;\n\n    return <TypedSuggestions ref={this._suggestions} {...this.props} suggestions={this.state.suggestions} />;\n  }\n\n  /**\n   * Selects the next selectable item\n   */\n  protected selectNextItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n    const selectionChanged = this._selectNextItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the next suggestion type group\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Selects the previous selectable item\n   */\n  protected selectPreviousItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the previous selectable item, of the same suggestion item type group\n    const selectionChanged = this._selectPreviousItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the previous suggestion type group\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n  protected resetSelectedItem(): void {\n    this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n    this._suggestions.current?.deselectAllSuggestions();\n\n    // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  }\n\n  /**\n   * Selects the first item\n   */\n  protected selectFirstItem(): void {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  }\n\n  /**\n   * Selects the last item\n   */\n  protected selectLastItem(): void {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  }\n\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n  private _selectNextItemOfItemType(itemType: SuggestionItemType, currentIndex: number = -1): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        this._suggestions.current?.setSelectedSuggestion(currentIndex + 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (let i = currentIndex + 1; i < itemProps.length; i++) {\n          const item = itemProps[i];\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n            this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n            this._suggestions.current?.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n  private _selectPreviousItemOfItemType(itemType: SuggestionItemType, currentIndex?: number): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      const index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n      if (index > 0) {\n        this._suggestions.current?.setSelectedSuggestion(index - 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps) {\n        const index = currentIndex !== undefined ? currentIndex : itemProps.length;\n        if (index > 0) {\n          for (let i = index - 1; i >= 0; i--) {\n            const item = itemProps[i];\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n              this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n              this._suggestions.current?.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private _getCurrentIndexForType(itemType: SuggestionItemType): number {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current!.currentIndex;\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  }\n\n  private _getNextItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  }\n\n  private _getPreviousItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}