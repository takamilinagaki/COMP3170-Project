{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, KeyCodes, Async, initializeComponentRef } from '../../Utilities';\nimport { ExpandingCardMode } from './ExpandingCard.types';\nimport { CardCallout } from './CardCallout/CardCallout';\nvar getClassNames = classNamesFunction();\nvar ExpandingCardBase = /** @class */function (_super) {\n  __extends(ExpandingCardBase, _super);\n  function ExpandingCardBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._expandedElem = React.createRef();\n    _this._onKeyDown = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n    _this._onRenderCompactCard = function () {\n      return React.createElement(\"div\", {\n        className: _this._classNames.compactCard\n      }, _this.props.onRenderCompactCard(_this.props.renderData));\n    };\n    _this._onRenderExpandedCard = function () {\n      // firstFrameRendered helps in initially setting height of expanded card to 1px, even if mode prop is set to\n      // ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\n      !_this.state.firstFrameRendered && _this._async.requestAnimationFrame(function () {\n        _this.setState({\n          firstFrameRendered: true\n        });\n      });\n      return React.createElement(\"div\", {\n        className: _this._classNames.expandedCard,\n        ref: _this._expandedElem\n      }, React.createElement(\"div\", {\n        className: _this._classNames.expandedCardScroll\n      }, _this.props.onRenderExpandedCard && _this.props.onRenderExpandedCard(_this.props.renderData)));\n    };\n    _this._checkNeedsScroll = function () {\n      var expandedCardHeight = _this.props.expandedCardHeight;\n      _this._async.requestAnimationFrame(function () {\n        if (_this._expandedElem.current && _this._expandedElem.current.scrollHeight >= expandedCardHeight) {\n          _this.setState({\n            needsScroll: true\n          });\n        }\n      });\n    };\n    _this._async = new Async(_this);\n    initializeComponentRef(_this);\n    _this.state = {\n      firstFrameRendered: false,\n      needsScroll: false\n    };\n    return _this;\n  }\n  ExpandingCardBase.prototype.componentDidMount = function () {\n    this._checkNeedsScroll();\n  };\n  ExpandingCardBase.prototype.componentWillUnmount = function () {\n    this._async.dispose();\n  };\n  ExpandingCardBase.prototype.render = function () {\n    var _a = this.props,\n      styles = _a.styles,\n      compactCardHeight = _a.compactCardHeight,\n      expandedCardHeight = _a.expandedCardHeight,\n      theme = _a.theme,\n      mode = _a.mode,\n      className = _a.className;\n    var _b = this.state,\n      needsScroll = _b.needsScroll,\n      firstFrameRendered = _b.firstFrameRendered;\n    var finalHeight = compactCardHeight + expandedCardHeight;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      compactCardHeight: compactCardHeight,\n      className: className,\n      expandedCardHeight: expandedCardHeight,\n      needsScroll: needsScroll,\n      expandedCardFirstFrameRendered: mode === ExpandingCardMode.expanded && firstFrameRendered\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this._onRenderCompactCard(), this._onRenderExpandedCard());\n    return React.createElement(CardCallout, __assign({}, this.props, {\n      content: content,\n      finalHeight: finalHeight,\n      className: this._classNames.root\n    }));\n  };\n  ExpandingCardBase.defaultProps = {\n    compactCardHeight: 156,\n    expandedCardHeight: 384,\n    directionalHintFixed: true\n  };\n  return ExpandingCardBase;\n}(React.Component);\nexport { ExpandingCardBase };","map":{"version":3,"names":["React","classNamesFunction","KeyCodes","Async","initializeComponentRef","ExpandingCardMode","CardCallout","getClassNames","ExpandingCardBase","_super","__extends","props","_this","call","_expandedElem","createRef","_onKeyDown","ev","which","escape","onLeave","_onRenderCompactCard","createElement","className","_classNames","compactCard","onRenderCompactCard","renderData","_onRenderExpandedCard","state","firstFrameRendered","_async","requestAnimationFrame","setState","expandedCard","ref","expandedCardScroll","onRenderExpandedCard","_checkNeedsScroll","expandedCardHeight","current","scrollHeight","needsScroll","prototype","componentDidMount","componentWillUnmount","dispose","render","_a","styles","compactCardHeight","theme","mode","_b","finalHeight","expandedCardFirstFrameRendered","expanded","content","onMouseEnter","onEnter","onMouseLeave","onKeyDown","__assign","root","defaultProps","directionalHintFixed","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/HoverCard/ExpandingCard.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, KeyCodes, Async, initializeComponentRef } from '../../Utilities';\nimport { ExpandingCardMode } from './ExpandingCard.types';\nimport { CardCallout } from './CardCallout/CardCallout';\nimport type { IExpandingCardProps, IExpandingCardStyles, IExpandingCardStyleProps } from './ExpandingCard.types';\n\nconst getClassNames = classNamesFunction<IExpandingCardStyleProps, IExpandingCardStyles>();\n\nexport interface IExpandingCardState {\n  firstFrameRendered: boolean;\n  needsScroll: boolean;\n}\n\nexport class ExpandingCardBase extends React.Component<IExpandingCardProps, IExpandingCardState> {\n  public static defaultProps = {\n    compactCardHeight: 156,\n    expandedCardHeight: 384,\n    directionalHintFixed: true,\n  };\n\n  private _classNames: { [key in keyof IExpandingCardStyles]: string };\n  private _expandedElem = React.createRef<HTMLDivElement>();\n  private _async: Async;\n\n  constructor(props: IExpandingCardProps) {\n    super(props);\n\n    this._async = new Async(this);\n    initializeComponentRef(this);\n\n    this.state = {\n      firstFrameRendered: false,\n      needsScroll: false,\n    };\n  }\n\n  public componentDidMount(): void {\n    this._checkNeedsScroll();\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { styles, compactCardHeight, expandedCardHeight, theme, mode, className } = this.props;\n    const { needsScroll, firstFrameRendered } = this.state;\n\n    const finalHeight = compactCardHeight! + expandedCardHeight!;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      compactCardHeight,\n      className,\n      expandedCardHeight,\n      needsScroll,\n      expandedCardFirstFrameRendered: mode === ExpandingCardMode.expanded && firstFrameRendered,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this._onRenderCompactCard()}\n        {this._onRenderExpandedCard()}\n      </div>\n    );\n\n    return (\n      <CardCallout {...this.props} content={content} finalHeight={finalHeight} className={this._classNames.root} />\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n\n  private _onRenderCompactCard = (): JSX.Element => {\n    return <div className={this._classNames.compactCard}>{this.props.onRenderCompactCard!(this.props.renderData)}</div>;\n  };\n\n  private _onRenderExpandedCard = (): JSX.Element => {\n    // firstFrameRendered helps in initially setting height of expanded card to 1px, even if mode prop is set to\n    // ExpandingCardMode.expanded on first render. This is to make sure transition animation takes place.\n    !this.state.firstFrameRendered &&\n      this._async.requestAnimationFrame(() => {\n        this.setState({\n          firstFrameRendered: true,\n        });\n      });\n\n    return (\n      <div className={this._classNames.expandedCard} ref={this._expandedElem}>\n        <div className={this._classNames.expandedCardScroll}>\n          {this.props.onRenderExpandedCard && this.props.onRenderExpandedCard(this.props.renderData)}\n        </div>\n      </div>\n    );\n  };\n\n  private _checkNeedsScroll = (): void => {\n    const { expandedCardHeight } = this.props;\n    this._async.requestAnimationFrame(() => {\n      if (this._expandedElem.current && this._expandedElem.current.scrollHeight >= expandedCardHeight!) {\n        this.setState({\n          needsScroll: true,\n        });\n      }\n    });\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}