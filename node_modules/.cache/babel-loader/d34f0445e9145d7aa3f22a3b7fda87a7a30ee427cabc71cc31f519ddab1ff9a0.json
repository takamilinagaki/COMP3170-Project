{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\nimport { MAX_COLOR_ALPHA } from './consts';\n/**\n * Gets a color with the given alpha value and the same other components as `color`.\n * Does not modify the original color.\n */\nexport function updateA(color, a) {\n  return __assign(__assign({}, color), {\n    a: a,\n    t: MAX_COLOR_ALPHA - a,\n    str: _rgbaOrHexString(color.r, color.g, color.b, a, color.hex)\n  });\n}","map":{"version":3,"names":["_rgbaOrHexString","MAX_COLOR_ALPHA","updateA","color","a","__assign","t","str","r","g","b","hex"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/color/updateA.ts"],"sourcesContent":["import { _rgbaOrHexString } from './_rgbaOrHexString';\nimport { MAX_COLOR_ALPHA } from './consts';\nimport type { IColor } from './interfaces';\n\n/**\n * Gets a color with the given alpha value and the same other components as `color`.\n * Does not modify the original color.\n */\nexport function updateA(color: IColor, a: number): IColor {\n  return {\n    ...color,\n    a,\n    t: MAX_COLOR_ALPHA - a,\n    str: _rgbaOrHexString(color.r, color.g, color.b, a, color.hex),\n  };\n}\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,eAAe,QAAQ,UAAU;AAG1C;;;;AAIA,OAAM,SAAUC,OAAOA,CAACC,KAAa,EAAEC,CAAS;EAC9C,OAAAC,QAAA,CAAAA,QAAA,KACKF,KAAK;IACRC,CAAC,EAAAA,CAAA;IACDE,CAAC,EAAEL,eAAe,GAAGG,CAAC;IACtBG,GAAG,EAAEP,gBAAgB,CAACG,KAAK,CAACK,CAAC,EAAEL,KAAK,CAACM,CAAC,EAAEN,KAAK,CAACO,CAAC,EAAEN,CAAC,EAAED,KAAK,CAACQ,GAAG;EAAC;AAElE"},"metadata":{},"sourceType":"module","externalDependencies":[]}