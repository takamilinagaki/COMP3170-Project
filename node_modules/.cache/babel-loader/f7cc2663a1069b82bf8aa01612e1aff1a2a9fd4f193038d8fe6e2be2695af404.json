{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { useConst, useIsomorphicLayoutEffect, usePrevious } from '@fluentui/react-hooks';\nimport { mergeAriaAttributeValues } from '../../Utilities';\nimport { KeytipManager, mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/index';\n/**\n * Hook that creates attributes for components which are enabled with Keytip.\n */\nexport function useKeytipData(options) {\n  var uniqueId = React.useRef();\n  var keytipProps = options.keytipProps ? __assign({\n    disabled: options.disabled\n  }, options.keytipProps) : undefined;\n  var keytipManager = useConst(KeytipManager.getInstance());\n  var prevOptions = usePrevious(options);\n  // useLayoutEffect used to strictly emulate didUpdate/didMount behavior\n  useIsomorphicLayoutEffect(function () {\n    if (uniqueId.current && keytipProps && ((prevOptions === null || prevOptions === void 0 ? void 0 : prevOptions.keytipProps) !== options.keytipProps || (prevOptions === null || prevOptions === void 0 ? void 0 : prevOptions.disabled) !== options.disabled)) {\n      keytipManager.update(keytipProps, uniqueId.current);\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    // Register Keytip in KeytipManager\n    if (keytipProps) {\n      uniqueId.current = keytipManager.register(keytipProps);\n    }\n    return function () {\n      // Unregister Keytip in KeytipManager\n      keytipProps && keytipManager.unregister(keytipProps, uniqueId.current);\n    };\n    // this is meant to run only at mount, and updates are handled separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var nativeKeytipProps = {\n    ariaDescribedBy: undefined,\n    keytipId: undefined\n  };\n  if (keytipProps) {\n    nativeKeytipProps = getKeytipData(keytipManager, keytipProps, options.ariaDescribedBy);\n  }\n  return nativeKeytipProps;\n}\n/**\n * Gets the aria- and data- attributes to attach to the component\n * @param keytipProps - options for Keytip\n * @param describedByPrepend - ariaDescribedBy value to prepend\n */\nfunction getKeytipData(keytipManager, keytipProps, describedByPrepend) {\n  // Add the parent overflow sequence if necessary\n  var newKeytipProps = keytipManager.addParentOverflow(keytipProps);\n  // Construct aria-describedby and data-ktp-id attributes\n  var ariaDescribedBy = mergeAriaAttributeValues(describedByPrepend, getAriaDescribedBy(newKeytipProps.keySequences));\n  var keySequences = __spreadArray([], newKeytipProps.keySequences, true);\n  if (newKeytipProps.overflowSetSequence) {\n    keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n  }\n  var keytipId = sequencesToID(keySequences);\n  return {\n    ariaDescribedBy: ariaDescribedBy,\n    keytipId: keytipId\n  };\n}","map":{"version":3,"names":["React","useConst","useIsomorphicLayoutEffect","usePrevious","mergeAriaAttributeValues","KeytipManager","mergeOverflows","sequencesToID","getAriaDescribedBy","useKeytipData","options","uniqueId","useRef","keytipProps","__assign","disabled","undefined","keytipManager","getInstance","prevOptions","current","update","register","unregister","nativeKeytipProps","ariaDescribedBy","keytipId","getKeytipData","describedByPrepend","newKeytipProps","addParentOverflow","keySequences","__spreadArray","overflowSetSequence"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/KeytipData/useKeytipData.ts"],"sourcesContent":["import * as React from 'react';\nimport { useConst, useIsomorphicLayoutEffect, usePrevious } from '@fluentui/react-hooks';\nimport { mergeAriaAttributeValues } from '../../Utilities';\nimport { KeytipManager, mergeOverflows, sequencesToID, getAriaDescribedBy } from '../../utilities/keytips/index';\nimport type { KeytipDataOptions } from './KeytipData.types';\nimport type { IKeytipProps } from '../../Keytip';\n\nexport interface IKeytipData {\n  ariaDescribedBy: string | undefined;\n  keytipId: string | undefined;\n}\n\n/**\n * Hook that creates attributes for components which are enabled with Keytip.\n */\nexport function useKeytipData(options: KeytipDataOptions): IKeytipData {\n  const uniqueId = React.useRef<string>();\n  const keytipProps: IKeytipProps | undefined = options.keytipProps\n    ? {\n        disabled: options.disabled,\n        ...options.keytipProps,\n      }\n    : undefined;\n\n  const keytipManager = useConst<KeytipManager>(KeytipManager.getInstance());\n  const prevOptions = usePrevious(options);\n\n  // useLayoutEffect used to strictly emulate didUpdate/didMount behavior\n  useIsomorphicLayoutEffect(() => {\n    if (\n      uniqueId.current &&\n      keytipProps &&\n      (prevOptions?.keytipProps !== options.keytipProps || prevOptions?.disabled !== options.disabled)\n    ) {\n      keytipManager.update(keytipProps, uniqueId.current);\n    }\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    // Register Keytip in KeytipManager\n    if (keytipProps) {\n      uniqueId.current = keytipManager.register(keytipProps);\n    }\n\n    return () => {\n      // Unregister Keytip in KeytipManager\n      keytipProps && keytipManager.unregister(keytipProps, uniqueId.current!);\n    };\n    // this is meant to run only at mount, and updates are handled separately\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let nativeKeytipProps: IKeytipData = {\n    ariaDescribedBy: undefined,\n    keytipId: undefined,\n  };\n\n  if (keytipProps) {\n    nativeKeytipProps = getKeytipData(keytipManager, keytipProps, options.ariaDescribedBy);\n  }\n\n  return nativeKeytipProps;\n}\n\n/**\n * Gets the aria- and data- attributes to attach to the component\n * @param keytipProps - options for Keytip\n * @param describedByPrepend - ariaDescribedBy value to prepend\n */\nfunction getKeytipData(\n  keytipManager: KeytipManager,\n  keytipProps: IKeytipProps,\n  describedByPrepend?: string,\n): IKeytipData {\n  // Add the parent overflow sequence if necessary\n  const newKeytipProps = keytipManager.addParentOverflow(keytipProps);\n\n  // Construct aria-describedby and data-ktp-id attributes\n  const ariaDescribedBy = mergeAriaAttributeValues(\n    describedByPrepend,\n    getAriaDescribedBy(newKeytipProps.keySequences),\n  )!;\n\n  let keySequences = [...newKeytipProps.keySequences];\n  if (newKeytipProps.overflowSetSequence) {\n    keySequences = mergeOverflows(keySequences, newKeytipProps.overflowSetSequence);\n  }\n  const keytipId = sequencesToID(keySequences);\n\n  return {\n    ariaDescribedBy,\n    keytipId,\n  };\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,yBAAyB,EAAEC,WAAW,QAAQ,uBAAuB;AACxF,SAASC,wBAAwB,QAAQ,iBAAiB;AAC1D,SAASC,aAAa,EAAEC,cAAc,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,+BAA+B;AAShH;;;AAGA,OAAM,SAAUC,aAAaA,CAACC,OAA0B;EACtD,IAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAM,EAAU;EACvC,IAAMC,WAAW,GAA6BH,OAAO,CAACG,WAAW,GAC9DC,QAAA;IACGC,QAAQ,EAAEL,OAAO,CAACK;EAAQ,GACvBL,OAAO,CAACG,WAAW,IAExBG,SAAS;EAEb,IAAMC,aAAa,GAAGhB,QAAQ,CAAgBI,aAAa,CAACa,WAAW,EAAE,CAAC;EAC1E,IAAMC,WAAW,GAAGhB,WAAW,CAACO,OAAO,CAAC;EAExC;EACAR,yBAAyB,CAAC;IACxB,IACES,QAAQ,CAACS,OAAO,IAChBP,WAAW,KACV,CAAAM,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEN,WAAW,MAAKH,OAAO,CAACG,WAAW,IAAI,CAAAM,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEJ,QAAQ,MAAKL,OAAO,CAACK,QAAQ,CAAC,EAChG;MACAE,aAAa,CAACI,MAAM,CAACR,WAAW,EAAEF,QAAQ,CAACS,OAAO,CAAC;;EAEvD,CAAC,CAAC;EAEFlB,yBAAyB,CAAC;IACxB;IACA,IAAIW,WAAW,EAAE;MACfF,QAAQ,CAACS,OAAO,GAAGH,aAAa,CAACK,QAAQ,CAACT,WAAW,CAAC;;IAGxD,OAAO;MACL;MACAA,WAAW,IAAII,aAAa,CAACM,UAAU,CAACV,WAAW,EAAEF,QAAQ,CAACS,OAAQ,CAAC;IACzE,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAII,iBAAiB,GAAgB;IACnCC,eAAe,EAAET,SAAS;IAC1BU,QAAQ,EAAEV;GACX;EAED,IAAIH,WAAW,EAAE;IACfW,iBAAiB,GAAGG,aAAa,CAACV,aAAa,EAAEJ,WAAW,EAAEH,OAAO,CAACe,eAAe,CAAC;;EAGxF,OAAOD,iBAAiB;AAC1B;AAEA;;;;;AAKA,SAASG,aAAaA,CACpBV,aAA4B,EAC5BJ,WAAyB,EACzBe,kBAA2B;EAE3B;EACA,IAAMC,cAAc,GAAGZ,aAAa,CAACa,iBAAiB,CAACjB,WAAW,CAAC;EAEnE;EACA,IAAMY,eAAe,GAAGrB,wBAAwB,CAC9CwB,kBAAkB,EAClBpB,kBAAkB,CAACqB,cAAc,CAACE,YAAY,CAAC,CAC/C;EAEF,IAAIA,YAAY,GAAAC,aAAA,KAAOH,cAAc,CAACE,YAAY,OAAC;EACnD,IAAIF,cAAc,CAACI,mBAAmB,EAAE;IACtCF,YAAY,GAAGzB,cAAc,CAACyB,YAAY,EAAEF,cAAc,CAACI,mBAAmB,CAAC;;EAEjF,IAAMP,QAAQ,GAAGnB,aAAa,CAACwB,YAAY,CAAC;EAE5C,OAAO;IACLN,eAAe,EAAAA,eAAA;IACfC,QAAQ,EAAAA;GACT;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}