{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId } from '@fluentui/react-hooks';\nimport { classNamesFunction, css, divProperties, getNativeProps, getRTL, KeyCodes, warn } from '@fluentui/utilities';\nimport { CommandButton } from '../../Button';\nimport { useOverflow } from '../../utilities/useOverflow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { DirectionalHint } from '../ContextualMenu/ContextualMenu.types';\nimport { Icon } from '../Icon/Icon';\nimport { PivotItem } from './PivotItem';\nvar getClassNames = classNamesFunction();\nvar COMPONENT_NAME = 'Pivot';\nvar getTabId = function (props, pivotId, itemKey, index) {\n  if (props.getTabId) {\n    return props.getTabId(itemKey, index);\n  }\n  return pivotId + \"-Tab\".concat(index);\n};\n// Gets the set of PivotLinks as array of IPivotItemProps\n// The set of Links is determined by child components of type PivotItem\nvar getLinkItems = function (props, pivotId) {\n  var result = {\n    links: [],\n    keyToIndexMapping: {},\n    keyToTabIdMapping: {}\n  };\n  React.Children.forEach(React.Children.toArray(props.children), function (child, index) {\n    if (isPivotItem(child)) {\n      // eslint-disable-next-line deprecation/deprecation\n      var _a = child.props,\n        linkText = _a.linkText,\n        pivotItemProps = __rest(_a, [\"linkText\"]);\n      var itemKey = child.props.itemKey || index.toString();\n      result.links.push(__assign(__assign({\n        headerText: linkText\n      }, pivotItemProps), {\n        itemKey: itemKey\n      }));\n      result.keyToIndexMapping[itemKey] = index;\n      result.keyToTabIdMapping[itemKey] = getTabId(props, pivotId, itemKey, index);\n    } else if (child) {\n      warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n    }\n  });\n  return result;\n};\nvar isPivotItem = function (item) {\n  var _a;\n  return React.isValidElement(item) && ((_a = item.type) === null || _a === void 0 ? void 0 : _a.name) === PivotItem.name;\n};\nexport var PivotBase = React.forwardRef(function (props, ref) {\n  var focusZoneRef = React.useRef(null);\n  var overflowMenuButtonComponentRef = React.useRef(null);\n  var pivotId = useId('Pivot');\n  var _a = useControllableValue(props.selectedKey, props.defaultSelectedKey),\n    selectedKey = _a[0],\n    setSelectedKey = _a[1];\n  var componentRef = props.componentRef,\n    theme = props.theme,\n    linkSize = props.linkSize,\n    linkFormat = props.linkFormat,\n    overflowBehavior = props.overflowBehavior,\n    overflowAriaLabel = props.overflowAriaLabel,\n    focusZoneProps = props.focusZoneProps,\n    overflowButtonAs = props.overflowButtonAs;\n  var classNames;\n  var nameProps = {\n    'aria-label': props['aria-label'],\n    'aria-labelledby': props['aria-labelledby']\n  };\n  var divProps = getNativeProps(props, divProperties, ['aria-label', 'aria-labelledby']);\n  var linkCollection = getLinkItems(props, pivotId);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a;\n        (_a = focusZoneRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    };\n  });\n  var renderLinkContent = function (link) {\n    if (!link) {\n      return null;\n    }\n    var itemCount = link.itemCount,\n      itemIcon = link.itemIcon,\n      headerText = link.headerText;\n    return React.createElement(\"span\", {\n      className: classNames.linkContent\n    }, itemIcon !== undefined && React.createElement(\"span\", {\n      className: classNames.icon\n    }, React.createElement(Icon, {\n      iconName: itemIcon\n    })), headerText !== undefined && React.createElement(\"span\", {\n      className: classNames.text\n    }, \" \", link.headerText), itemCount !== undefined && React.createElement(\"span\", {\n      className: classNames.count\n    }, \" (\", itemCount, \")\"));\n  };\n  var renderPivotLink = function (renderLinkCollection, link, renderPivotLinkSelectedKey, className) {\n    var itemKey = link.itemKey,\n      headerButtonProps = link.headerButtonProps,\n      onRenderItemLink = link.onRenderItemLink;\n    var tabId = renderLinkCollection.keyToTabIdMapping[itemKey];\n    var linkContent;\n    var isSelected = renderPivotLinkSelectedKey === itemKey;\n    if (onRenderItemLink) {\n      linkContent = onRenderItemLink(link, renderLinkContent);\n    } else {\n      linkContent = renderLinkContent(link);\n    }\n    var contentString = link.headerText || '';\n    contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n    // Adding space supplementary for icon\n    contentString += link.itemIcon ? ' xx' : '';\n    var itemSemantics = link.role && link.role !== 'tab' ? {\n      role: link.role\n    } : {\n      role: 'tab',\n      'aria-selected': isSelected\n    };\n    return React.createElement(CommandButton, __assign({}, headerButtonProps, itemSemantics, {\n      id: tabId,\n      key: itemKey,\n      className: css(className, isSelected && classNames.linkIsSelected),\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: function (ev) {\n        return onLinkClick(itemKey, ev);\n      },\n      // eslint-disable-next-line react/jsx-no-bind\n      onKeyDown: function (ev) {\n        return onKeyDown(itemKey, ev);\n      },\n      \"aria-label\": link.ariaLabel,\n      name: link.headerText,\n      keytipProps: link.keytipProps,\n      \"data-content\": contentString\n    }), linkContent);\n  };\n  var onLinkClick = function (itemKey, ev) {\n    ev.preventDefault();\n    updateSelectedItem(itemKey, ev);\n  };\n  var onKeyDown = function (itemKey, ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      ev.preventDefault();\n      updateSelectedItem(itemKey);\n    }\n  };\n  var updateSelectedItem = function (itemKey, ev) {\n    var _a;\n    setSelectedKey(itemKey);\n    linkCollection = getLinkItems(props, pivotId);\n    if (props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n      var selectedIndex = linkCollection.keyToIndexMapping[itemKey];\n      var item = React.Children.toArray(props.children)[selectedIndex];\n      if (isPivotItem(item)) {\n        props.onLinkClick(item, ev);\n      }\n    }\n    (_a = overflowMenuButtonComponentRef.current) === null || _a === void 0 ? void 0 : _a.dismissMenu();\n  };\n  var renderPivotItem = function (itemKey, isActive) {\n    if (props.headersOnly || !itemKey) {\n      return null;\n    }\n    var index = linkCollection.keyToIndexMapping[itemKey];\n    var selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n    return React.createElement(\"div\", {\n      role: \"tabpanel\",\n      hidden: !isActive,\n      key: itemKey,\n      \"aria-hidden\": !isActive,\n      \"aria-labelledby\": selectedTabId,\n      className: classNames.itemContainer\n    }, React.Children.toArray(props.children)[index]);\n  };\n  var isKeyValid = function (itemKey) {\n    return itemKey === null || itemKey !== undefined && linkCollection.keyToIndexMapping[itemKey] !== undefined;\n  };\n  var getSelectedKey = function () {\n    if (isKeyValid(selectedKey)) {\n      return selectedKey;\n    }\n    if (linkCollection.links.length) {\n      return linkCollection.links[0].itemKey;\n    }\n    return undefined;\n  };\n  classNames = getClassNames(props.styles, {\n    theme: theme,\n    linkSize: linkSize,\n    linkFormat: linkFormat\n  });\n  var renderedSelectedKey = getSelectedKey();\n  var renderedSelectedIndex = renderedSelectedKey ? linkCollection.keyToIndexMapping[renderedSelectedKey] : 0;\n  var items = linkCollection.links.map(function (l) {\n    return renderPivotLink(linkCollection, l, renderedSelectedKey, classNames.link);\n  });\n  // The overflow menu starts empty and items[] is updated as the overflow items change\n  var overflowMenuProps = React.useMemo(function () {\n    return {\n      items: [],\n      alignTargetEdge: true,\n      directionalHint: DirectionalHint.bottomRightEdge\n    };\n  }, []);\n  var overflowMenuButtonRef = useOverflow({\n    onOverflowItemsChanged: function (overflowIndex, elements) {\n      // Set data-is-overflowing on each item\n      elements.forEach(function (_a) {\n        var ele = _a.ele,\n          isOverflowing = _a.isOverflowing;\n        return ele.dataset.isOverflowing = \"\".concat(isOverflowing);\n      });\n      // Update the menu items\n      overflowMenuProps.items = linkCollection.links.slice(overflowIndex).filter(function (link) {\n        return link.itemKey !== renderedSelectedKey;\n      }).map(function (link, index) {\n        link.role = 'menuitem';\n        return {\n          key: link.itemKey || \"\".concat(overflowIndex + index),\n          onRender: function () {\n            return renderPivotLink(linkCollection, link, renderedSelectedKey, classNames.linkInMenu);\n          }\n        };\n      });\n    },\n    rtl: getRTL(theme),\n    pinnedIndex: renderedSelectedIndex\n  }).menuButtonRef;\n  var OverflowButton = overflowButtonAs ? overflowButtonAs : CommandButton;\n  return React.createElement(\"div\", __assign({\n    ref: ref\n  }, divProps), React.createElement(FocusZone, __assign({\n    componentRef: focusZoneRef,\n    role: \"tablist\"\n  }, nameProps, {\n    direction: FocusZoneDirection.horizontal\n  }, focusZoneProps, {\n    className: css(classNames.root, focusZoneProps === null || focusZoneProps === void 0 ? void 0 : focusZoneProps.className)\n  }), items, overflowBehavior === 'menu' && React.createElement(OverflowButton, {\n    className: css(classNames.link, classNames.overflowMenuButton),\n    elementRef: overflowMenuButtonRef,\n    componentRef: overflowMenuButtonComponentRef,\n    menuProps: overflowMenuProps,\n    menuIconProps: {\n      iconName: 'More',\n      style: {\n        color: 'inherit'\n      }\n    },\n    ariaLabel: overflowAriaLabel,\n    role: \"tab\"\n  })), renderedSelectedKey && linkCollection.links.map(function (link) {\n    return (link.alwaysRender === true || renderedSelectedKey === link.itemKey) && renderPivotItem(link.itemKey, renderedSelectedKey === link.itemKey);\n  }));\n});\nPivotBase.displayName = COMPONENT_NAME;","map":{"version":3,"names":["React","useControllableValue","useId","classNamesFunction","css","divProperties","getNativeProps","getRTL","KeyCodes","warn","CommandButton","useOverflow","FocusZone","FocusZoneDirection","DirectionalHint","Icon","PivotItem","getClassNames","COMPONENT_NAME","getTabId","props","pivotId","itemKey","index","concat","getLinkItems","result","links","keyToIndexMapping","keyToTabIdMapping","Children","forEach","toArray","children","child","isPivotItem","_a","linkText","pivotItemProps","__rest","toString","push","__assign","headerText","item","isValidElement","type","name","PivotBase","forwardRef","ref","focusZoneRef","useRef","overflowMenuButtonComponentRef","selectedKey","defaultSelectedKey","setSelectedKey","componentRef","theme","linkSize","linkFormat","overflowBehavior","overflowAriaLabel","focusZoneProps","overflowButtonAs","classNames","nameProps","divProps","linkCollection","useImperativeHandle","focus","current","renderLinkContent","link","itemCount","itemIcon","createElement","className","linkContent","undefined","icon","iconName","text","count","renderPivotLink","renderLinkCollection","renderPivotLinkSelectedKey","headerButtonProps","onRenderItemLink","tabId","isSelected","contentString","itemSemantics","role","id","key","linkIsSelected","onClick","ev","onLinkClick","onKeyDown","ariaLabel","keytipProps","preventDefault","updateSelectedItem","which","enter","selectedIndex","dismissMenu","renderPivotItem","isActive","headersOnly","selectedTabId","hidden","itemContainer","isKeyValid","getSelectedKey","length","styles","renderedSelectedKey","renderedSelectedIndex","items","map","l","overflowMenuProps","useMemo","alignTargetEdge","directionalHint","bottomRightEdge","overflowMenuButtonRef","onOverflowItemsChanged","overflowIndex","elements","ele","isOverflowing","dataset","slice","filter","onRender","linkInMenu","rtl","pinnedIndex","menuButtonRef","OverflowButton","direction","horizontal","root","overflowMenuButton","elementRef","menuProps","menuIconProps","style","color","alwaysRender","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Pivot/Pivot.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useControllableValue, useId } from '@fluentui/react-hooks';\nimport { classNamesFunction, css, divProperties, getNativeProps, getRTL, KeyCodes, warn } from '@fluentui/utilities';\nimport { CommandButton } from '../../Button';\nimport { useOverflow } from '../../utilities/useOverflow';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { DirectionalHint } from '../ContextualMenu/ContextualMenu.types';\nimport { Icon } from '../Icon/Icon';\nimport { PivotItem } from './PivotItem';\nimport type { IButton } from '../../Button';\nimport type { IFocusZone } from '../../FocusZone';\nimport type { IContextualMenuProps } from '../ContextualMenu/ContextualMenu.types';\nimport type { IPivot, IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport type { IPivotItemProps } from './PivotItem.types';\n\nconst getClassNames = classNamesFunction<IPivotStyleProps, IPivotStyles>();\n\nconst COMPONENT_NAME = 'Pivot';\n\ntype PivotLinkCollection = {\n  links: IPivotItemProps[];\n  keyToIndexMapping: { [key: string]: number };\n  keyToTabIdMapping: { [key: string]: string };\n};\n\nconst getTabId = (props: IPivotProps, pivotId: string, itemKey: string, index: number): string => {\n  if (props.getTabId) {\n    return props.getTabId(itemKey, index);\n  }\n  return pivotId + `-Tab${index}`;\n};\n\n// Gets the set of PivotLinks as array of IPivotItemProps\n// The set of Links is determined by child components of type PivotItem\nconst getLinkItems = (props: IPivotProps, pivotId: string): PivotLinkCollection => {\n  const result: PivotLinkCollection = {\n    links: [],\n    keyToIndexMapping: {},\n    keyToTabIdMapping: {},\n  };\n\n  React.Children.forEach(React.Children.toArray(props.children), (child: React.ReactNode, index: number) => {\n    if (isPivotItem(child)) {\n      // eslint-disable-next-line deprecation/deprecation\n      const { linkText, ...pivotItemProps } = child.props;\n      const itemKey = child.props.itemKey || index.toString();\n      result.links.push({\n        headerText: linkText,\n        ...pivotItemProps,\n        itemKey,\n      });\n      result.keyToIndexMapping[itemKey] = index;\n      result.keyToTabIdMapping[itemKey] = getTabId(props, pivotId, itemKey, index);\n    } else if (child) {\n      warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n    }\n  });\n  return result;\n};\n\nconst isPivotItem = (item: React.ReactNode): item is PivotItem => {\n  return React.isValidElement(item) && (item.type as React.ComponentType)?.name === PivotItem.name;\n};\n\nexport const PivotBase: React.FunctionComponent<IPivotProps> = React.forwardRef<HTMLDivElement, IPivotProps>(\n  (props, ref) => {\n    const focusZoneRef = React.useRef<IFocusZone>(null);\n    const overflowMenuButtonComponentRef = React.useRef<IButton>(null);\n    const pivotId: string = useId('Pivot');\n\n    const [selectedKey, setSelectedKey] = useControllableValue(props.selectedKey, props.defaultSelectedKey);\n\n    const {\n      componentRef,\n      theme,\n      linkSize,\n      linkFormat,\n      overflowBehavior,\n      overflowAriaLabel,\n      focusZoneProps,\n      overflowButtonAs,\n    } = props;\n\n    let classNames: { [key in keyof IPivotStyles]: string };\n    const nameProps = {\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n    };\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, [\n      'aria-label',\n      'aria-labelledby',\n    ]);\n\n    let linkCollection = getLinkItems(props, pivotId);\n\n    React.useImperativeHandle(componentRef as React.RefObject<IPivot>, () => ({\n      focus: () => {\n        focusZoneRef.current?.focus();\n      },\n    }));\n\n    const renderLinkContent = (link?: IPivotItemProps): JSX.Element | null => {\n      if (!link) {\n        return null;\n      }\n\n      const { itemCount, itemIcon, headerText } = link;\n      return (\n        <span className={classNames.linkContent}>\n          {itemIcon !== undefined && (\n            <span className={classNames.icon}>\n              <Icon iconName={itemIcon} />\n            </span>\n          )}\n          {headerText !== undefined && <span className={classNames.text}> {link.headerText}</span>}\n          {itemCount !== undefined && <span className={classNames.count}> ({itemCount})</span>}\n        </span>\n      );\n    };\n\n    const renderPivotLink = (\n      renderLinkCollection: PivotLinkCollection,\n      link: IPivotItemProps,\n      renderPivotLinkSelectedKey: string | null | undefined,\n      className: string,\n    ): JSX.Element => {\n      const { itemKey, headerButtonProps, onRenderItemLink } = link;\n      const tabId = renderLinkCollection.keyToTabIdMapping[itemKey!];\n      let linkContent: JSX.Element | null;\n      const isSelected: boolean = renderPivotLinkSelectedKey === itemKey;\n\n      if (onRenderItemLink) {\n        linkContent = onRenderItemLink(link, renderLinkContent);\n      } else {\n        linkContent = renderLinkContent(link);\n      }\n\n      let contentString = link.headerText || '';\n      contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n      // Adding space supplementary for icon\n      contentString += link.itemIcon ? ' xx' : '';\n\n      const itemSemantics =\n        link.role && link.role !== 'tab'\n          ? {\n              role: link.role,\n            }\n          : {\n              role: 'tab',\n              'aria-selected': isSelected,\n            };\n\n      return (\n        <CommandButton\n          {...headerButtonProps}\n          {...itemSemantics}\n          id={tabId}\n          key={itemKey}\n          className={css(className, isSelected && classNames.linkIsSelected)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={(ev: React.MouseEvent<HTMLElement>) => onLinkClick(itemKey!, ev)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onKeyDown={(ev: React.KeyboardEvent<HTMLElement>) => onKeyDown(itemKey!, ev)}\n          aria-label={link.ariaLabel}\n          name={link.headerText}\n          keytipProps={link.keytipProps}\n          data-content={contentString}\n        >\n          {linkContent}\n        </CommandButton>\n      );\n    };\n\n    const onLinkClick = (itemKey: string, ev: React.MouseEvent<HTMLElement>): void => {\n      ev.preventDefault();\n      updateSelectedItem(itemKey, ev);\n    };\n\n    const onKeyDown = (itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void => {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.enter) {\n        ev.preventDefault();\n        updateSelectedItem(itemKey);\n      }\n    };\n\n    const updateSelectedItem = (itemKey: string, ev?: React.MouseEvent<HTMLElement>): void => {\n      setSelectedKey(itemKey);\n      linkCollection = getLinkItems(props, pivotId);\n      if (props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n        const selectedIndex = linkCollection.keyToIndexMapping[itemKey];\n        const item = React.Children.toArray(props.children)[selectedIndex];\n        if (isPivotItem(item)) {\n          props.onLinkClick(item, ev);\n        }\n      }\n\n      overflowMenuButtonComponentRef.current?.dismissMenu();\n    };\n\n    const renderPivotItem = (itemKey: string | undefined, isActive: boolean): JSX.Element | null => {\n      if (props.headersOnly || !itemKey) {\n        return null;\n      }\n\n      const index = linkCollection.keyToIndexMapping[itemKey];\n      const selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n      return (\n        <div\n          role=\"tabpanel\"\n          hidden={!isActive}\n          key={itemKey}\n          aria-hidden={!isActive}\n          aria-labelledby={selectedTabId}\n          className={classNames.itemContainer}\n        >\n          {React.Children.toArray(props.children)[index]}\n        </div>\n      );\n    };\n\n    const isKeyValid = (itemKey: string | null | undefined): boolean => {\n      return itemKey === null || (itemKey !== undefined && linkCollection.keyToIndexMapping[itemKey] !== undefined);\n    };\n\n    const getSelectedKey = () => {\n      if (isKeyValid(selectedKey)) {\n        return selectedKey;\n      }\n      if (linkCollection.links.length) {\n        return linkCollection.links[0].itemKey;\n      }\n      return undefined;\n    };\n\n    classNames = getClassNames(props.styles!, {\n      theme: theme!,\n      linkSize,\n      linkFormat,\n    });\n\n    const renderedSelectedKey = getSelectedKey();\n    const renderedSelectedIndex = renderedSelectedKey ? linkCollection.keyToIndexMapping[renderedSelectedKey] : 0;\n\n    const items = linkCollection.links.map(l =>\n      renderPivotLink(linkCollection, l, renderedSelectedKey, classNames.link),\n    );\n\n    // The overflow menu starts empty and items[] is updated as the overflow items change\n    const overflowMenuProps: IContextualMenuProps = React.useMemo(\n      () => ({\n        items: [],\n        alignTargetEdge: true,\n        directionalHint: DirectionalHint.bottomRightEdge,\n      }),\n      [],\n    );\n\n    const { menuButtonRef: overflowMenuButtonRef } = useOverflow({\n      onOverflowItemsChanged: (overflowIndex, elements) => {\n        // Set data-is-overflowing on each item\n        elements.forEach(({ ele, isOverflowing }) => (ele.dataset.isOverflowing = `${isOverflowing}`));\n\n        // Update the menu items\n        overflowMenuProps.items = linkCollection.links\n          .slice(overflowIndex)\n          .filter(link => link.itemKey !== renderedSelectedKey)\n          .map((link, index) => {\n            link.role = 'menuitem';\n\n            return {\n              key: link.itemKey || `${overflowIndex + index}`,\n              onRender: () => renderPivotLink(linkCollection, link, renderedSelectedKey, classNames.linkInMenu),\n            };\n          });\n      },\n      rtl: getRTL(theme),\n      pinnedIndex: renderedSelectedIndex,\n    });\n\n    const OverflowButton = overflowButtonAs ? overflowButtonAs : CommandButton;\n    return (\n      <div ref={ref} {...divProps}>\n        <FocusZone\n          componentRef={focusZoneRef}\n          role=\"tablist\"\n          {...nameProps}\n          direction={FocusZoneDirection.horizontal}\n          {...focusZoneProps}\n          className={css(classNames.root, focusZoneProps?.className)}\n        >\n          {items}\n          {overflowBehavior === 'menu' && (\n            <OverflowButton\n              className={css(classNames.link, classNames.overflowMenuButton)}\n              elementRef={overflowMenuButtonRef}\n              componentRef={overflowMenuButtonComponentRef}\n              menuProps={overflowMenuProps}\n              menuIconProps={{ iconName: 'More', style: { color: 'inherit' } }}\n              ariaLabel={overflowAriaLabel}\n              role=\"tab\"\n            />\n          )}\n        </FocusZone>\n        {renderedSelectedKey &&\n          linkCollection.links.map(\n            link =>\n              (link.alwaysRender === true || renderedSelectedKey === link.itemKey) &&\n              renderPivotItem(link.itemKey, renderedSelectedKey === link.itemKey),\n          )}\n      </div>\n    );\n  },\n);\nPivotBase.displayName = COMPONENT_NAME;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}