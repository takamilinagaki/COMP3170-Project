{"ast":null,"code":"import { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport { useEffect } from 'react';\nvar graphGet = function (graphNode, _a) {\n  var _b, _c, _d;\n  var windowId = _a[0],\n    id = _a[1],\n    theme = _a[2];\n  return (_d = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme)) === null || _d === void 0 ? void 0 : _d.classMap;\n};\nvar graphSet = function (graphNode, _a, classMap) {\n  var _b, _c;\n  var windowId = _a[0],\n    id = _a[1],\n    theme = _a[2];\n  var windowNode = (_b = graphNode.get(windowId)) !== null && _b !== void 0 ? _b : new Map();\n  graphNode.set(windowId, windowNode);\n  var idNode = (_c = windowNode.get(id)) !== null && _c !== void 0 ? _c : new Map();\n  windowNode.set(id, idNode);\n  idNode.set(theme, {\n    classMap: classMap,\n    refCount: 0\n  });\n};\nfunction graphRef(graphNode, _a) {\n  var _b, _c;\n  var windowId = _a[0],\n    id = _a[1],\n    theme = _a[2];\n  var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n  if (node) {\n    node.refCount++;\n  }\n}\nfunction graphDeref(graphNode, _a) {\n  var _b, _c, _d, _e, _f, _g, _h, _j;\n  var windowId = _a[0],\n    id = _a[1],\n    theme = _a[2];\n  var node = (_c = (_b = graphNode.get(windowId)) === null || _b === void 0 ? void 0 : _b.get(id)) === null || _c === void 0 ? void 0 : _c.get(theme);\n  if (node) {\n    node.refCount--;\n    if (node.refCount === 0) {\n      (_e = (_d = graphNode.get(windowId)) === null || _d === void 0 ? void 0 : _d.get(id)) === null || _e === void 0 ? void 0 : _e.delete(theme);\n      if (((_g = (_f = graphNode.get(windowId)) === null || _f === void 0 ? void 0 : _f.get(id)) === null || _g === void 0 ? void 0 : _g.size) === 0) {\n        (_h = graphNode.get(windowId)) === null || _h === void 0 ? void 0 : _h.delete(id);\n        if (((_j = graphNode.get(windowId)) === null || _j === void 0 ? void 0 : _j.size) === 0) {\n          graphNode.delete(windowId);\n        }\n      }\n    }\n  }\n}\n/**\n * Registers a css object, optionally as a function of the theme.\n *\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\n * and returns a css javascript object.\n *\n * @deprecated Use `mergeStyles` instead for v8 related code. We will be using a new implementation of `makeStyles` in\n * future versions of the library.\n */\nexport function makeStyles(styleOrFunction) {\n  // Create graph of inputs to map to output.\n  var graph = new Map();\n  // Retain a dictionary of window ids we're tracking\n  var allWindows = new Set();\n  // cleanupMapEntries will\n  // 1. remove all the graph branches for the window,\n  // 2. remove the event listener,\n  // 3. delete the allWindows entry.\n  var cleanupMapEntries = function (ev) {\n    var win = ev.currentTarget;\n    var winId = win.__id__;\n    graph.delete(winId);\n    win.removeEventListener('unload', cleanupMapEntries);\n    allWindows.delete(winId);\n  };\n  // eslint-disable-next-line deprecation/deprecation\n  return function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var theme = options.theme;\n    var winId;\n    var win = useWindow();\n    if (win) {\n      win.__id__ = win.__id__ || getId();\n      winId = win.__id__;\n      if (!allWindows.has(winId)) {\n        allWindows.add(winId);\n        win.addEventListener('unload', cleanupMapEntries);\n      }\n    }\n    var contextualTheme = useTheme();\n    theme = theme || contextualTheme;\n    var renderer = mergeStylesRenderer;\n    var id = renderer.getId();\n    var path = [winId, id, theme];\n    var value = graphGet(graph, path);\n    // Don't keep around unused styles\n    useEffect(function () {\n      graphRef(graph, [winId, id, theme]);\n      return function () {\n        return graphDeref(graph, [winId, id, theme]);\n      };\n    }, [winId, id, theme]);\n    if (!value) {\n      var styles = isStyleFunction(styleOrFunction) ? styleOrFunction(theme) : styleOrFunction;\n      value = mergeStylesRenderer.renderStyles(styles, {\n        targetWindow: win,\n        rtl: !!theme.rtl\n      });\n      graphSet(graph, path, value);\n    }\n    return value;\n  };\n}\nfunction isStyleFunction(styleOrFunction) {\n  return typeof styleOrFunction === 'function';\n}","map":{"version":3,"names":["useTheme","getId","useWindow","mergeStylesRenderer","useEffect","graphGet","graphNode","_a","windowId","id","theme","_d","_c","_b","get","classMap","graphSet","windowNode","Map","set","idNode","refCount","graphRef","node","graphDeref","_e","delete","_g","_f","size","_h","_j","makeStyles","styleOrFunction","graph","allWindows","Set","cleanupMapEntries","ev","win","currentTarget","winId","__id__","removeEventListener","options","has","add","addEventListener","contextualTheme","renderer","path","value","styles","isStyleFunction","renderStyles","targetWindow","rtl"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/ThemeProvider/makeStyles.ts"],"sourcesContent":["import { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport { useWindow } from '@fluentui/react-window-provider';\nimport { mergeStylesRenderer } from './styleRenderers/mergeStylesRenderer';\nimport type { IStyle } from '@fluentui/style-utilities';\nimport type { Theme } from '@fluentui/theme';\nimport { useEffect } from 'react';\n\ntype GraphPath = readonly [windowId: string | undefined, id: number, theme: Theme | undefined];\nexport type StylesClassMapping<TStyleSet extends { [key in keyof TStyleSet]: IStyle }> = {\n  [key in keyof TStyleSet]: string;\n};\ntype Graph<TStyleSet extends { [key in keyof TStyleSet]: IStyle }> = Map<\n  string | undefined,\n  Map<number, Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>>\n>;\n\nconst graphGet = <TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n): StylesClassMapping<TStyleSet> | undefined => {\n  return graphNode.get(windowId)?.get(id)?.get(theme)?.classMap;\n};\n\nconst graphSet = <TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n  classMap: StylesClassMapping<TStyleSet>,\n) => {\n  const windowNode =\n    graphNode.get(windowId) ??\n    new Map<number, Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>>();\n  graphNode.set(windowId, windowNode);\n\n  const idNode =\n    windowNode.get(id) ?? new Map<Theme | undefined, { classMap: StylesClassMapping<TStyleSet>; refCount: number }>();\n  windowNode.set(id, idNode);\n\n  idNode.set(theme, { classMap, refCount: 0 });\n};\n\nfunction graphRef<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n) {\n  const node = graphNode.get(windowId)?.get(id)?.get(theme);\n  if (node) {\n    node.refCount++;\n  }\n}\n\nfunction graphDeref<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  graphNode: Graph<TStyleSet>,\n  [windowId, id, theme]: GraphPath,\n) {\n  const node = graphNode.get(windowId)?.get(id)?.get(theme);\n  if (node) {\n    node.refCount--;\n\n    if (node.refCount === 0) {\n      graphNode.get(windowId)?.get(id)?.delete(theme);\n\n      if (graphNode.get(windowId)?.get(id)?.size === 0) {\n        graphNode.get(windowId)?.delete(id);\n\n        if (graphNode.get(windowId)?.size === 0) {\n          graphNode.delete(windowId);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Options that can be provided to the hook generated by `makeStyles`.\n * @deprecated Only used in deprecated `makeStyles` implementation below.\n */\nexport type UseStylesOptions = {\n  theme?: Theme;\n};\n\ntype WindowWithId = Window & {\n  __id__: string;\n};\n\n/**\n * Registers a css object, optionally as a function of the theme.\n *\n * @param styleOrFunction - Either a css javascript object, or a function which takes in `ITheme`\n * and returns a css javascript object.\n *\n * @deprecated Use `mergeStyles` instead for v8 related code. We will be using a new implementation of `makeStyles` in\n * future versions of the library.\n */\nexport function makeStyles<TStyleSet extends { [key in keyof TStyleSet]: IStyle } = { [key: string]: IStyle }>(\n  styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet),\n  // eslint-disable-next-line deprecation/deprecation\n): (options?: UseStylesOptions) => StylesClassMapping<TStyleSet> {\n  // Create graph of inputs to map to output.\n  const graph: Graph<TStyleSet> = new Map();\n  // Retain a dictionary of window ids we're tracking\n  const allWindows = new Set<string>();\n\n  // cleanupMapEntries will\n  // 1. remove all the graph branches for the window,\n  // 2. remove the event listener,\n  // 3. delete the allWindows entry.\n  const cleanupMapEntries = (ev: PageTransitionEvent) => {\n    const win = ev.currentTarget as WindowWithId;\n    const winId = win.__id__;\n    graph.delete(winId);\n    win.removeEventListener('unload', cleanupMapEntries);\n    allWindows.delete(winId);\n  };\n\n  // eslint-disable-next-line deprecation/deprecation\n  return (options: UseStylesOptions = {}): StylesClassMapping<TStyleSet> => {\n    let { theme } = options;\n    let winId: string | undefined;\n    const win = useWindow() as WindowWithId | undefined;\n    if (win) {\n      win.__id__ = win.__id__ || getId();\n      winId = win.__id__;\n      if (!allWindows.has(winId)) {\n        allWindows.add(winId);\n        win.addEventListener('unload', cleanupMapEntries);\n      }\n    }\n\n    const contextualTheme = useTheme();\n\n    theme = theme || contextualTheme;\n    const renderer = mergeStylesRenderer;\n\n    const id = renderer.getId();\n    const path: GraphPath = [winId, id, theme] as const;\n    let value = graphGet(graph, path);\n\n    // Don't keep around unused styles\n    useEffect(() => {\n      graphRef(graph, [winId, id, theme]);\n\n      return () => graphDeref(graph, [winId, id, theme]);\n    }, [winId, id, theme]);\n\n    if (!value) {\n      const styles = isStyleFunction(styleOrFunction)\n        ? (styleOrFunction as (theme: Theme) => TStyleSet)(theme!)\n        : styleOrFunction;\n\n      value = mergeStylesRenderer.renderStyles<TStyleSet>(styles, { targetWindow: win, rtl: !!theme!.rtl });\n      graphSet(graph, path, value);\n    }\n\n    return value;\n  };\n}\n\nfunction isStyleFunction<TStyleSet extends { [key in keyof TStyleSet]: IStyle }>(\n  styleOrFunction: TStyleSet | ((theme: Theme) => TStyleSet),\n): styleOrFunction is (theme: Theme) => TStyleSet {\n  return typeof styleOrFunction === 'function';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}