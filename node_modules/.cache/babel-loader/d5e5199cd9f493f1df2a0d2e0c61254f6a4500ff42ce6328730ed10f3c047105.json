{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\nvar LabelBase = /** @class */function (_super) {\n  __extends(LabelBase, _super);\n  function LabelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LabelBase.prototype.render = function () {\n    var _a = this.props,\n      _b = _a.as,\n      RootType = _b === void 0 ? 'label' : _b,\n      children = _a.children,\n      className = _a.className,\n      disabled = _a.disabled,\n      styles = _a.styles,\n      required = _a.required,\n      theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      required: required,\n      theme: theme\n    });\n    return React.createElement(RootType, __assign({}, getNativeProps(this.props, divProperties), {\n      className: classNames.root\n    }), children);\n  };\n  return LabelBase;\n}(React.Component);\nexport { LabelBase };","map":{"version":3,"names":["React","divProperties","getNativeProps","classNamesFunction","getClassNames","cacheSize","LabelBase","_super","__extends","prototype","render","_a","props","_b","as","RootType","children","className","disabled","styles","required","theme","classNames","createElement","__assign","root","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Label/Label.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAC/D,SAASC,kBAAkB,QAAQ,iBAAiB;AAGpD,IAAMC,aAAa,GAAGD,kBAAkB,CAAiC;EACvE;EACA;EACA;EACAE,SAAS,EAAE;CACZ,CAAC;AAEF,IAAAC,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAA/B,SAAAD,UAAA;;EAeA;EAdSA,SAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACQ,IAAAC,EAAA,GAAqF,IAAI,CAACC,KAAK;MAA7FC,EAAA,GAAAF,EAAA,CAAAG,EAAsB;MAAlBC,QAAQ,GAAAF,EAAA,cAAG,OAAO,GAAAA,EAAA;MAAEG,QAAQ,GAAAL,EAAA,CAAAK,QAAA;MAAEC,SAAS,GAAAN,EAAA,CAAAM,SAAA;MAAEC,QAAQ,GAAAP,EAAA,CAAAO,QAAA;MAAEC,MAAM,GAAAR,EAAA,CAAAQ,MAAA;MAAEC,QAAQ,GAAAT,EAAA,CAAAS,QAAA;MAAEC,KAAK,GAAAV,EAAA,CAAAU,KAAe;IACrG,IAAMC,UAAU,GAAGlB,aAAa,CAACe,MAAM,EAAE;MACvCF,SAAS,EAAAA,SAAA;MACTC,QAAQ,EAAAA,QAAA;MACRE,QAAQ,EAAAA,QAAA;MACRC,KAAK,EAAEA;KACR,CAAC;IACF,OACErB,KAAA,CAAAuB,aAAA,CAACR,QAAQ,EAAAS,QAAA,KAAKtB,cAAc,CAAC,IAAI,CAACU,KAAK,EAAEX,aAAa,CAAC;MAAEgB,SAAS,EAAEK,UAAU,CAACG;IAAI,IAChFT,QAAQ,CACA;EAEf,CAAC;EACH,OAAAV,SAAC;AAAD,CAAC,CAf8BN,KAAK,CAAC0B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}