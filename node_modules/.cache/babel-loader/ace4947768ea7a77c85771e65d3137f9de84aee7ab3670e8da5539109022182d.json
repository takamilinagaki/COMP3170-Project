{"ast":null,"code":"/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child, parent) {\n  var virtualChild = child;\n  var virtualParent = parent;\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: []\n    };\n  }\n  var oldParent = virtualChild._virtual.parent;\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    var index = oldParent._virtual.children.indexOf(virtualChild);\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n  virtualChild._virtual.parent = virtualParent || undefined;\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: []\n      };\n    }\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}","map":{"version":3,"names":["setVirtualParent","child","parent","virtualChild","virtualParent","_virtual","children","oldParent","index","indexOf","splice","undefined","push"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/dom-utilities/src/setVirtualParent.ts"],"sourcesContent":["import { IVirtualElement } from './IVirtualElement';\n/**\n * Sets the virtual parent of an element.\n * Pass `undefined` as the `parent` to clear the virtual parent.\n *\n * @public\n */\nexport function setVirtualParent(child: HTMLElement, parent: HTMLElement | null): void {\n  const virtualChild = <IVirtualElement>child;\n  const virtualParent = <IVirtualElement | null>parent;\n\n  if (!virtualChild._virtual) {\n    virtualChild._virtual = {\n      children: [],\n    };\n  }\n\n  const oldParent = virtualChild._virtual.parent;\n\n  if (oldParent && oldParent !== parent) {\n    // Remove the child from its old parent.\n    const index = oldParent._virtual.children.indexOf(virtualChild);\n\n    if (index > -1) {\n      oldParent._virtual.children.splice(index, 1);\n    }\n  }\n\n  virtualChild._virtual.parent = virtualParent || undefined;\n\n  if (virtualParent) {\n    if (!virtualParent._virtual) {\n      virtualParent._virtual = {\n        children: [],\n      };\n    }\n\n    virtualParent._virtual.children.push(virtualChild);\n  }\n}\n"],"mappings":"AACA;;;;;;AAMA,OAAM,SAAUA,gBAAgBA,CAACC,KAAkB,EAAEC,MAA0B;EAC7E,IAAMC,YAAY,GAAoBF,KAAK;EAC3C,IAAMG,aAAa,GAA2BF,MAAM;EAEpD,IAAI,CAACC,YAAY,CAACE,QAAQ,EAAE;IAC1BF,YAAY,CAACE,QAAQ,GAAG;MACtBC,QAAQ,EAAE;KACX;;EAGH,IAAMC,SAAS,GAAGJ,YAAY,CAACE,QAAQ,CAACH,MAAM;EAE9C,IAAIK,SAAS,IAAIA,SAAS,KAAKL,MAAM,EAAE;IACrC;IACA,IAAMM,KAAK,GAAGD,SAAS,CAACF,QAAQ,CAACC,QAAQ,CAACG,OAAO,CAACN,YAAY,CAAC;IAE/D,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;MACdD,SAAS,CAACF,QAAQ,CAACC,QAAQ,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;;EAIhDL,YAAY,CAACE,QAAQ,CAACH,MAAM,GAAGE,aAAa,IAAIO,SAAS;EAEzD,IAAIP,aAAa,EAAE;IACjB,IAAI,CAACA,aAAa,CAACC,QAAQ,EAAE;MAC3BD,aAAa,CAACC,QAAQ,GAAG;QACvBC,QAAQ,EAAE;OACX;;IAGHF,aAAa,CAACC,QAAQ,CAACC,QAAQ,CAACM,IAAI,CAACT,YAAY,CAAC;;AAEtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}