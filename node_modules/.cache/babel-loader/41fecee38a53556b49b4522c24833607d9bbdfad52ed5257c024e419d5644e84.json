{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport var ImageIcon = function (props) {\n  var className = props.className,\n    imageProps = props.imageProps;\n  var nativeProps = getNativeProps(props, htmlElementProperties, ['aria-label', 'aria-labelledby', 'title', 'aria-describedby']);\n  var altText = imageProps.alt || props['aria-label'];\n  var hasName = altText || props['aria-labelledby'] || props.title || imageProps['aria-label'] || imageProps['aria-labelledby'] || imageProps.title;\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  var imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title\n  };\n  var containerProps = hasName ? {} : {\n    'aria-hidden': true\n  };\n  return React.createElement(\"div\", __assign({}, containerProps, nativeProps, {\n    className: css(MS_ICON, classNames.root, classNames.image, className)\n  }), React.createElement(Image, __assign({}, imageNameProps, imageProps, {\n    alt: hasName ? altText : ''\n  })));\n};","map":{"version":3,"names":["React","Image","css","getNativeProps","htmlElementProperties","classNames","MS_ICON","ImageIcon","props","className","imageProps","nativeProps","altText","alt","hasName","title","imageNameProps","containerProps","createElement","__assign","root","image"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Icon/ImageIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\nimport type { IImageIconProps } from './Icon.types';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties, [\n    'aria-label',\n    'aria-labelledby',\n    'title',\n    'aria-describedby',\n  ]);\n  const altText = imageProps.alt || props['aria-label'];\n  const hasName =\n    altText ||\n    props['aria-labelledby'] ||\n    props.title ||\n    imageProps['aria-label'] ||\n    imageProps['aria-labelledby'] ||\n    imageProps.title;\n\n  // move naming or describing attributes from the container (where they are invalid) to the image\n  const imageNameProps = {\n    'aria-labelledby': props['aria-labelledby'],\n    'aria-describedby': props['aria-describedby'],\n    title: props.title,\n  };\n\n  const containerProps = hasName\n    ? {}\n    : {\n        'aria-hidden': true,\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageNameProps} {...imageProps} alt={hasName ? altText : ''} />\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,GAAG,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,iBAAiB;AAC5E,SAASC,UAAU,EAAEC,OAAO,QAAQ,eAAe;AAGnD;;;;;AAKA,OAAO,IAAMC,SAAS,GAA6C,SAAAA,CAAAC,KAAK;EAC9D,IAAAC,SAAS,GAAiBD,KAAK,CAAAC,SAAtB;IAAEC,UAAU,GAAKF,KAAK,CAAAE,UAAV;EAE7B,IAAMC,WAAW,GAAGR,cAAc,CAAuCK,KAAK,EAAEJ,qBAAqB,EAAE,CACrG,YAAY,EACZ,iBAAiB,EACjB,OAAO,EACP,kBAAkB,CACnB,CAAC;EACF,IAAMQ,OAAO,GAAGF,UAAU,CAACG,GAAG,IAAIL,KAAK,CAAC,YAAY,CAAC;EACrD,IAAMM,OAAO,GACXF,OAAO,IACPJ,KAAK,CAAC,iBAAiB,CAAC,IACxBA,KAAK,CAACO,KAAK,IACXL,UAAU,CAAC,YAAY,CAAC,IACxBA,UAAU,CAAC,iBAAiB,CAAC,IAC7BA,UAAU,CAACK,KAAK;EAElB;EACA,IAAMC,cAAc,GAAG;IACrB,iBAAiB,EAAER,KAAK,CAAC,iBAAiB,CAAC;IAC3C,kBAAkB,EAAEA,KAAK,CAAC,kBAAkB,CAAC;IAC7CO,KAAK,EAAEP,KAAK,CAACO;GACd;EAED,IAAME,cAAc,GAAGH,OAAO,GAC1B,EAAE,GACF;IACE,aAAa,EAAE;GAChB;EAEL,OACEd,KAAA,CAAAkB,aAAA,QAAAC,QAAA,KAASF,cAAc,EAAMN,WAAW;IAAEF,SAAS,EAAEP,GAAG,CAACI,OAAO,EAAED,UAAU,CAACe,IAAI,EAAEf,UAAU,CAACgB,KAAK,EAAEZ,SAAS;EAAC,IAC7GT,KAAA,CAAAkB,aAAA,CAACjB,KAAK,EAAAkB,QAAA,KAAKH,cAAc,EAAMN,UAAU;IAAEG,GAAG,EAAEC,OAAO,GAAGF,OAAO,GAAG;EAAE,GAAI,CACtE;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}