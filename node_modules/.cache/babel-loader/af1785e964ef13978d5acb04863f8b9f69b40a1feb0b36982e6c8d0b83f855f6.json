{"ast":null,"code":"import * as React from 'react';\nimport { FocusZone } from '../../../FocusZone';\nimport { addYears, setMonth, getYearStart, getYearEnd, getMonthStart, getMonthEnd, compareDatePart, DEFAULT_DATE_FORMATTING } from '@fluentui/date-time-utilities';\nimport { Icon } from '../../../Icon';\nimport { getStyles } from './CalendarMonth.styles';\nimport { css, getRTL, classNamesFunction, KeyCodes, format, getPropsWithDefaults } from '@fluentui/utilities';\nimport { CalendarYear } from '../CalendarYear/CalendarYear';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar MONTHS_PER_ROW = 4;\nvar getClassNames = classNamesFunction();\nvar DEFAULT_PROPS = {\n  styles: getStyles,\n  strings: undefined,\n  navigationIcons: defaultCalendarNavigationIcons,\n  dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n  yearPickerHidden: false\n};\nfunction useAnimateBackwards(_a) {\n  var navigatedDate = _a.navigatedDate;\n  var currentYear = navigatedDate.getFullYear();\n  var previousYear = usePrevious(currentYear);\n  if (previousYear === undefined || previousYear === currentYear) {\n    return undefined;\n  } else {\n    return previousYear > currentYear;\n  }\n}\nfunction useFocusLogic(_a) {\n  var componentRef = _a.componentRef;\n  var navigatedMonthRef = React.useRef(null);\n  var calendarYearRef = React.useRef(null);\n  var focusOnUpdate = React.useRef(false);\n  var focus = React.useCallback(function () {\n    if (calendarYearRef.current) {\n      calendarYearRef.current.focus();\n    } else if (navigatedMonthRef.current) {\n      navigatedMonthRef.current.focus();\n    }\n  }, []);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: focus\n    };\n  }, [focus]);\n  React.useEffect(function () {\n    if (focusOnUpdate.current) {\n      focus();\n      focusOnUpdate.current = false;\n    }\n  });\n  var focusOnNextUpdate = function () {\n    focusOnUpdate.current = true;\n  };\n  return [navigatedMonthRef, calendarYearRef, focusOnNextUpdate];\n}\nexport var CalendarMonthBase = function (propsWithoutDefaults) {\n  var _a, _b;\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  var _c = useFocusLogic(props),\n    navigatedMonthRef = _c[0],\n    calendarYearRef = _c[1],\n    focusOnNextUpdate = _c[2];\n  var _d = React.useState(false),\n    isYearPickerVisible = _d[0],\n    setIsYearPickerVisible = _d[1];\n  var animateBackwards = useAnimateBackwards(props);\n  var navigatedDate = props.navigatedDate,\n    selectedDate = props.selectedDate,\n    strings = props.strings,\n    _e = props.today,\n    today = _e === void 0 ? new Date() : _e,\n    navigationIcons = props.navigationIcons,\n    dateTimeFormatter = props.dateTimeFormatter,\n    minDate = props.minDate,\n    maxDate = props.maxDate,\n    theme = props.theme,\n    styles = props.styles,\n    className = props.className,\n    allFocusable = props.allFocusable,\n    highlightCurrentMonth = props.highlightCurrentMonth,\n    highlightSelectedMonth = props.highlightSelectedMonth,\n    animationDirection = props.animationDirection,\n    yearPickerHidden = props.yearPickerHidden,\n    onNavigateDate = props.onNavigateDate;\n  var selectMonthCallback = function (newMonth) {\n    return function () {\n      return onSelectMonth(newMonth);\n    };\n  };\n  var onSelectNextYear = function () {\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  };\n  var onSelectPrevYear = function () {\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  };\n  var onSelectMonth = function (newMonth) {\n    var _a;\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props);\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  };\n  var onHeaderSelect = function () {\n    var _a;\n    if (!yearPickerHidden) {\n      focusOnNextUpdate();\n      setIsYearPickerVisible(true);\n    } else {\n      (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n  };\n  var onSelectYear = function (selectedYear) {\n    focusOnNextUpdate();\n    var navYear = navigatedDate.getFullYear();\n    if (navYear !== selectedYear) {\n      var newNavigationDate = new Date(navigatedDate.getTime());\n      newNavigationDate.setFullYear(selectedYear);\n      // for min and max dates, adjust the new navigation date - perhaps this should be\n      // checked on the master navigation date handler (i.e. in Calendar)\n      if (maxDate && newNavigationDate > maxDate) {\n        newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\n      } else if (minDate && newNavigationDate < minDate) {\n        newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\n      }\n      onNavigateDate(newNavigationDate, true);\n    }\n    setIsYearPickerVisible(false);\n  };\n  var onYearPickerHeaderSelect = function (focus) {\n    focusOnNextUpdate();\n    setIsYearPickerVisible(false);\n  };\n  // navigationIcons has a default value in defaultProps, but typescript doesn't recognize this\n  var leftNavigationIcon = navigationIcons.leftNavigation;\n  var rightNavigationIcon = navigationIcons.rightNavigation;\n  var dateFormatter = dateTimeFormatter;\n  // determine if previous/next years are in bounds\n  var isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n  var isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect || !yearPickerHidden,\n    highlightCurrent: highlightCurrentMonth,\n    highlightSelected: highlightSelectedMonth,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  if (isYearPickerVisible) {\n    var _f = getYearStrings(props),\n      onRenderYear = _f[0],\n      yearStrings = _f[1];\n    // use navigated date for the year picker\n    return React.createElement(CalendarYear, {\n      key: 'calendarYear',\n      minYear: minDate ? minDate.getFullYear() : undefined,\n      maxYear: maxDate ? maxDate.getFullYear() : undefined,\n      // eslint-disable-next-line react/jsx-no-bind\n      onSelectYear: onSelectYear,\n      navigationIcons: navigationIcons,\n      // eslint-disable-next-line react/jsx-no-bind\n      onHeaderSelect: onYearPickerHeaderSelect,\n      selectedYear: selectedDate ? selectedDate.getFullYear() : navigatedDate ? navigatedDate.getFullYear() : undefined,\n      navigatedYear: navigatedDate.getFullYear(),\n      onRenderYear: onRenderYear,\n      strings: yearStrings,\n      componentRef: calendarYearRef,\n      styles: styles,\n      highlightCurrentYear: highlightCurrentMonth,\n      highlightSelectedYear: highlightSelectedMonth,\n      animationDirection: animationDirection\n    });\n  }\n  var rowIndexes = [];\n  for (var i = 0; i < strings.shortMonths.length / MONTHS_PER_ROW; i++) {\n    rowIndexes.push(i);\n  }\n  var yearString = dateFormatter.formatYear(navigatedDate);\n  var headerAriaLabel = strings.monthPickerHeaderAriaLabel ? format(strings.monthPickerHeaderAriaLabel, yearString) : yearString;\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(\"div\", {\n    className: classNames.headerContainer\n  }, React.createElement(\"button\", {\n    className: classNames.currentItemButton,\n    onClick: onHeaderSelect,\n    onKeyDown: onButtonKeyDown(onHeaderSelect),\n    \"aria-label\": headerAriaLabel,\n    \"data-is-focusable\": !!props.onHeaderSelect || !yearPickerHidden,\n    tabIndex: !!props.onHeaderSelect || !yearPickerHidden ? 0 : -1,\n    type: \"button\"\n  }, React.createElement(\"span\", {\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, yearString)), React.createElement(\"div\", {\n    className: classNames.navigationButtonsContainer\n  }, React.createElement(\"button\", {\n    className: css(classNames.navigationButton, (_a = {}, _a[classNames.disabled] = !isPrevYearInBounds, _a)),\n    \"aria-disabled\": !isPrevYearInBounds,\n    tabIndex: isPrevYearInBounds ? undefined : allFocusable ? 0 : -1,\n    onClick: isPrevYearInBounds ? onSelectPrevYear : undefined,\n    onKeyDown: isPrevYearInBounds ? onButtonKeyDown(onSelectPrevYear) : undefined,\n    title: strings.prevYearAriaLabel ? strings.prevYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, -1)) : undefined,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    iconName: getRTL() ? rightNavigationIcon : leftNavigationIcon\n  })), React.createElement(\"button\", {\n    className: css(classNames.navigationButton, (_b = {}, _b[classNames.disabled] = !isNextYearInBounds, _b)),\n    \"aria-disabled\": !isNextYearInBounds,\n    tabIndex: isNextYearInBounds ? undefined : allFocusable ? 0 : -1,\n    onClick: isNextYearInBounds ? onSelectNextYear : undefined,\n    onKeyDown: isNextYearInBounds ? onButtonKeyDown(onSelectNextYear) : undefined,\n    title: strings.nextYearAriaLabel ? strings.nextYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, 1)) : undefined,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    iconName: getRTL() ? leftNavigationIcon : rightNavigationIcon\n  })))), React.createElement(FocusZone, null, React.createElement(\"div\", {\n    className: classNames.gridContainer,\n    role: \"grid\",\n    \"aria-label\": yearString\n  }, rowIndexes.map(function (rowNum) {\n    var monthsForRow = strings.shortMonths.slice(rowNum * MONTHS_PER_ROW, (rowNum + 1) * MONTHS_PER_ROW);\n    return React.createElement(\"div\", {\n      key: 'monthRow_' + rowNum + navigatedDate.getFullYear(),\n      role: \"row\",\n      className: classNames.buttonRow\n    }, monthsForRow.map(function (month, index) {\n      var _a;\n      var monthIndex = rowNum * MONTHS_PER_ROW + index;\n      var indexedMonth = setMonth(navigatedDate, monthIndex);\n      var isNavigatedMonth = navigatedDate.getMonth() === monthIndex;\n      var isSelectedMonth = selectedDate.getMonth() === monthIndex;\n      var isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n      var isInBounds = (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) && (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n      return React.createElement(\"button\", {\n        ref: isNavigatedMonth ? navigatedMonthRef : undefined,\n        role: 'gridcell',\n        className: css(classNames.itemButton, (_a = {}, _a[classNames.current] = highlightCurrentMonth && isCurrentMonth(monthIndex, navigatedDate.getFullYear(), today), _a[classNames.selected] = highlightSelectedMonth && isSelectedMonth && isSelectedYear, _a[classNames.disabled] = !isInBounds, _a)),\n        disabled: !allFocusable && !isInBounds,\n        key: monthIndex,\n        onClick: isInBounds ? selectMonthCallback(monthIndex) : undefined,\n        onKeyDown: isInBounds ? onButtonKeyDown(selectMonthCallback(monthIndex)) : undefined,\n        \"aria-label\": dateFormatter.formatMonth(indexedMonth, strings),\n        \"aria-selected\": isNavigatedMonth,\n        \"data-is-focusable\": isInBounds ? true : undefined,\n        type: \"button\"\n      }, month);\n    }));\n  }))));\n};\nCalendarMonthBase.displayName = 'CalendarMonthBase';\nfunction getYearStrings(_a) {\n  var strings = _a.strings,\n    navigatedDate = _a.navigatedDate,\n    dateTimeFormatter = _a.dateTimeFormatter;\n  var yearToString = function (year) {\n    if (dateTimeFormatter) {\n      // create a date based on the current nav date\n      var yearFormattingDate = new Date(navigatedDate.getTime());\n      yearFormattingDate.setFullYear(year);\n      return dateTimeFormatter.formatYear(yearFormattingDate);\n    }\n    return String(year);\n  };\n  var yearRangeToString = function (yearRange) {\n    return \"\".concat(yearToString(yearRange.fromYear), \" - \").concat(yearToString(yearRange.toYear));\n  };\n  var yearRangeToNextDecadeLabel = function (yearRange) {\n    return strings.nextYearRangeAriaLabel ? \"\".concat(strings.nextYearRangeAriaLabel, \" \").concat(yearRangeToString(yearRange)) : '';\n  };\n  var yearRangeToPrevDecadeLabel = function (yearRange) {\n    return strings.prevYearRangeAriaLabel ? \"\".concat(strings.prevYearRangeAriaLabel, \" \").concat(yearRangeToString(yearRange)) : '';\n  };\n  return [yearToString, {\n    rangeAriaLabel: yearRangeToString,\n    prevRangeAriaLabel: yearRangeToPrevDecadeLabel,\n    nextRangeAriaLabel: yearRangeToNextDecadeLabel,\n    headerAriaLabelFormatString: strings.yearPickerHeaderAriaLabel\n  }];\n}\nfunction isCurrentMonth(month, year, today) {\n  return today.getFullYear() === year && today.getMonth() === month;\n}\nfunction onButtonKeyDown(callback) {\n  return function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        callback();\n        break;\n    }\n  };\n}","map":{"version":3,"names":["React","FocusZone","addYears","setMonth","getYearStart","getYearEnd","getMonthStart","getMonthEnd","compareDatePart","DEFAULT_DATE_FORMATTING","Icon","getStyles","css","getRTL","classNamesFunction","KeyCodes","format","getPropsWithDefaults","CalendarYear","usePrevious","defaultCalendarNavigationIcons","MONTHS_PER_ROW","getClassNames","DEFAULT_PROPS","styles","strings","undefined","navigationIcons","dateTimeFormatter","yearPickerHidden","useAnimateBackwards","_a","navigatedDate","currentYear","getFullYear","previousYear","useFocusLogic","componentRef","navigatedMonthRef","useRef","calendarYearRef","focusOnUpdate","focus","useCallback","current","useImperativeHandle","useEffect","focusOnNextUpdate","CalendarMonthBase","propsWithoutDefaults","props","_c","_d","useState","isYearPickerVisible","setIsYearPickerVisible","animateBackwards","selectedDate","_e","today","Date","minDate","maxDate","theme","className","allFocusable","highlightCurrentMonth","highlightSelectedMonth","animationDirection","onNavigateDate","selectMonthCallback","newMonth","onSelectMonth","onSelectNextYear","onSelectPrevYear","onHeaderSelect","call","onSelectYear","selectedYear","navYear","newNavigationDate","getTime","setFullYear","getMonth","onYearPickerHeaderSelect","leftNavigationIcon","leftNavigation","rightNavigationIcon","rightNavigation","dateFormatter","isPrevYearInBounds","isNextYearInBounds","classNames","hasHeaderClickCallback","highlightCurrent","highlightSelected","_f","getYearStrings","onRenderYear","yearStrings","createElement","key","minYear","maxYear","navigatedYear","highlightCurrentYear","highlightSelectedYear","rowIndexes","i","shortMonths","length","push","yearString","formatYear","headerAriaLabel","monthPickerHeaderAriaLabel","root","headerContainer","currentItemButton","onClick","onKeyDown","onButtonKeyDown","tabIndex","type","navigationButtonsContainer","navigationButton","disabled","title","prevYearAriaLabel","iconName","_b","nextYearAriaLabel","gridContainer","role","map","rowNum","monthsForRow","slice","buttonRow","month","index","monthIndex","indexedMonth","isNavigatedMonth","isSelectedMonth","isSelectedYear","isInBounds","ref","itemButton","isCurrentMonth","selected","formatMonth","displayName","yearToString","year","yearFormattingDate","String","yearRangeToString","yearRange","concat","fromYear","toYear","yearRangeToNextDecadeLabel","nextYearRangeAriaLabel","yearRangeToPrevDecadeLabel","prevYearRangeAriaLabel","rangeAriaLabel","prevRangeAriaLabel","nextRangeAriaLabel","headerAriaLabelFormatString","yearPickerHeaderAriaLabel","callback","ev","which","enter"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Calendar/src/components/Calendar/CalendarMonth/CalendarMonth.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FocusZone } from '../../../FocusZone';\nimport {\n  addYears,\n  setMonth,\n  getYearStart,\n  getYearEnd,\n  getMonthStart,\n  getMonthEnd,\n  compareDatePart,\n  DEFAULT_DATE_FORMATTING,\n} from '@fluentui/date-time-utilities';\nimport { Icon } from '../../../Icon';\nimport { getStyles } from './CalendarMonth.styles';\nimport { css, getRTL, classNamesFunction, KeyCodes, format, getPropsWithDefaults } from '@fluentui/utilities';\nimport { CalendarYear } from '../CalendarYear/CalendarYear';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nimport type { ICalendarMonthProps, ICalendarMonthStyles, ICalendarMonthStyleProps } from './CalendarMonth.types';\nimport type { ICalendarYear, ICalendarYearRange } from '../CalendarYear/CalendarYear.types';\n\nconst MONTHS_PER_ROW = 4;\n\nconst getClassNames = classNamesFunction<ICalendarMonthStyleProps, ICalendarMonthStyles>();\n\nconst DEFAULT_PROPS: Readonly<Partial<ICalendarMonthProps>> = {\n  styles: getStyles,\n  strings: undefined,\n  navigationIcons: defaultCalendarNavigationIcons,\n  dateTimeFormatter: DEFAULT_DATE_FORMATTING,\n  yearPickerHidden: false,\n};\n\nfunction useAnimateBackwards({ navigatedDate }: ICalendarMonthProps) {\n  const currentYear = navigatedDate.getFullYear();\n  const previousYear = usePrevious(currentYear);\n\n  if (previousYear === undefined || previousYear === currentYear) {\n    return undefined;\n  } else {\n    return previousYear > currentYear;\n  }\n}\n\nfunction useFocusLogic({ componentRef }: ICalendarMonthProps) {\n  const navigatedMonthRef = React.useRef<HTMLButtonElement>(null);\n  const calendarYearRef = React.useRef<ICalendarYear>(null);\n  const focusOnUpdate = React.useRef(false);\n\n  const focus = React.useCallback(() => {\n    if (calendarYearRef.current) {\n      calendarYearRef.current.focus();\n    } else if (navigatedMonthRef.current) {\n      navigatedMonthRef.current.focus();\n    }\n  }, []);\n\n  React.useImperativeHandle(componentRef, () => ({ focus }), [focus]);\n\n  React.useEffect(() => {\n    if (focusOnUpdate.current) {\n      focus();\n      focusOnUpdate.current = false;\n    }\n  });\n\n  const focusOnNextUpdate = () => {\n    focusOnUpdate.current = true;\n  };\n\n  return [navigatedMonthRef, calendarYearRef, focusOnNextUpdate] as const;\n}\n\nexport const CalendarMonthBase: React.FunctionComponent<ICalendarMonthProps> = propsWithoutDefaults => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  const [navigatedMonthRef, calendarYearRef, focusOnNextUpdate] = useFocusLogic(props);\n  const [isYearPickerVisible, setIsYearPickerVisible] = React.useState(false);\n\n  const animateBackwards = useAnimateBackwards(props);\n\n  const {\n    navigatedDate,\n    selectedDate,\n    strings,\n    today = new Date(),\n    navigationIcons,\n    dateTimeFormatter,\n    minDate,\n    maxDate,\n    theme,\n    styles,\n    className,\n    allFocusable,\n    highlightCurrentMonth,\n    highlightSelectedMonth,\n    animationDirection,\n    yearPickerHidden,\n    onNavigateDate,\n  } = props;\n\n  const selectMonthCallback = (newMonth: number): (() => void) => {\n    return () => onSelectMonth(newMonth);\n  };\n\n  const onSelectNextYear = (): void => {\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  };\n\n  const onSelectPrevYear = (): void => {\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  };\n\n  const onSelectMonth = (newMonth: number): void => {\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    props.onHeaderSelect?.();\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  };\n\n  const onHeaderSelect = (): void => {\n    if (!yearPickerHidden) {\n      focusOnNextUpdate();\n      setIsYearPickerVisible(true);\n    } else {\n      props.onHeaderSelect?.();\n    }\n  };\n\n  const onSelectYear = (selectedYear: number) => {\n    focusOnNextUpdate();\n    const navYear = navigatedDate.getFullYear();\n    if (navYear !== selectedYear) {\n      let newNavigationDate = new Date(navigatedDate.getTime());\n      newNavigationDate.setFullYear(selectedYear);\n      // for min and max dates, adjust the new navigation date - perhaps this should be\n      // checked on the master navigation date handler (i.e. in Calendar)\n      if (maxDate && newNavigationDate > maxDate) {\n        newNavigationDate = setMonth(newNavigationDate, maxDate.getMonth());\n      } else if (minDate && newNavigationDate < minDate) {\n        newNavigationDate = setMonth(newNavigationDate, minDate.getMonth());\n      }\n      onNavigateDate(newNavigationDate, true);\n    }\n    setIsYearPickerVisible(false);\n  };\n\n  const onYearPickerHeaderSelect = (focus: boolean): void => {\n    focusOnNextUpdate();\n    setIsYearPickerVisible(false);\n  };\n\n  // navigationIcons has a default value in defaultProps, but typescript doesn't recognize this\n  const leftNavigationIcon = navigationIcons!.leftNavigation;\n  const rightNavigationIcon = navigationIcons!.rightNavigation;\n  const dateFormatter = dateTimeFormatter!;\n\n  // determine if previous/next years are in bounds\n  const isPrevYearInBounds = minDate ? compareDatePart(minDate, getYearStart(navigatedDate)) < 0 : true;\n  const isNextYearInBounds = maxDate ? compareDatePart(getYearEnd(navigatedDate), maxDate) < 0 : true;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    hasHeaderClickCallback: !!props.onHeaderSelect || !yearPickerHidden,\n    highlightCurrent: highlightCurrentMonth,\n    highlightSelected: highlightSelectedMonth,\n    animateBackwards,\n    animationDirection,\n  });\n\n  if (isYearPickerVisible) {\n    const [onRenderYear, yearStrings] = getYearStrings(props);\n    // use navigated date for the year picker\n    return (\n      <CalendarYear\n        key={'calendarYear'}\n        minYear={minDate ? minDate.getFullYear() : undefined}\n        maxYear={maxDate ? maxDate.getFullYear() : undefined}\n        // eslint-disable-next-line react/jsx-no-bind\n        onSelectYear={onSelectYear}\n        navigationIcons={navigationIcons}\n        // eslint-disable-next-line react/jsx-no-bind\n        onHeaderSelect={onYearPickerHeaderSelect}\n        selectedYear={\n          selectedDate ? selectedDate.getFullYear() : navigatedDate ? navigatedDate.getFullYear() : undefined\n        }\n        navigatedYear={navigatedDate.getFullYear()}\n        onRenderYear={onRenderYear}\n        strings={yearStrings}\n        componentRef={calendarYearRef}\n        styles={styles}\n        highlightCurrentYear={highlightCurrentMonth}\n        highlightSelectedYear={highlightSelectedMonth}\n        animationDirection={animationDirection}\n      />\n    );\n  }\n\n  const rowIndexes = [];\n  for (let i = 0; i < strings.shortMonths.length / MONTHS_PER_ROW; i++) {\n    rowIndexes.push(i);\n  }\n\n  const yearString = dateFormatter.formatYear(navigatedDate);\n  const headerAriaLabel = strings.monthPickerHeaderAriaLabel\n    ? format(strings.monthPickerHeaderAriaLabel, yearString)\n    : yearString;\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.headerContainer}>\n        <button\n          className={classNames.currentItemButton}\n          onClick={onHeaderSelect}\n          onKeyDown={onButtonKeyDown(onHeaderSelect)}\n          aria-label={headerAriaLabel}\n          data-is-focusable={!!props.onHeaderSelect || !yearPickerHidden}\n          tabIndex={!!props.onHeaderSelect || !yearPickerHidden ? 0 : -1}\n          type=\"button\"\n        >\n          <span aria-live=\"polite\" aria-atomic=\"true\">\n            {yearString}\n          </span>\n        </button>\n        <div className={classNames.navigationButtonsContainer}>\n          <button\n            className={css(classNames.navigationButton, {\n              [classNames.disabled]: !isPrevYearInBounds,\n            })}\n            aria-disabled={!isPrevYearInBounds}\n            tabIndex={isPrevYearInBounds ? undefined : allFocusable ? 0 : -1}\n            onClick={isPrevYearInBounds ? onSelectPrevYear : undefined}\n            onKeyDown={isPrevYearInBounds ? onButtonKeyDown(onSelectPrevYear) : undefined}\n            title={\n              strings.prevYearAriaLabel\n                ? strings.prevYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, -1))\n                : undefined\n            }\n            type=\"button\"\n          >\n            <Icon iconName={getRTL() ? rightNavigationIcon : leftNavigationIcon} />\n          </button>\n          <button\n            className={css(classNames.navigationButton, {\n              [classNames.disabled]: !isNextYearInBounds,\n            })}\n            aria-disabled={!isNextYearInBounds}\n            tabIndex={isNextYearInBounds ? undefined : allFocusable ? 0 : -1}\n            onClick={isNextYearInBounds ? onSelectNextYear : undefined}\n            onKeyDown={isNextYearInBounds ? onButtonKeyDown(onSelectNextYear) : undefined}\n            title={\n              strings.nextYearAriaLabel\n                ? strings.nextYearAriaLabel + ' ' + dateFormatter.formatYear(addYears(navigatedDate, 1))\n                : undefined\n            }\n            type=\"button\"\n          >\n            <Icon iconName={getRTL() ? leftNavigationIcon : rightNavigationIcon} />\n          </button>\n        </div>\n      </div>\n      <FocusZone>\n        <div className={classNames.gridContainer} role=\"grid\" aria-label={yearString}>\n          {rowIndexes.map((rowNum: number) => {\n            const monthsForRow = strings.shortMonths.slice(rowNum * MONTHS_PER_ROW, (rowNum + 1) * MONTHS_PER_ROW);\n            return (\n              <div key={'monthRow_' + rowNum + navigatedDate.getFullYear()} role=\"row\" className={classNames.buttonRow}>\n                {monthsForRow.map((month: string, index: number) => {\n                  const monthIndex = rowNum * MONTHS_PER_ROW + index;\n                  const indexedMonth = setMonth(navigatedDate, monthIndex);\n                  const isNavigatedMonth = navigatedDate.getMonth() === monthIndex;\n                  const isSelectedMonth = selectedDate.getMonth() === monthIndex;\n                  const isSelectedYear = selectedDate.getFullYear() === navigatedDate.getFullYear();\n                  const isInBounds =\n                    (minDate ? compareDatePart(minDate, getMonthEnd(indexedMonth)) < 1 : true) &&\n                    (maxDate ? compareDatePart(getMonthStart(indexedMonth), maxDate) < 1 : true);\n\n                  return (\n                    <button\n                      ref={isNavigatedMonth ? navigatedMonthRef : undefined}\n                      role={'gridcell'}\n                      className={css(classNames.itemButton, {\n                        [classNames.current]:\n                          highlightCurrentMonth && isCurrentMonth(monthIndex, navigatedDate.getFullYear(), today),\n                        [classNames.selected]: highlightSelectedMonth && isSelectedMonth && isSelectedYear,\n                        [classNames.disabled]: !isInBounds,\n                      })}\n                      disabled={!allFocusable && !isInBounds}\n                      key={monthIndex}\n                      onClick={isInBounds ? selectMonthCallback(monthIndex) : undefined}\n                      onKeyDown={isInBounds ? onButtonKeyDown(selectMonthCallback(monthIndex)) : undefined}\n                      aria-label={dateFormatter.formatMonth(indexedMonth, strings)}\n                      aria-selected={isNavigatedMonth}\n                      data-is-focusable={isInBounds ? true : undefined}\n                      type=\"button\"\n                    >\n                      {month}\n                    </button>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </FocusZone>\n    </div>\n  );\n};\nCalendarMonthBase.displayName = 'CalendarMonthBase';\n\nfunction getYearStrings({ strings, navigatedDate, dateTimeFormatter }: ICalendarMonthProps) {\n  const yearToString = (year: number) => {\n    if (dateTimeFormatter) {\n      // create a date based on the current nav date\n      const yearFormattingDate = new Date(navigatedDate.getTime());\n      yearFormattingDate.setFullYear(year);\n      return dateTimeFormatter.formatYear(yearFormattingDate);\n    }\n    return String(year);\n  };\n\n  const yearRangeToString = (yearRange: ICalendarYearRange) => {\n    return `${yearToString(yearRange.fromYear)} - ${yearToString(yearRange.toYear)}`;\n  };\n\n  const yearRangeToNextDecadeLabel = (yearRange: ICalendarYearRange) => {\n    return strings.nextYearRangeAriaLabel ? `${strings.nextYearRangeAriaLabel} ${yearRangeToString(yearRange)}` : '';\n  };\n\n  const yearRangeToPrevDecadeLabel = (yearRange: ICalendarYearRange) => {\n    return strings.prevYearRangeAriaLabel ? `${strings.prevYearRangeAriaLabel} ${yearRangeToString(yearRange)}` : '';\n  };\n\n  return [\n    yearToString,\n    {\n      rangeAriaLabel: yearRangeToString,\n      prevRangeAriaLabel: yearRangeToPrevDecadeLabel,\n      nextRangeAriaLabel: yearRangeToNextDecadeLabel,\n      headerAriaLabelFormatString: strings.yearPickerHeaderAriaLabel,\n    } as const,\n  ] as const;\n}\n\nfunction isCurrentMonth(month: number, year: number, today: Date): boolean {\n  return today.getFullYear() === year && today.getMonth() === month;\n}\n\nfunction onButtonKeyDown(callback: () => void): (ev: React.KeyboardEvent<HTMLButtonElement>) => void {\n  return (ev: React.KeyboardEvent<HTMLButtonElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.enter:\n        callback();\n        break;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}