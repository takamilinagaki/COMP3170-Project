{"ast":null,"code":"var _a, _b, _c, _d, _e;\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\nvar panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\nvar panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n};\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nvar smallPanelSelectors = (_a = {}, _a[\"@media (min-width: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n  width: panelWidth.sm\n}, _a);\nvar mediumPanelSelectors = (_b = {}, _b[\"@media (min-width: \".concat(ScreenWidthMinLarge, \"px)\")] = {\n  width: panelWidth.md1\n}, _b[\"@media (min-width: \".concat(ScreenWidthMinXLarge, \"px)\")] = {\n  width: panelWidth.md2\n}, _b);\nvar largePanelSelectors = (_c = {}, _c[\"@media (min-width: \".concat(ScreenWidthMinUhfMobile, \"px)\")] = {\n  left: panelMargin.md,\n  width: panelWidth.auto\n}, _c[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n  left: panelMargin.lg\n}, _c);\nvar largeFixedPanelSelectors = (_d = {}, _d[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n  left: panelMargin.auto,\n  width: panelWidth.lg\n}, _d);\nvar extraLargePanelSelectors = (_e = {}, _e[\"@media (min-width: \".concat(ScreenWidthMinXXLarge, \"px)\")] = {\n  left: panelMargin.xl\n}, _e);\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nvar getPanelBreakpoints = function (type) {\n  var selectors;\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = __assign({}, smallPanelSelectors);\n      break;\n    case PanelType.medium:\n      selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n      break;\n    case PanelType.large:\n      selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n      break;\n    case PanelType.largeFixed:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n      break;\n    case PanelType.extraLarge:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n      break;\n    default:\n      break;\n  }\n  return selectors;\n};\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n  var className = props.className,\n    focusTrapZoneClassName = props.focusTrapZoneClassName,\n    hasCloseButton = props.hasCloseButton,\n    headerClassName = props.headerClassName,\n    isAnimating = props.isAnimating,\n    isFooterSticky = props.isFooterSticky,\n    isFooterAtBottom = props.isFooterAtBottom,\n    isOnRightSide = props.isOnRightSide,\n    isOpen = props.isOpen,\n    isHiddenOnDismiss = props.isHiddenOnDismiss,\n    hasCustomNavigation = props.hasCustomNavigation,\n    theme = props.theme,\n    _e = props.type,\n    type = _e === void 0 ? PanelType.smallFixedFar : _e;\n  var effects = theme.effects,\n    fonts = theme.fonts,\n    semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n  return {\n    root: [classNames.root, theme.fonts.medium, isOpen && classNames.isOpen, hasCloseButton && classNames.hasCloseButton, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }, isCustomPanel && isOnRightSide && classNames.custom, isCustomPanel && !isOnRightSide && classNames.customNear, className],\n    overlay: [{\n      pointerEvents: 'auto',\n      cursor: 'pointer'\n    }, isOpen && isAnimating && AnimationClassNames.fadeIn100, !isOpen && isAnimating && AnimationClassNames.fadeOut100],\n    hiddenPanel: [!isOpen && !isAnimating && isHiddenOnDismiss && {\n      visibility: 'hidden'\n    }],\n    main: [classNames.main, {\n      backgroundColor: semanticColors.bodyBackground,\n      boxShadow: effects.elevation64,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      bottom: 0,\n      top: 0,\n      // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n      left: panelMargin.auto,\n      right: panelMargin.none,\n      width: panelWidth.full,\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderLeft: \"3px solid \".concat(semanticColors.variantBorder),\n        borderRight: \"3px solid \".concat(semanticColors.variantBorder)\n      }, _a), getPanelBreakpoints(type))\n    }, type === PanelType.smallFluid && {\n      left: panelMargin.none\n    }, type === PanelType.smallFixedNear && {\n      left: panelMargin.none,\n      right: panelMargin.auto,\n      width: panelWidth.xs\n    }, type === PanelType.customNear && {\n      right: 'auto',\n      left: 0\n    }, isCustomPanel && {\n      maxWidth: '100vw'\n    }, isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40, isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40, !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40, !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40, focusTrapZoneClassName],\n    commands: [classNames.commands, {\n      // Ensures that the sticky header always has a background to prevent overlaps on scroll.\n      backgroundColor: semanticColors.bodyBackground,\n      paddingTop: 18,\n      selectors: (_b = {}, _b[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n        position: 'sticky',\n        top: 0,\n        zIndex: 1\n      }, _b)\n    }, hasCustomNavigation && {\n      paddingTop: 'inherit'\n    }],\n    navigation: [classNames.navigation, {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }, hasCustomNavigation && {\n      height: commandBarHeight\n    }],\n    contentInner: [classNames.contentInner, {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      overflowY: 'hidden'\n    }],\n    header: [classNames.header, sharedPaddingStyles, {\n      alignSelf: 'flex-start'\n    }, hasCloseButton && !hasCustomNavigation && {\n      flexGrow: 1\n    }, hasCustomNavigation && {\n      // Ensure that title doesn't shrink if screen is too small\n      flexShrink: 0\n    }],\n    headerText: [classNames.headerText, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      lineHeight: '27px',\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      wordBreak: 'break-word',\n      hyphens: 'auto'\n    }, headerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto'\n    }, isFooterAtBottom && {\n      flexGrow: 1,\n      display: 'inherit',\n      flexDirection: 'inherit'\n    }],\n    content: [classNames.content, sharedPaddingStyles, {\n      paddingBottom: 20\n    }, isFooterAtBottom && {\n      selectors: (_c = {}, _c[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n        flexGrow: 1\n      }, _c)\n    }],\n    footer: [classNames.footer, {\n      // Ensure that footer doesn't shrink if screen is too small\n      flexShrink: 0,\n      borderTop: '1px solid transparent',\n      transition: \"opacity \".concat(AnimationVariables.durationValue3, \" \").concat(AnimationVariables.easeFunction2),\n      selectors: (_d = {}, _d[\"@media (min-height: \".concat(ScreenWidthMinMedium, \"px)\")] = {\n        position: 'sticky',\n        bottom: 0\n      }, _d)\n    }, isFooterSticky && {\n      backgroundColor: semanticColors.bodyBackground,\n      borderTopColor: semanticColors.variantBorder\n    }],\n    footerInner: [classNames.footerInner, sharedPaddingStyles, {\n      paddingBottom: 16,\n      paddingTop: 16\n    }],\n    subComponentStyles: {\n      closeButton: {\n        root: [classNames.closeButton, {\n          marginRight: 14,\n          color: theme.palette.neutralSecondary,\n          fontSize: IconFontSizes.large\n        }, hasCustomNavigation && {\n          marginRight: 0,\n          height: 'auto',\n          width: '44px'\n        }],\n        rootHovered: {\n          color: theme.palette.neutralPrimary\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["PanelType","AnimationClassNames","AnimationVariables","getGlobalClassNames","HighContrastSelector","ScreenWidthMinMedium","ScreenWidthMinLarge","ScreenWidthMinXLarge","ScreenWidthMinXXLarge","ScreenWidthMinUhfMobile","IconFontSizes","GlobalClassNames","root","main","commands","contentInner","scrollableContent","navigation","closeButton","header","headerText","content","footer","footerInner","isOpen","hasCloseButton","smallFluid","smallFixedNear","smallFixedFar","medium","large","largeFixed","extraLarge","custom","customNear","panelWidth","full","auto","xs","sm","md1","md2","lg","panelMargin","none","md","xl","smallPanelSelectors","_a","concat","width","mediumPanelSelectors","_b","largePanelSelectors","_c","left","largeFixedPanelSelectors","_d","extraLargePanelSelectors","_e","getPanelBreakpoints","type","selectors","__assign","commandBarHeight","sharedPaddingStyles","paddingLeft","paddingRight","getStyles","props","className","focusTrapZoneClassName","headerClassName","isAnimating","isFooterSticky","isFooterAtBottom","isOnRightSide","isHiddenOnDismiss","hasCustomNavigation","theme","effects","fonts","semanticColors","classNames","isCustomPanel","pointerEvents","position","top","right","bottom","overlay","cursor","fadeIn100","fadeOut100","hiddenPanel","visibility","backgroundColor","bodyBackground","boxShadow","elevation64","display","flexDirection","overflowX","overflowY","WebkitOverflowScrolling","borderLeft","variantBorder","borderRight","maxWidth","slideRightIn40","slideLeftIn40","slideLeftOut40","slideRightOut40","paddingTop","zIndex","justifyContent","height","flexGrow","alignSelf","flexShrink","xLarge","color","bodyText","lineHeight","overflowWrap","wordWrap","wordBreak","hyphens","paddingBottom","borderTop","transition","durationValue3","easeFunction2","borderTopColor","subComponentStyles","marginRight","palette","neutralSecondary","fontSize","rootHovered","neutralPrimary"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Panel/Panel.styles.ts"],"sourcesContent":["import { PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IconFontSizes,\n} from '../../Styling';\nimport type { IPanelStyleProps, IPanelStyles } from './Panel.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        // Ensures that the sticky header always has a background to prevent overlaps on scroll.\n        backgroundColor: semanticColors.bodyBackground,\n        paddingTop: 18,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            top: 0,\n            zIndex: 1,\n          },\n        },\n      },\n      hasCustomNavigation && {\n        paddingTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n        display: 'inherit',\n        flexDirection: 'inherit',\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n      isFooterAtBottom && {\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            flexGrow: 1,\n          },\n        },\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            bottom: 0,\n          },\n        },\n      },\n      isFooterSticky && {\n        backgroundColor: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}