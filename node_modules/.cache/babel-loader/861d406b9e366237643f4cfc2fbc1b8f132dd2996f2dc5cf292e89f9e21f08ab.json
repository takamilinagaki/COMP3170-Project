{"ast":null,"code":"import { mergeThemes } from '@fluentui/theme';\nimport * as React from 'react';\nimport { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nvar themeToIdMap = new Map();\nvar getThemeId = function () {\n  var themes = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    themes[_i] = arguments[_i];\n  }\n  var ids = [];\n  for (var _a = 0, themes_1 = themes; _a < themes_1.length; _a++) {\n    var theme = themes_1[_a];\n    if (theme) {\n      var id = theme.id || themeToIdMap.get(theme);\n      if (!id) {\n        id = getId('');\n        themeToIdMap.set(theme, id);\n      }\n      ids.push(id);\n    }\n  }\n  return ids.join('-');\n};\nexport var useThemeProviderState = function (draftState) {\n  var userTheme = draftState.theme;\n  // Pull contextual theme.\n  var parentTheme = useTheme();\n  // Update the incoming theme with a memoized version of the merged theme.\n  var theme = draftState.theme = React.useMemo(function () {\n    var mergedTheme = mergeThemes(parentTheme, userTheme);\n    mergedTheme.id = getThemeId(parentTheme, userTheme);\n    return mergedTheme;\n  }, [parentTheme, userTheme]);\n  draftState.customizerContext = React.useMemo(function () {\n    return {\n      customizations: {\n        inCustomizerContext: true,\n        settings: {\n          theme: theme\n        },\n        scopedSettings: theme.components || {}\n      }\n    };\n  }, [theme]);\n  if (draftState.theme.rtl !== parentTheme.rtl) {\n    draftState.dir = draftState.theme.rtl ? 'rtl' : 'ltr';\n  }\n};","map":{"version":3,"names":["mergeThemes","React","useTheme","getId","themeToIdMap","Map","getThemeId","themes","_i","arguments","length","ids","_a","themes_1","theme","id","get","set","push","join","useThemeProviderState","draftState","userTheme","parentTheme","useMemo","mergedTheme","customizerContext","customizations","inCustomizerContext","settings","scopedSettings","components","rtl","dir"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/ThemeProvider/useThemeProviderState.tsx"],"sourcesContent":["import { mergeThemes } from '@fluentui/theme';\nimport * as React from 'react';\nimport { useTheme } from './useTheme';\nimport { getId } from '@fluentui/utilities';\nimport type { PartialTheme, Theme } from '@fluentui/theme';\nimport type { ThemeProviderState } from './ThemeProvider.types';\nimport type { ICustomizerContext } from '@fluentui/utilities';\n\nconst themeToIdMap = new Map<Object, string>();\n\nconst getThemeId = (...themes: (Theme | PartialTheme | undefined)[]) => {\n  const ids: string[] = [];\n\n  for (const theme of themes) {\n    if (theme) {\n      let id = (theme as Theme).id || themeToIdMap.get(theme);\n\n      if (!id) {\n        id = getId('');\n        themeToIdMap.set(theme, id);\n      }\n      ids.push(id);\n    }\n  }\n\n  return ids.join('-');\n};\n\nexport const useThemeProviderState = (draftState: ThemeProviderState) => {\n  const userTheme: PartialTheme = draftState.theme;\n\n  // Pull contextual theme.\n  const parentTheme = useTheme();\n\n  // Update the incoming theme with a memoized version of the merged theme.\n  const theme = (draftState.theme = React.useMemo<Theme>(() => {\n    const mergedTheme: Theme = mergeThemes(parentTheme, userTheme);\n\n    mergedTheme.id = getThemeId(parentTheme, userTheme);\n\n    return mergedTheme;\n  }, [parentTheme, userTheme]));\n\n  draftState.customizerContext = React.useMemo<ICustomizerContext>(\n    () => ({\n      customizations: {\n        inCustomizerContext: true,\n        settings: { theme },\n        scopedSettings: theme.components || {},\n      },\n    }),\n    [theme],\n  );\n\n  if (draftState.theme.rtl !== parentTheme.rtl) {\n    draftState.dir = draftState.theme.rtl ? 'rtl' : 'ltr';\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,qBAAqB;AAK3C,IAAMC,YAAY,GAAG,IAAIC,GAAG,EAAkB;AAE9C,IAAMC,UAAU,GAAG,SAAAA,CAAA;EAAC,IAAAC,MAAA;OAAA,IAAAC,EAAA,IAA+C,EAA/CA,EAAA,GAAAC,SAAA,CAAAC,MAA+C,EAA/CF,EAAA,EAA+C;IAA/CD,MAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAClB,IAAMG,GAAG,GAAa,EAAE;EAExB,KAAoB,IAAAC,EAAA,IAAM,EAANC,QAAA,GAAAN,MAAM,EAANK,EAAA,GAAAC,QAAA,CAAAH,MAAM,EAANE,EAAA,EAAM,EAAE;IAAvB,IAAME,KAAK,GAAAD,QAAA,CAAAD,EAAA;IACd,IAAIE,KAAK,EAAE;MACT,IAAIC,EAAE,GAAID,KAAe,CAACC,EAAE,IAAIX,YAAY,CAACY,GAAG,CAACF,KAAK,CAAC;MAEvD,IAAI,CAACC,EAAE,EAAE;QACPA,EAAE,GAAGZ,KAAK,CAAC,EAAE,CAAC;QACdC,YAAY,CAACa,GAAG,CAACH,KAAK,EAAEC,EAAE,CAAC;;MAE7BJ,GAAG,CAACO,IAAI,CAACH,EAAE,CAAC;;;EAIhB,OAAOJ,GAAG,CAACQ,IAAI,CAAC,GAAG,CAAC;AACtB,CAAC;AAED,OAAO,IAAMC,qBAAqB,GAAG,SAAAA,CAACC,UAA8B;EAClE,IAAMC,SAAS,GAAiBD,UAAU,CAACP,KAAK;EAEhD;EACA,IAAMS,WAAW,GAAGrB,QAAQ,EAAE;EAE9B;EACA,IAAMY,KAAK,GAAIO,UAAU,CAACP,KAAK,GAAGb,KAAK,CAACuB,OAAO,CAAQ;IACrD,IAAMC,WAAW,GAAUzB,WAAW,CAACuB,WAAW,EAAED,SAAS,CAAC;IAE9DG,WAAW,CAACV,EAAE,GAAGT,UAAU,CAACiB,WAAW,EAAED,SAAS,CAAC;IAEnD,OAAOG,WAAW;EACpB,CAAC,EAAE,CAACF,WAAW,EAAED,SAAS,CAAC,CAAE;EAE7BD,UAAU,CAACK,iBAAiB,GAAGzB,KAAK,CAACuB,OAAO,CAC1C;IAAM,OAAC;MACLG,cAAc,EAAE;QACdC,mBAAmB,EAAE,IAAI;QACzBC,QAAQ,EAAE;UAAEf,KAAK,EAAAA;QAAA,CAAE;QACnBgB,cAAc,EAAEhB,KAAK,CAACiB,UAAU,IAAI;;KAEvC;EANK,CAMJ,EACF,CAACjB,KAAK,CAAC,CACR;EAED,IAAIO,UAAU,CAACP,KAAK,CAACkB,GAAG,KAAKT,WAAW,CAACS,GAAG,EAAE;IAC5CX,UAAU,CAACY,GAAG,GAAGZ,UAAU,CAACP,KAAK,CAACkB,GAAG,GAAG,KAAK,GAAG,KAAK;;AAEzD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}