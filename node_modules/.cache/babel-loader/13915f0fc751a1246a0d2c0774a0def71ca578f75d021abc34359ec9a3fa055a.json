{"ast":null,"code":"/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes\n * are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\nexport function mergeAriaAttributeValues() {\n  var ariaAttributes = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    ariaAttributes[_i] = arguments[_i];\n  }\n  var mergedAttribute = ariaAttributes.filter(function (arg) {\n    return arg;\n  }).join(' ').trim();\n  return mergedAttribute === '' ? undefined : mergedAttribute;\n}","map":{"version":3,"names":["mergeAriaAttributeValues","ariaAttributes","_i","arguments","length","mergedAttribute","filter","arg","join","trim","undefined"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/aria.ts"],"sourcesContent":["/**\n * ARIA helper to concatenate attributes, returning undefined if all attributes\n * are undefined. (Empty strings are not a valid ARIA attribute value.)\n *\n * @param ariaAttributes - ARIA attributes to merge\n */\nexport function mergeAriaAttributeValues(...ariaAttributes: (string | undefined | false)[]): string | undefined {\n  const mergedAttribute = ariaAttributes\n    .filter((arg: string | undefined | false) => arg)\n    .join(' ')\n    .trim();\n  return mergedAttribute === '' ? undefined : mergedAttribute;\n}\n"],"mappings":"AAAA;;;;;;AAMA,OAAM,SAAUA,wBAAwBA,CAAA;EAAC,IAAAC,cAAA;OAAA,IAAAC,EAAA,IAAiD,EAAjDA,EAAA,GAAAC,SAAA,CAAAC,MAAiD,EAAjDF,EAAA,EAAiD;IAAjDD,cAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EACvC,IAAMG,eAAe,GAAGJ,cAAc,CACnCK,MAAM,CAAC,UAACC,GAA+B;IAAK,OAAAA,GAAG;EAAH,CAAG,CAAC,CAChDC,IAAI,CAAC,GAAG,CAAC,CACTC,IAAI,EAAE;EACT,OAAOJ,eAAe,KAAK,EAAE,GAAGK,SAAS,GAAGL,eAAe;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}