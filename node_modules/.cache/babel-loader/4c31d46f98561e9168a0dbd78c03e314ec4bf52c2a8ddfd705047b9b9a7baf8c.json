{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { CustomizerContext, FocusRectsProvider, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nexport var renderThemeProvider = function (state) {\n  var customizerContext = state.customizerContext,\n    ref = state.ref,\n    theme = state.theme;\n  var Root = state.as || 'div';\n  var rootProps = typeof state.as === 'string' ? getNativeElementProps(state.as, state) : state.as === React.Fragment ? {\n    children: state.children\n  } : omit(state, ['as']);\n  return React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, React.createElement(CustomizerContext.Provider, {\n    value: customizerContext\n  }, React.createElement(FocusRectsProvider, {\n    providerRef: ref\n  }, React.createElement(Root, __assign({}, rootProps)))));\n};","map":{"version":3,"names":["React","CustomizerContext","FocusRectsProvider","getNativeElementProps","omit","ThemeContext","renderThemeProvider","state","customizerContext","ref","theme","Root","as","rootProps","Fragment","children","createElement","Provider","value","providerRef","__assign"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/ThemeProvider/renderThemeProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CustomizerContext, FocusRectsProvider, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport type { ThemeProviderState } from './ThemeProvider.types';\n\nexport const renderThemeProvider = (state: ThemeProviderState) => {\n  const { customizerContext, ref, theme } = state;\n  const Root = state.as || 'div';\n  const rootProps =\n    typeof state.as === 'string'\n      ? getNativeElementProps(state.as, state)\n      : state.as === React.Fragment\n      ? { children: state.children }\n      : omit(state, ['as']);\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <CustomizerContext.Provider value={customizerContext}>\n        <FocusRectsProvider providerRef={ref}>\n          <Root {...rootProps} />\n        </FocusRectsProvider>\n      </CustomizerContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,IAAI,QAAQ,qBAAqB;AACxG,SAASC,YAAY,QAAQ,gBAAgB;AAG7C,OAAO,IAAMC,mBAAmB,GAAG,SAAAA,CAACC,KAAyB;EACnD,IAAAC,iBAAiB,GAAiBD,KAAK,CAAAC,iBAAtB;IAAEC,GAAG,GAAYF,KAAK,CAAAE,GAAjB;IAAEC,KAAK,GAAKH,KAAK,CAAAG,KAAV;EACrC,IAAMC,IAAI,GAAGJ,KAAK,CAACK,EAAE,IAAI,KAAK;EAC9B,IAAMC,SAAS,GACb,OAAON,KAAK,CAACK,EAAE,KAAK,QAAQ,GACxBT,qBAAqB,CAACI,KAAK,CAACK,EAAE,EAAEL,KAAK,CAAC,GACtCA,KAAK,CAACK,EAAE,KAAKZ,KAAK,CAACc,QAAQ,GAC3B;IAAEC,QAAQ,EAAER,KAAK,CAACQ;EAAQ,CAAE,GAC5BX,IAAI,CAACG,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;EAEzB,OACEP,KAAA,CAAAgB,aAAA,CAACX,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAER;EAAK,GACjCV,KAAA,CAAAgB,aAAA,CAACf,iBAAiB,CAACgB,QAAQ;IAACC,KAAK,EAAEV;EAAiB,GAClDR,KAAA,CAAAgB,aAAA,CAACd,kBAAkB;IAACiB,WAAW,EAAEV;EAAG,GAClCT,KAAA,CAAAgB,aAAA,CAACL,IAAI,EAAAS,QAAA,KAAKP,SAAS,EAAI,CACJ,CACM,CACP;AAE5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}