{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nvar COMPONENT_NAME = 'SearchBox';\nvar iconButtonStyles = {\n  root: {\n    height: 'auto'\n  },\n  icon: {\n    fontSize: '12px'\n  }\n};\nvar iconButtonProps = {\n  iconName: 'Clear'\n};\nvar defaultClearButtonProps = {\n  ariaLabel: 'Clear text'\n};\nvar getClassNames = classNamesFunction();\nvar useComponentRef = function (componentRef, inputElementRef, hasFocus) {\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function () {\n        var _a;\n        return (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function () {\n        var _a;\n        return (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      hasFocus: function () {\n        return hasFocus;\n      }\n    };\n  }, [inputElementRef, hasFocus]);\n};\nexport var SearchBoxBase = React.forwardRef(function (props, forwardedRef) {\n  var ariaLabel = props.ariaLabel,\n    className = props.className,\n    _a = props.defaultValue,\n    defaultValue = _a === void 0 ? '' : _a,\n    disabled = props.disabled,\n    underlined = props.underlined,\n    styles = props.styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText = props.labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    _b = props.placeholder,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = _b === void 0 ? labelText : _b,\n    theme = props.theme,\n    _c = props.clearButtonProps,\n    clearButtonProps = _c === void 0 ? defaultClearButtonProps : _c,\n    _d = props.disableAnimation,\n    disableAnimation = _d === void 0 ? false : _d,\n    _e = props.showIcon,\n    showIcon = _e === void 0 ? false : _e,\n    customOnClear = props.onClear,\n    customOnBlur = props.onBlur,\n    customOnEscape = props.onEscape,\n    customOnSearch = props.onSearch,\n    customOnKeyDown = props.onKeyDown,\n    iconProps = props.iconProps,\n    role = props.role,\n    onChange = props.onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged = props.onChanged;\n  var _f = React.useState(false),\n    hasFocus = _f[0],\n    setHasFocus = _f[1];\n  var prevChangeTimestamp = React.useRef();\n  var _g = useControllableValue(props.value, defaultValue, function (ev, newValue) {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev === null || ev === void 0 ? void 0 : ev.timeStamp;\n      onChange === null || onChange === void 0 ? void 0 : onChange(ev, newValue);\n      onChanged === null || onChanged === void 0 ? void 0 : onChanged(newValue);\n    }),\n    uncastValue = _g[0],\n    setValue = _g[1];\n  var value = String(uncastValue);\n  var rootElementRef = React.useRef(null);\n  var inputElementRef = React.useRef(null);\n  var mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  var id = useId(COMPONENT_NAME, props.id);\n  var customOnClearClick = clearButtonProps.onClick;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    underlined: underlined,\n    hasFocus: hasFocus,\n    disabled: disabled,\n    hasInput: value.length > 0,\n    disableAnimation: disableAnimation,\n    showIcon: showIcon\n  });\n  var nativeProps = getNativeProps(props, inputProperties, ['className', 'placeholder', 'onFocus', 'onBlur', 'value', 'role']);\n  var onClear = React.useCallback(function (ev) {\n    var _a;\n    customOnClear === null || customOnClear === void 0 ? void 0 : customOnClear(ev);\n    if (!ev.defaultPrevented) {\n      setValue('');\n      (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  }, [customOnClear, setValue]);\n  var onClearClick = React.useCallback(function (ev) {\n    customOnClearClick === null || customOnClearClick === void 0 ? void 0 : customOnClearClick(ev);\n    if (!ev.defaultPrevented) {\n      onClear(ev);\n    }\n  }, [customOnClearClick, onClear]);\n  var onFocusCapture = function (ev) {\n    var _a;\n    setHasFocus(true);\n    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, ev);\n  };\n  var onClickFocus = function () {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n  var onBlur = React.useCallback(function (ev) {\n    setHasFocus(false);\n    customOnBlur === null || customOnBlur === void 0 ? void 0 : customOnBlur(ev);\n  }, [customOnBlur]);\n  var onInputChange = function (ev) {\n    setValue(ev.target.value, ev);\n  };\n  var onKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape === null || customOnEscape === void 0 ? void 0 : customOnEscape(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown === null || customOnKeyDown === void 0 ? void 0 : customOnKeyDown(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n  return React.createElement(\"div\", {\n    role: role,\n    ref: mergedRootRef,\n    className: classNames.root,\n    onFocusCapture: onFocusCapture\n  }, React.createElement(\"div\", {\n    className: classNames.iconContainer,\n    onClick: onClickFocus,\n    \"aria-hidden\": true\n  }, React.createElement(Icon, __assign({\n    iconName: \"Search\"\n  }, iconProps, {\n    className: classNames.icon\n  }))), React.createElement(\"input\", __assign({}, nativeProps, {\n    id: id,\n    className: classNames.field,\n    placeholder: placeholder,\n    onChange: onInputChange,\n    onInput: onInputChange,\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    value: value,\n    disabled: disabled,\n    role: \"searchbox\",\n    \"aria-label\": ariaLabel,\n    ref: inputElementRef\n  })), value.length > 0 && React.createElement(\"div\", {\n    className: classNames.clearButton\n  }, React.createElement(IconButton, __assign({\n    onBlur: onBlur,\n    styles: iconButtonStyles,\n    iconProps: iconButtonProps\n  }, clearButtonProps, {\n    onClick: onClearClick\n  }))));\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\nfunction useDebugWarning(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      deprecations: {\n        labelText: 'placeholder'\n      }\n    });\n  }\n}","map":{"version":3,"names":["React","KeyCodes","classNamesFunction","getNativeProps","inputProperties","useControllableValue","useId","useMergedRefs","useWarnings","IconButton","Icon","COMPONENT_NAME","iconButtonStyles","root","height","icon","fontSize","iconButtonProps","iconName","defaultClearButtonProps","ariaLabel","getClassNames","useComponentRef","componentRef","inputElementRef","hasFocus","useImperativeHandle","focus","_a","current","blur","SearchBoxBase","forwardRef","props","forwardedRef","className","defaultValue","disabled","underlined","styles","labelText","_b","placeholder","theme","_c","clearButtonProps","_d","disableAnimation","_e","showIcon","customOnClear","onClear","customOnBlur","onBlur","customOnEscape","onEscape","customOnSearch","onSearch","customOnKeyDown","onKeyDown","iconProps","role","onChange","onChanged","_f","useState","setHasFocus","prevChangeTimestamp","useRef","_g","value","ev","newValue","timeStamp","uncastValue","setValue","String","rootElementRef","mergedRootRef","id","customOnClearClick","onClick","classNames","hasInput","length","nativeProps","useCallback","defaultPrevented","stopPropagation","preventDefault","onClearClick","onFocusCapture","onFocus","call","onClickFocus","selectionStart","selectionEnd","onInputChange","target","which","escape","enter","useDebugWarning","createElement","ref","iconContainer","__assign","field","onInput","clearButton","displayName","process","env","NODE_ENV","name","deprecations"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      blur: () => inputElementRef.current?.blur(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}