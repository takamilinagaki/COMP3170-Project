{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nexport var BEAK_HEIGHT = 10;\nexport var BEAK_WIDTH = 18;\nexport var Beak = React.forwardRef(function (props, forwardedRef) {\n  var left = props.left,\n    top = props.top,\n    bottom = props.bottom,\n    right = props.right,\n    color = props.color,\n    _a = props.direction,\n    direction = _a === void 0 ? RectangleEdge.top : _a;\n  var svgHeight;\n  var svgWidth;\n  if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n    svgHeight = BEAK_HEIGHT;\n    svgWidth = BEAK_WIDTH;\n  } else {\n    svgHeight = BEAK_WIDTH;\n    svgWidth = BEAK_HEIGHT;\n  }\n  var pointOne;\n  var pointTwo;\n  var pointThree;\n  var transform;\n  switch (direction) {\n    case RectangleEdge.top:\n    default:\n      pointOne = \"\".concat(BEAK_WIDTH / 2, \", 0\");\n      pointTwo = \"\".concat(BEAK_WIDTH, \", \").concat(BEAK_HEIGHT);\n      pointThree = \"0, \".concat(BEAK_HEIGHT);\n      transform = 'translateY(-100%)';\n      break;\n    case RectangleEdge.right:\n      pointOne = \"0, 0\";\n      pointTwo = \"\".concat(BEAK_HEIGHT, \", \").concat(BEAK_HEIGHT);\n      pointThree = \"0, \".concat(BEAK_WIDTH);\n      transform = 'translateX(100%)';\n      break;\n    case RectangleEdge.bottom:\n      pointOne = \"0, 0\";\n      pointTwo = \"\".concat(BEAK_WIDTH, \", 0\");\n      pointThree = \"\".concat(BEAK_WIDTH / 2, \", \").concat(BEAK_HEIGHT);\n      transform = 'translateY(100%)';\n      break;\n    case RectangleEdge.left:\n      pointOne = \"\".concat(BEAK_HEIGHT, \", 0\");\n      pointTwo = \"0, \".concat(BEAK_HEIGHT);\n      pointThree = \"\".concat(BEAK_HEIGHT, \", \").concat(BEAK_WIDTH);\n      transform = 'translateX(-100%)';\n      break;\n  }\n  var getClassNames = classNamesFunction();\n  var classNames = getClassNames(getStyles, {\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    height: \"\".concat(svgHeight, \"px\"),\n    width: \"\".concat(svgWidth, \"px\"),\n    transform: transform,\n    color: color\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: \"presentation\",\n    ref: forwardedRef\n  }, React.createElement(\"svg\", {\n    height: svgHeight,\n    width: svgWidth,\n    className: classNames.beak\n  }, React.createElement(\"polygon\", {\n    points: pointOne + ' ' + pointTwo + ' ' + pointThree\n  })));\n});\nBeak.displayName = 'Beak';","map":{"version":3,"names":["React","classNamesFunction","getStyles","RectangleEdge","BEAK_HEIGHT","BEAK_WIDTH","Beak","forwardRef","props","forwardedRef","left","top","bottom","right","color","_a","direction","svgHeight","svgWidth","pointOne","pointTwo","pointThree","transform","concat","getClassNames","classNames","height","width","createElement","className","root","role","ref","beak","points","displayName"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Coachmark/src/components/Coachmark/Beak/Beak.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nimport type { IBeakProps, IBeakStylesProps } from './Beak.types';\nimport type { IBeakStyles } from './Beak.styles';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport const Beak: React.FunctionComponent<IBeakProps> = React.forwardRef<HTMLDivElement, IBeakProps>(\n  (props, forwardedRef) => {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\" ref={forwardedRef}>\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  },\n);\nBeak.displayName = 'Beak';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}