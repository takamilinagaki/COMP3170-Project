{"ast":null,"code":"import { getFocusStyle, getGlobalClassNames, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport var DocumentCardPreviewGlobalClassNames = {\n  root: 'ms-DocumentCardPreview',\n  icon: 'ms-DocumentCardPreview-icon',\n  iconContainer: 'ms-DocumentCardPreview-iconContainer'\n};\nexport var getStyles = function (props) {\n  var _a, _b;\n  var theme = props.theme,\n    className = props.className,\n    isFileList = props.isFileList;\n  var palette = theme.palette,\n    fonts = theme.fonts;\n  var classNames = getGlobalClassNames(DocumentCardPreviewGlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.small, {\n      backgroundColor: isFileList ? palette.white : palette.neutralLighterAlt,\n      borderBottom: \"1px solid \".concat(palette.neutralLight),\n      overflow: \"hidden\",\n      position: 'relative'\n    }, className],\n    previewIcon: [classNames.iconContainer, {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    }],\n    icon: [classNames.icon, {\n      left: '10px',\n      bottom: '10px',\n      position: 'absolute'\n    }],\n    fileList: {\n      padding: '16px 16px 0 16px',\n      listStyleType: 'none',\n      margin: 0,\n      selectors: {\n        li: {\n          height: '16px',\n          lineHeight: '16px',\n          display: 'flex',\n          flexWrap: 'nowrap',\n          alignItems: 'center',\n          marginBottom: '8px',\n          overflow: 'hidden'\n        }\n      }\n    },\n    fileListIcon: {\n      display: 'inline-block',\n      flexShrink: 0,\n      marginRight: '8px'\n    },\n    fileListLink: [getFocusStyle(theme, {\n      highContrastStyle: {\n        border: '1px solid WindowText',\n        outline: 'none'\n      }\n    }), {\n      boxSizing: 'border-box',\n      color: palette.neutralDark,\n      flexGrow: 1,\n      overflow: 'hidden',\n      display: 'inline-block',\n      textDecoration: 'none',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      selectors: (_a = {\n        ':hover': {\n          color: palette.themePrimary\n        }\n      }, _a[\".\".concat(IsFocusVisibleClassName, \" &:focus\")] = {\n        selectors: (_b = {}, _b[HighContrastSelector] = {\n          outline: 'none'\n        }, _b)\n      }, _a)\n    }],\n    fileListOverflowText: {\n      padding: '0px 16px 8px 16px',\n      display: 'block'\n    }\n  };\n};","map":{"version":3,"names":["getFocusStyle","getGlobalClassNames","HighContrastSelector","IsFocusVisibleClassName","DocumentCardPreviewGlobalClassNames","root","icon","iconContainer","getStyles","props","theme","className","isFileList","palette","fonts","classNames","small","backgroundColor","white","neutralLighterAlt","borderBottom","concat","neutralLight","overflow","position","previewIcon","display","alignItems","justifyContent","height","left","bottom","fileList","padding","listStyleType","margin","selectors","li","lineHeight","flexWrap","marginBottom","fileListIcon","flexShrink","marginRight","fileListLink","highContrastStyle","border","outline","boxSizing","color","neutralDark","flexGrow","textDecoration","textOverflow","whiteSpace","_a","themePrimary","_b","fileListOverflowText"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/DocumentCard/DocumentCardPreview.styles.ts"],"sourcesContent":["import { getFocusStyle, getGlobalClassNames, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles } from './DocumentCardPreview.types';\n\nexport const DocumentCardPreviewGlobalClassNames = {\n  root: 'ms-DocumentCardPreview',\n  icon: 'ms-DocumentCardPreview-icon',\n  iconContainer: 'ms-DocumentCardPreview-iconContainer',\n};\n\nexport const getStyles = (props: IDocumentCardPreviewStyleProps): IDocumentCardPreviewStyles => {\n  const { theme, className, isFileList } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(DocumentCardPreviewGlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.small,\n      {\n        backgroundColor: isFileList ? palette.white : palette.neutralLighterAlt,\n        borderBottom: `1px solid ${palette.neutralLight}`,\n        overflow: `hidden`,\n        position: 'relative',\n      },\n      className,\n    ],\n    previewIcon: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        left: '10px',\n        bottom: '10px',\n        position: 'absolute',\n      },\n    ],\n    fileList: {\n      padding: '16px 16px 0 16px',\n      listStyleType: 'none',\n      margin: 0,\n      selectors: {\n        li: {\n          height: '16px',\n          lineHeight: '16px',\n          display: 'flex',\n          flexWrap: 'nowrap',\n          alignItems: 'center',\n          marginBottom: '8px',\n          overflow: 'hidden',\n        },\n      },\n    },\n    fileListIcon: {\n      display: 'inline-block',\n      flexShrink: 0,\n      marginRight: '8px',\n    },\n    fileListLink: [\n      getFocusStyle(theme, {\n        highContrastStyle: {\n          border: '1px solid WindowText',\n          outline: 'none',\n        },\n      }),\n      {\n        boxSizing: 'border-box',\n        color: palette.neutralDark,\n        flexGrow: 1,\n        overflow: 'hidden',\n        display: 'inline-block',\n        textDecoration: 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        selectors: {\n          ':hover': {\n            color: palette.themePrimary,\n          },\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            selectors: {\n              [HighContrastSelector]: {\n                outline: 'none',\n              },\n            },\n          },\n        },\n      },\n    ],\n    fileListOverflowText: {\n      padding: '0px 16px 8px 16px',\n      display: 'block',\n    },\n  };\n};\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,mBAAmB,EAAEC,oBAAoB,QAAQ,eAAe;AACxF,SAASC,uBAAuB,QAAQ,iBAAiB;AAGzD,OAAO,IAAMC,mCAAmC,GAAG;EACjDC,IAAI,EAAE,wBAAwB;EAC9BC,IAAI,EAAE,6BAA6B;EACnCC,aAAa,EAAE;CAChB;AAED,OAAO,IAAMC,SAAS,GAAG,SAAAA,CAACC,KAAqC;;EACrD,IAAAC,KAAK,GAA4BD,KAAK,CAAAC,KAAjC;IAAEC,SAAS,GAAiBF,KAAK,CAAAE,SAAtB;IAAEC,UAAU,GAAKH,KAAK,CAAAG,UAAV;EAC5B,IAAAC,OAAO,GAAYH,KAAK,CAAAG,OAAjB;IAAEC,KAAK,GAAKJ,KAAK,CAAAI,KAAV;EAEtB,IAAMC,UAAU,GAAGd,mBAAmB,CAACG,mCAAmC,EAAEM,KAAK,CAAC;EAElF,OAAO;IACLL,IAAI,EAAE,CACJU,UAAU,CAACV,IAAI,EACfS,KAAK,CAACE,KAAK,EACX;MACEC,eAAe,EAAEL,UAAU,GAAGC,OAAO,CAACK,KAAK,GAAGL,OAAO,CAACM,iBAAiB;MACvEC,YAAY,EAAE,aAAAC,MAAA,CAAaR,OAAO,CAACS,YAAY,CAAE;MACjDC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE;KACX,EACDb,SAAS,CACV;IACDc,WAAW,EAAE,CACXV,UAAU,CAACR,aAAa,EACxB;MACEmB,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE;KACT,CACF;IACDvB,IAAI,EAAE,CACJS,UAAU,CAACT,IAAI,EACf;MACEwB,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,MAAM;MACdP,QAAQ,EAAE;KACX,CACF;IACDQ,QAAQ,EAAE;MACRC,OAAO,EAAE,kBAAkB;MAC3BC,aAAa,EAAE,MAAM;MACrBC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE;QACTC,EAAE,EAAE;UACFR,MAAM,EAAE,MAAM;UACdS,UAAU,EAAE,MAAM;UAClBZ,OAAO,EAAE,MAAM;UACfa,QAAQ,EAAE,QAAQ;UAClBZ,UAAU,EAAE,QAAQ;UACpBa,YAAY,EAAE,KAAK;UACnBjB,QAAQ,EAAE;;;KAGf;IACDkB,YAAY,EAAE;MACZf,OAAO,EAAE,cAAc;MACvBgB,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE;KACd;IACDC,YAAY,EAAE,CACZ5C,aAAa,CAACU,KAAK,EAAE;MACnBmC,iBAAiB,EAAE;QACjBC,MAAM,EAAE,sBAAsB;QAC9BC,OAAO,EAAE;;KAEZ,CAAC,EACF;MACEC,SAAS,EAAE,YAAY;MACvBC,KAAK,EAAEpC,OAAO,CAACqC,WAAW;MAC1BC,QAAQ,EAAE,CAAC;MACX5B,QAAQ,EAAE,QAAQ;MAClBG,OAAO,EAAE,cAAc;MACvB0B,cAAc,EAAE,MAAM;MACtBC,YAAY,EAAE,UAAU;MACxBC,UAAU,EAAE,QAAQ;MACpBlB,SAAS,GAAAmB,EAAA;QACP,QAAQ,EAAE;UACRN,KAAK,EAAEpC,OAAO,CAAC2C;;SAEjBD,EAAA,CAAC,IAAAlC,MAAA,CAAIlB,uBAAuB,aAAU,IAAG;QACvCiC,SAAS,GAAAqB,EAAA,OACPA,EAAA,CAACvD,oBAAoB,IAAG;UACtB6C,OAAO,EAAE;SACV,E;OAEJ,E;KAEJ,CACF;IACDW,oBAAoB,EAAE;MACpBzB,OAAO,EAAE,mBAAmB;MAC5BP,OAAO,EAAE;;GAEZ;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}