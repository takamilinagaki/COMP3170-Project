{"ast":null,"code":"import { mergeSettings, mergeScopedSettings } from './mergeSettings';\n/**\n * Merge props and customizations giving priority to props over context.\n * NOTE: This function will always perform multiple merge operations. Use with caution.\n * @param props - New settings to merge in.\n * @param parentContext - Context containing current settings.\n * @returns Merged customizations.\n */\nexport function mergeCustomizations(props, parentContext) {\n  var _a = (parentContext || {}).customizations,\n    customizations = _a === void 0 ? {\n      settings: {},\n      scopedSettings: {}\n    } : _a;\n  return {\n    customizations: {\n      settings: mergeSettings(customizations.settings, props.settings),\n      scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\n      inCustomizerContext: true\n    }\n  };\n}","map":{"version":3,"names":["mergeSettings","mergeScopedSettings","mergeCustomizations","props","parentContext","_a","customizations","settings","scopedSettings","inCustomizerContext"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/lib/src/customizations/mergeCustomizations.ts"],"sourcesContent":["import { mergeSettings, mergeScopedSettings } from './mergeSettings';\nimport type { ICustomizerProps } from './Customizer.types';\nimport type { ICustomizerContext } from './CustomizerContext';\n\n/**\n * Merge props and customizations giving priority to props over context.\n * NOTE: This function will always perform multiple merge operations. Use with caution.\n * @param props - New settings to merge in.\n * @param parentContext - Context containing current settings.\n * @returns Merged customizations.\n */\nexport function mergeCustomizations(props: ICustomizerProps, parentContext: ICustomizerContext): ICustomizerContext {\n  const { customizations = { settings: {}, scopedSettings: {} } } = parentContext || {};\n\n  return {\n    customizations: {\n      settings: mergeSettings(customizations.settings, props.settings),\n      scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\n      inCustomizerContext: true,\n    },\n  };\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,mBAAmB,QAAQ,iBAAiB;AAIpE;;;;;;;AAOA,OAAM,SAAUC,mBAAmBA,CAACC,KAAuB,EAAEC,aAAiC;EACpF,IAAAC,EAAA,GAA0D,CAAAD,aAAa,IAAI,EAAE,EAAAE,cAAxB;IAArDA,cAAc,GAAAD,EAAA,cAAG;MAAEE,QAAQ,EAAE,EAAE;MAAEC,cAAc,EAAE;IAAE,CAAE,GAAAH,EAAA;EAE7D,OAAO;IACLC,cAAc,EAAE;MACdC,QAAQ,EAAEP,aAAa,CAACM,cAAc,CAACC,QAAQ,EAAEJ,KAAK,CAACI,QAAQ,CAAC;MAChEC,cAAc,EAAEP,mBAAmB,CAACK,cAAc,CAACE,cAAc,EAAEL,KAAK,CAACK,cAAc,CAAC;MACxFC,mBAAmB,EAAE;;GAExB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}