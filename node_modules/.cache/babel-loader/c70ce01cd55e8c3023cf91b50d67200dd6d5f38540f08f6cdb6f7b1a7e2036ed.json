{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, divProperties, getDocument, getNativeProps, getRTL, memoizeFunction, Customizer, FocusRectsProvider } from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar getFabricTheme = memoizeFunction(function (theme, isRTL) {\n  return createTheme(__assign(__assign({}, theme), {\n    rtl: isRTL\n  }));\n});\nvar getDir = function (_a) {\n  var theme = _a.theme,\n    dir = _a.dir;\n  var contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  var pageDir = getRTL() ? 'rtl' : 'ltr';\n  var componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir\n  };\n};\nexport var FabricBase = React.forwardRef(function (props, ref) {\n  var className = props.className,\n    theme = props.theme,\n    applyTheme = props.applyTheme,\n    applyThemeToBody = props.applyThemeToBody,\n    styles = props.styles;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    applyTheme: applyTheme,\n    className: className\n  });\n  var rootElement = React.useRef(null);\n  useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n  return React.createElement(React.Fragment, null, useRenderedContent(props, classNames, rootElement, ref));\n});\nFabricBase.displayName = 'FabricBase';\nfunction useRenderedContent(props, _a, rootElement, ref) {\n  var root = _a.root;\n  var _b = props.as,\n    Root = _b === void 0 ? 'div' : _b,\n    dir = props.dir,\n    theme = props.theme;\n  var divProps = getNativeProps(props, divProperties, ['dir']);\n  var _c = getDir(props),\n    rootDir = _c.rootDir,\n    needsTheme = _c.needsTheme;\n  var renderedContent = React.createElement(FocusRectsProvider, {\n    providerRef: rootElement\n  }, React.createElement(Root, __assign({\n    dir: rootDir\n  }, divProps, {\n    className: root,\n    ref: useMergedRefs(rootElement, ref)\n  })));\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent =\n    // eslint-disable-next-line deprecation/deprecation\n    React.createElement(Customizer, {\n      settings: {\n        theme: getFabricTheme(theme, dir === 'rtl')\n      }\n    }, renderedContent);\n  }\n  return renderedContent;\n}\nfunction useApplyThemeToBody(applyThemeToBody, _a, rootElement) {\n  var bodyThemed = _a.bodyThemed;\n  React.useEffect(function () {\n    if (applyThemeToBody) {\n      var currentDoc_1 = getDocument(rootElement.current);\n      if (currentDoc_1) {\n        currentDoc_1.body.classList.add(bodyThemed);\n        return function () {\n          currentDoc_1.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n  return rootElement;\n}","map":{"version":3,"names":["React","classNamesFunction","divProperties","getDocument","getNativeProps","getRTL","memoizeFunction","Customizer","FocusRectsProvider","createTheme","useMergedRefs","getClassNames","getFabricTheme","theme","isRTL","__assign","rtl","getDir","_a","dir","contextDir","pageDir","componentDir","rootDir","needsTheme","FabricBase","forwardRef","props","ref","className","applyTheme","applyThemeToBody","styles","classNames","rootElement","useRef","useApplyThemeToBody","createElement","Fragment","useRenderedContent","displayName","root","_b","as","Root","divProps","_c","renderedContent","providerRef","settings","bodyThemed","useEffect","currentDoc_1","current","body","classList","add","remove"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Fabric/Fabric.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  divProperties,\n  getDocument,\n  getNativeProps,\n  getRTL,\n  memoizeFunction,\n  Customizer,\n  FocusRectsProvider,\n} from '../../Utilities';\nimport { createTheme } from '../../Styling';\nimport { useMergedRefs } from '@fluentui/react-hooks';\nimport type { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\nimport type { IProcessedStyleSet } from '@fluentui/merge-styles';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\nconst getFabricTheme = memoizeFunction((theme?: ITheme, isRTL?: boolean) => createTheme({ ...theme, rtl: isRTL }));\n\nconst getDir = ({ theme, dir }: IFabricProps) => {\n  const contextDir = getRTL(theme) ? 'rtl' : 'ltr';\n  const pageDir = getRTL() ? 'rtl' : 'ltr';\n  const componentDir = dir ? dir : contextDir;\n  return {\n    // If Fabric dir !== contextDir\n    // Or If contextDir !== pageDir\n    // Then we need to set dir of the Fabric root\n    rootDir: componentDir !== contextDir || componentDir !== pageDir ? componentDir : dir,\n    // If dir !== contextDir || pageDir\n    // then set contextual theme around content\n    needsTheme: componentDir !== contextDir,\n  };\n};\n\nexport const FabricBase: React.FunctionComponent<IFabricProps> = React.forwardRef<HTMLDivElement, IFabricProps>(\n  (props, ref) => {\n    const { className, theme, applyTheme, applyThemeToBody, styles } = props;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      applyTheme,\n      className,\n    });\n\n    const rootElement = React.useRef<HTMLDivElement>(null);\n    useApplyThemeToBody(applyThemeToBody, classNames, rootElement);\n\n    return <>{useRenderedContent(props, classNames, rootElement, ref)}</>;\n  },\n);\nFabricBase.displayName = 'FabricBase';\n\nfunction useRenderedContent(\n  props: IFabricProps,\n  { root }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const { as: Root = 'div', dir, theme } = props;\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, ['dir']);\n\n  const { rootDir, needsTheme } = getDir(props);\n\n  let renderedContent = (\n    <FocusRectsProvider providerRef={rootElement}>\n      <Root dir={rootDir} {...divProps} className={root} ref={useMergedRefs(rootElement, ref)} />\n    </FocusRectsProvider>\n  );\n\n  // Create the contextual theme if component direction does not match parent direction.\n  if (needsTheme) {\n    // Disabling ThemeProvider here because theme doesn't need to be re-provided by ThemeProvider if dir has changed.\n    renderedContent = (\n      // eslint-disable-next-line deprecation/deprecation\n      <Customizer settings={{ theme: getFabricTheme(theme, dir === 'rtl') }}>{renderedContent}</Customizer>\n    );\n  }\n\n  return renderedContent;\n}\n\nfunction useApplyThemeToBody(\n  applyThemeToBody: boolean | undefined,\n  { bodyThemed }: IProcessedStyleSet<IFabricStyles>,\n  rootElement: React.RefObject<HTMLDivElement | undefined>,\n) {\n  React.useEffect((): void | (() => void) => {\n    if (applyThemeToBody) {\n      const currentDoc = getDocument(rootElement.current);\n      if (currentDoc) {\n        currentDoc.body.classList.add(bodyThemed);\n        return () => {\n          currentDoc.body.classList.remove(bodyThemed);\n        };\n      }\n    }\n  }, [bodyThemed, applyThemeToBody, rootElement]);\n\n  return rootElement;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}