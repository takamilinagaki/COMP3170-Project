{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { cssColor } from './cssColor';\nimport { getColorFromRGBA } from './getColorFromRGBA';\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\nexport function getColorFromString(inputColor) {\n  var color = cssColor(inputColor);\n  if (!color) {\n    return;\n  }\n  return __assign(__assign({}, getColorFromRGBA(color)), {\n    str: inputColor\n  });\n}","map":{"version":3,"names":["cssColor","getColorFromRGBA","getColorFromString","inputColor","color","__assign","str"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/utilities/src/utilities/color/getColorFromString.ts"],"sourcesContent":["import { cssColor } from './cssColor';\nimport { getColorFromRGBA } from './getColorFromRGBA';\nimport type { IColor } from './interfaces';\n\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\nexport function getColorFromString(inputColor: string): IColor | undefined {\n  const color = cssColor(inputColor);\n\n  if (!color) {\n    return;\n  }\n\n  return {\n    ...getColorFromRGBA(color!),\n    str: inputColor,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,gBAAgB,QAAQ,oBAAoB;AAGrD;;;;;;;;AAQA,OAAM,SAAUC,kBAAkBA,CAACC,UAAkB;EACnD,IAAMC,KAAK,GAAGJ,QAAQ,CAACG,UAAU,CAAC;EAElC,IAAI,CAACC,KAAK,EAAE;IACV;;EAGF,OAAAC,QAAA,CAAAA,QAAA,KACKJ,gBAAgB,CAACG,KAAM,CAAC;IAC3BE,GAAG,EAAEH;EAAU;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}