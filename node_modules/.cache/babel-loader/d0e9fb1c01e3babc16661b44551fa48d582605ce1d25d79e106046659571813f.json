{"ast":null,"code":"import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nexport var getSplitButtonClassNames = memoizeFunction(function (styles, disabled, expanded, checked, primaryDisabled) {\n  return {\n    root: mergeStyles(styles.splitButtonMenuButton, expanded && [styles.splitButtonMenuButtonExpanded], disabled && [styles.splitButtonMenuButtonDisabled], checked && !disabled && [styles.splitButtonMenuButtonChecked], primaryDisabled && !disabled && [{\n      selectors: {\n        ':focus': styles.splitButtonMenuFocused\n      }\n    }]),\n    splitButtonContainer: mergeStyles(styles.splitButtonContainer, !disabled && checked && [styles.splitButtonContainerChecked, {\n      selectors: {\n        ':hover': styles.splitButtonContainerCheckedHovered\n      }\n    }], !disabled && !checked && [{\n      selectors: {\n        ':hover': styles.splitButtonContainerHovered,\n        ':focus': styles.splitButtonContainerFocused\n      }\n    }], disabled && styles.splitButtonContainerDisabled),\n    icon: mergeStyles(styles.splitButtonMenuIcon, disabled && styles.splitButtonMenuIconDisabled, !disabled && primaryDisabled && styles.splitButtonMenuIcon),\n    flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n    divider: mergeStyles(styles.splitButtonDivider, (primaryDisabled || disabled) && styles.splitButtonDividerDisabled)\n  };\n});","map":{"version":3,"names":["memoizeFunction","mergeStyles","getSplitButtonClassNames","styles","disabled","expanded","checked","primaryDisabled","root","splitButtonMenuButton","splitButtonMenuButtonExpanded","splitButtonMenuButtonDisabled","splitButtonMenuButtonChecked","selectors","splitButtonMenuFocused","splitButtonContainer","splitButtonContainerChecked","splitButtonContainerCheckedHovered","splitButtonContainerHovered","splitButtonContainerFocused","splitButtonContainerDisabled","icon","splitButtonMenuIcon","splitButtonMenuIconDisabled","flexContainer","splitButtonFlexContainer","divider","splitButtonDivider","splitButtonDividerDisabled"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/Button/src/components/Button/SplitButton/SplitButton.classNames.ts"],"sourcesContent":["import { memoizeFunction } from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport type { IButtonStyles } from '../Button.types';\n\nexport interface ISplitButtonClassNames {\n  root?: string;\n  icon?: string;\n  splitButtonContainer?: string;\n  flexContainer?: string;\n  divider?: string;\n}\n\nexport const getSplitButtonClassNames = memoizeFunction(\n  (\n    styles: IButtonStyles,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    primaryDisabled?: boolean,\n  ): ISplitButtonClassNames => {\n    return {\n      root: mergeStyles(\n        styles.splitButtonMenuButton,\n        expanded && [styles.splitButtonMenuButtonExpanded],\n        disabled && [styles.splitButtonMenuButtonDisabled],\n        checked && !disabled && [styles.splitButtonMenuButtonChecked],\n        primaryDisabled &&\n          !disabled && [\n            {\n              selectors: {\n                ':focus': styles.splitButtonMenuFocused,\n              },\n            },\n          ],\n      ),\n\n      splitButtonContainer: mergeStyles(\n        styles.splitButtonContainer,\n        !disabled &&\n          checked && [\n            styles.splitButtonContainerChecked,\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerCheckedHovered,\n              },\n            },\n          ],\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.splitButtonContainerHovered,\n                ':focus': styles.splitButtonContainerFocused,\n              },\n            },\n          ],\n        disabled && styles.splitButtonContainerDisabled,\n      ),\n\n      icon: mergeStyles(\n        styles.splitButtonMenuIcon,\n        disabled && styles.splitButtonMenuIconDisabled,\n        !disabled && primaryDisabled && styles.splitButtonMenuIcon,\n      ),\n\n      flexContainer: mergeStyles(styles.splitButtonFlexContainer),\n\n      divider: mergeStyles(\n        styles.splitButtonDivider,\n        (primaryDisabled || disabled) && styles.splitButtonDividerDisabled,\n      ),\n    };\n  },\n);\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAW9C,OAAO,IAAMC,wBAAwB,GAAGF,eAAe,CACrD,UACEG,MAAqB,EACrBC,QAAiB,EACjBC,QAAiB,EACjBC,OAAgB,EAChBC,eAAyB;EAEzB,OAAO;IACLC,IAAI,EAAEP,WAAW,CACfE,MAAM,CAACM,qBAAqB,EAC5BJ,QAAQ,IAAI,CAACF,MAAM,CAACO,6BAA6B,CAAC,EAClDN,QAAQ,IAAI,CAACD,MAAM,CAACQ,6BAA6B,CAAC,EAClDL,OAAO,IAAI,CAACF,QAAQ,IAAI,CAACD,MAAM,CAACS,4BAA4B,CAAC,EAC7DL,eAAe,IACb,CAACH,QAAQ,IAAI,CACX;MACES,SAAS,EAAE;QACT,QAAQ,EAAEV,MAAM,CAACW;;KAEpB,CACF,CACJ;IAEDC,oBAAoB,EAAEd,WAAW,CAC/BE,MAAM,CAACY,oBAAoB,EAC3B,CAACX,QAAQ,IACPE,OAAO,IAAI,CACTH,MAAM,CAACa,2BAA2B,EAClC;MACEH,SAAS,EAAE;QACT,QAAQ,EAAEV,MAAM,CAACc;;KAEpB,CACF,EACH,CAACb,QAAQ,IACP,CAACE,OAAO,IAAI,CACV;MACEO,SAAS,EAAE;QACT,QAAQ,EAAEV,MAAM,CAACe,2BAA2B;QAC5C,QAAQ,EAAEf,MAAM,CAACgB;;KAEpB,CACF,EACHf,QAAQ,IAAID,MAAM,CAACiB,4BAA4B,CAChD;IAEDC,IAAI,EAAEpB,WAAW,CACfE,MAAM,CAACmB,mBAAmB,EAC1BlB,QAAQ,IAAID,MAAM,CAACoB,2BAA2B,EAC9C,CAACnB,QAAQ,IAAIG,eAAe,IAAIJ,MAAM,CAACmB,mBAAmB,CAC3D;IAEDE,aAAa,EAAEvB,WAAW,CAACE,MAAM,CAACsB,wBAAwB,CAAC;IAE3DC,OAAO,EAAEzB,WAAW,CAClBE,MAAM,CAACwB,kBAAkB,EACzB,CAACpB,eAAe,IAAIH,QAAQ,KAAKD,MAAM,CAACyB,0BAA0B;GAErE;AACH,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}