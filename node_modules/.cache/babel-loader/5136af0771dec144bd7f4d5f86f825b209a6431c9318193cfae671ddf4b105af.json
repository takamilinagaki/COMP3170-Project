{"ast":null,"code":"var _a;\nimport { KeyCodes } from './KeyCodes';\nvar DirectionalKeyCodes = (_a = {}, _a[KeyCodes.up] = 1, _a[KeyCodes.down] = 1, _a[KeyCodes.left] = 1, _a[KeyCodes.right] = 1, _a[KeyCodes.home] = 1, _a[KeyCodes.end] = 1, _a[KeyCodes.tab] = 1, _a[KeyCodes.pageUp] = 1, _a[KeyCodes.pageDown] = 1, _a);\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which) {\n  return !!DirectionalKeyCodes[which];\n}\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which) {\n  DirectionalKeyCodes[which] = 1;\n}\n/**\n * Removes a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to remove global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function removeDirectionalKeyCode(which) {\n  delete DirectionalKeyCodes[which];\n}","map":{"version":3,"names":["KeyCodes","DirectionalKeyCodes","_a","up","down","left","right","home","end","tab","pageUp","pageDown","isDirectionalKeyCode","which","addDirectionalKeyCode","removeDirectionalKeyCode"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/utilities/src/keyboard.ts"],"sourcesContent":["import { KeyCodes } from './KeyCodes';\n\nconst DirectionalKeyCodes: { [key: number]: number } = {\n  [KeyCodes.up]: 1,\n  [KeyCodes.down]: 1,\n  [KeyCodes.left]: 1,\n  [KeyCodes.right]: 1,\n  [KeyCodes.home]: 1,\n  [KeyCodes.end]: 1,\n  [KeyCodes.tab]: 1,\n  [KeyCodes.pageUp]: 1,\n  [KeyCodes.pageDown]: 1,\n};\n\n/**\n * Returns true if the keycode is a directional keyboard key.\n */\nexport function isDirectionalKeyCode(which: number): boolean {\n  return !!DirectionalKeyCodes[which];\n}\n\n/**\n * Adds a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to add global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function addDirectionalKeyCode(which: number): void {\n  DirectionalKeyCodes[which] = 1;\n}\n\n/**\n * Removes a keycode to the list of keys that, when pressed, should cause the focus outlines to be visible.\n * This can be used to remove global shortcut keys that directionally move from section to section within\n * an app or between focus trap zones.\n */\nexport function removeDirectionalKeyCode(which: number): void {\n  delete DirectionalKeyCodes[which];\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,YAAY;AAErC,IAAMC,mBAAmB,IAAAC,EAAA,OACvBA,EAAA,CAACF,QAAQ,CAACG,EAAE,IAAG,CAAC,EAChBD,EAAA,CAACF,QAAQ,CAACI,IAAI,IAAG,CAAC,EAClBF,EAAA,CAACF,QAAQ,CAACK,IAAI,IAAG,CAAC,EAClBH,EAAA,CAACF,QAAQ,CAACM,KAAK,IAAG,CAAC,EACnBJ,EAAA,CAACF,QAAQ,CAACO,IAAI,IAAG,CAAC,EAClBL,EAAA,CAACF,QAAQ,CAACQ,GAAG,IAAG,CAAC,EACjBN,EAAA,CAACF,QAAQ,CAACS,GAAG,IAAG,CAAC,EACjBP,EAAA,CAACF,QAAQ,CAACU,MAAM,IAAG,CAAC,EACpBR,EAAA,CAACF,QAAQ,CAACW,QAAQ,IAAG,CAAC,E,GACvB;AAED;;;AAGA,OAAM,SAAUC,oBAAoBA,CAACC,KAAa;EAChD,OAAO,CAAC,CAACZ,mBAAmB,CAACY,KAAK,CAAC;AACrC;AAEA;;;;;AAKA,OAAM,SAAUC,qBAAqBA,CAACD,KAAa;EACjDZ,mBAAmB,CAACY,KAAK,CAAC,GAAG,CAAC;AAChC;AAEA;;;;;AAKA,OAAM,SAAUE,wBAAwBA,CAACF,KAAa;EACpD,OAAOZ,mBAAmB,CAACY,KAAK,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}