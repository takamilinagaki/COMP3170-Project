{"ast":null,"code":"import { FontWeights, getGlobalClassNames, IconFontSizes, ScreenWidthMinSmall, ScreenWidthMaxSmall } from '../../Styling';\nvar GlobalClassNames = {\n  contentLgHeader: 'ms-Dialog-lgHeader',\n  close: 'ms-Dialog--close',\n  subText: 'ms-Dialog-subText',\n  header: 'ms-Dialog-header',\n  headerLg: 'ms-Dialog--lgHeader',\n  button: 'ms-Dialog-button ms-Dialog-button--close',\n  inner: 'ms-Dialog-inner',\n  content: 'ms-Dialog-content',\n  title: 'ms-Dialog-title'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c;\n  var className = props.className,\n    theme = props.theme,\n    isLargeHeader = props.isLargeHeader,\n    isClose = props.isClose,\n    hidden = props.hidden,\n    isMultiline = props.isMultiline,\n    draggableHeaderClassName = props.draggableHeaderClassName;\n  var palette = theme.palette,\n    fonts = theme.fonts,\n    effects = theme.effects,\n    semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    content: [isLargeHeader && [classNames.contentLgHeader, {\n      borderTop: \"4px solid \".concat(palette.themePrimary)\n    }], isClose && classNames.close, {\n      flexGrow: 1,\n      overflowY: 'hidden' // required for allowScrollOnElement\n    }, className],\n    subText: [classNames.subText, fonts.medium, {\n      margin: '0 0 24px 0',\n      color: semanticColors.bodySubtext,\n      lineHeight: '1.5',\n      wordWrap: 'break-word',\n      fontWeight: FontWeights.regular\n    }],\n    header: [classNames.header, {\n      position: 'relative',\n      width: '100%',\n      boxSizing: 'border-box'\n    }, isClose && classNames.close, draggableHeaderClassName && [draggableHeaderClassName, {\n      cursor: 'move'\n    }]],\n    button: [classNames.button, hidden && {\n      selectors: {\n        '.ms-Icon.ms-Icon--Cancel': {\n          color: semanticColors.buttonText,\n          fontSize: IconFontSizes.medium\n        }\n      }\n    }],\n    inner: [classNames.inner, {\n      padding: '0 24px 24px',\n      selectors: (_a = {}, _a[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n        padding: '0 16px 16px'\n      }, _a)\n    }],\n    innerContent: [classNames.content, {\n      position: 'relative',\n      width: '100%'\n    }],\n    title: [classNames.title, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      margin: '0',\n      minHeight: fonts.xLarge.fontSize,\n      padding: '16px 46px 20px 24px',\n      lineHeight: 'normal',\n      selectors: (_b = {}, _b[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n        padding: '16px 46px 16px 16px'\n      }, _b)\n    }, isLargeHeader && {\n      color: semanticColors.menuHeader\n    }, isMultiline && {\n      fontSize: fonts.xxLarge.fontSize\n    }],\n    topButton: [{\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      position: 'absolute',\n      top: '0',\n      right: '0',\n      padding: '15px 15px 0 0',\n      selectors: (_c = {\n        '> *': {\n          flex: '0 0 auto'\n        },\n        '.ms-Dialog-button': {\n          color: semanticColors.buttonText\n        },\n        '.ms-Dialog-button:hover': {\n          color: semanticColors.buttonTextHovered,\n          borderRadius: effects.roundedCorner2\n        }\n      }, _c[\"@media (min-width: \".concat(ScreenWidthMinSmall, \"px) and (max-width: \").concat(ScreenWidthMaxSmall, \"px)\")] = {\n        padding: '15px 8px 0 0'\n      }, _c)\n    }]\n  };\n};","map":{"version":3,"names":["FontWeights","getGlobalClassNames","IconFontSizes","ScreenWidthMinSmall","ScreenWidthMaxSmall","GlobalClassNames","contentLgHeader","close","subText","header","headerLg","button","inner","content","title","getStyles","props","className","theme","isLargeHeader","isClose","hidden","isMultiline","draggableHeaderClassName","palette","fonts","effects","semanticColors","classNames","borderTop","concat","themePrimary","flexGrow","overflowY","medium","margin","color","bodySubtext","lineHeight","wordWrap","fontWeight","regular","position","width","boxSizing","cursor","selectors","buttonText","fontSize","padding","_a","innerContent","xLarge","bodyText","minHeight","_b","menuHeader","xxLarge","topButton","display","flexDirection","flexWrap","top","right","_c","flex","buttonTextHovered","borderRadius","roundedCorner2"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Dialog/DialogContent.styles.ts"],"sourcesContent":["import {\n  FontWeights,\n  getGlobalClassNames,\n  IconFontSizes,\n  ScreenWidthMinSmall,\n  ScreenWidthMaxSmall,\n} from '../../Styling';\nimport type { IDialogContentStyleProps, IDialogContentStyles } from './DialogContent.types';\n\nconst GlobalClassNames = {\n  contentLgHeader: 'ms-Dialog-lgHeader',\n  close: 'ms-Dialog--close',\n  subText: 'ms-Dialog-subText',\n  header: 'ms-Dialog-header',\n  headerLg: 'ms-Dialog--lgHeader',\n  button: 'ms-Dialog-button ms-Dialog-button--close',\n  inner: 'ms-Dialog-inner',\n  content: 'ms-Dialog-content',\n  title: 'ms-Dialog-title',\n};\n\nexport const getStyles = (props: IDialogContentStyleProps): IDialogContentStyles => {\n  const { className, theme, isLargeHeader, isClose, hidden, isMultiline, draggableHeaderClassName } = props;\n\n  const { palette, fonts, effects, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    content: [\n      isLargeHeader && [\n        classNames.contentLgHeader,\n        {\n          borderTop: `4px solid ${palette.themePrimary}`,\n        },\n      ],\n      isClose && classNames.close,\n      {\n        flexGrow: 1,\n        overflowY: 'hidden', // required for allowScrollOnElement\n      },\n      className,\n    ],\n\n    subText: [\n      classNames.subText,\n      fonts.medium,\n      {\n        margin: '0 0 24px 0',\n        color: semanticColors.bodySubtext,\n        lineHeight: '1.5',\n        wordWrap: 'break-word',\n        fontWeight: FontWeights.regular,\n      },\n    ],\n\n    header: [\n      classNames.header,\n      {\n        position: 'relative',\n        width: '100%',\n        boxSizing: 'border-box',\n      },\n      isClose && classNames.close,\n      draggableHeaderClassName && [\n        draggableHeaderClassName,\n        {\n          cursor: 'move',\n        },\n      ],\n    ],\n\n    button: [\n      classNames.button,\n      hidden && {\n        selectors: {\n          '.ms-Icon.ms-Icon--Cancel': {\n            color: semanticColors.buttonText,\n            fontSize: IconFontSizes.medium,\n          },\n        },\n      },\n    ],\n\n    inner: [\n      classNames.inner,\n      {\n        padding: '0 24px 24px',\n        selectors: {\n          [`@media (min-width: ${ScreenWidthMinSmall}px) and (max-width: ${ScreenWidthMaxSmall}px)`]: {\n            padding: '0 16px 16px',\n          },\n        },\n      },\n    ],\n\n    innerContent: [\n      classNames.content,\n      {\n        position: 'relative',\n        width: '100%',\n      },\n    ],\n\n    title: [\n      classNames.title,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        margin: '0',\n        minHeight: fonts.xLarge.fontSize,\n        padding: '16px 46px 20px 24px',\n        lineHeight: 'normal',\n        selectors: {\n          [`@media (min-width: ${ScreenWidthMinSmall}px) and (max-width: ${ScreenWidthMaxSmall}px)`]: {\n            padding: '16px 46px 16px 16px',\n          },\n        },\n      },\n      isLargeHeader && {\n        color: semanticColors.menuHeader,\n      },\n      isMultiline && { fontSize: fonts.xxLarge.fontSize },\n    ],\n\n    topButton: [\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        position: 'absolute',\n        top: '0',\n        right: '0',\n        padding: '15px 15px 0 0',\n        selectors: {\n          '> *': {\n            flex: '0 0 auto',\n          },\n          '.ms-Dialog-button': {\n            color: semanticColors.buttonText,\n          },\n          '.ms-Dialog-button:hover': {\n            color: semanticColors.buttonTextHovered,\n            borderRadius: effects.roundedCorner2,\n          },\n          [`@media (min-width: ${ScreenWidthMinSmall}px) and (max-width: ${ScreenWidthMaxSmall}px)`]: {\n            padding: '15px 8px 0 0',\n          },\n        },\n      },\n    ],\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}