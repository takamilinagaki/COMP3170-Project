{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\nimport { useConst, usePrevious } from '@fluentui/react-hooks';\nvar registerPersistedKeytips = function (keytipsToRegister, keytipManager, registeredPersistedKeytips) {\n  for (var _i = 0, keytipsToRegister_1 = keytipsToRegister; _i < keytipsToRegister_1.length; _i++) {\n    var keytip = keytipsToRegister_1[_i];\n    var uniqueID = keytipManager.register(keytip, true);\n    // Update map\n    registeredPersistedKeytips[uniqueID] = keytip;\n  }\n};\nvar unregisterPersistedKeytips = function (keytipManager, registeredPersistedKeytips) {\n  for (var _i = 0, _a = Object.keys(registeredPersistedKeytips); _i < _a.length; _i++) {\n    var uniqueID = _a[_i];\n    keytipManager.unregister(registeredPersistedKeytips[uniqueID], uniqueID, true);\n    delete registeredPersistedKeytips[uniqueID];\n  }\n};\nvar useKeytipRegistrations = function (registeredPersistedKeytips, keytipsToRegister, keytipManager) {\n  var prevPersistedKeytips = usePrevious(registeredPersistedKeytips);\n  // Update\n  React.useEffect(function () {\n    if (prevPersistedKeytips) {\n      // Unregister old keytips\n      unregisterPersistedKeytips(keytipManager, prevPersistedKeytips);\n      // Register new keytips\n      registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n    }\n  });\n  // Mount/Unmount\n  React.useEffect(function () {\n    // Register on mount\n    registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n    return function () {\n      // Unregister on unmount\n      unregisterPersistedKeytips(keytipManager, registeredPersistedKeytips);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\nexport var OverflowButton = function (props) {\n  var keytipManager = KeytipManager.getInstance();\n  var className = props.className,\n    overflowItems = props.overflowItems,\n    keytipSequences = props.keytipSequences,\n    itemSubMenuProvider = props.itemSubMenuProvider,\n    onRenderOverflowButton = props.onRenderOverflowButton;\n  var persistedKeytips = useConst({});\n  // Gets the subMenu for an overflow item\n  var getSubMenuForItem = React.useCallback(function (item) {\n    // Checks if itemSubMenuProvider has been defined, if not defaults to subMenuProps\n    if (itemSubMenuProvider) {\n      return itemSubMenuProvider(item);\n    }\n    if (item.subMenuProps) {\n      return item.subMenuProps.items;\n    }\n    return undefined;\n  }, [itemSubMenuProvider]);\n  var _a = React.useMemo(function () {\n      var newKeytipsToRegister = [];\n      var newOverflowItems = [];\n      if (keytipSequences) {\n        overflowItems === null || overflowItems === void 0 ? void 0 : overflowItems.forEach(function (overflowItem) {\n          var _a;\n          var keytip = overflowItem.keytipProps;\n          if (keytip) {\n            // Create persisted keytip\n            var persistedKeytip = {\n              content: keytip.content,\n              keySequences: keytip.keySequences,\n              disabled: keytip.disabled || !!(overflowItem.disabled || overflowItem.isDisabled),\n              hasDynamicChildren: keytip.hasDynamicChildren,\n              hasMenu: keytip.hasMenu\n            };\n            if (keytip.hasDynamicChildren || getSubMenuForItem(overflowItem)) {\n              // If the keytip has a submenu or children nodes, change onExecute to persistedKeytipExecute\n              persistedKeytip.onExecute = keytipManager.menuExecute.bind(keytipManager, keytipSequences, (_a = overflowItem === null || overflowItem === void 0 ? void 0 : overflowItem.keytipProps) === null || _a === void 0 ? void 0 : _a.keySequences);\n              persistedKeytip.hasOverflowSubMenu = true;\n            } else {\n              // If the keytip doesn't have a submenu, just execute the original function\n              persistedKeytip.onExecute = keytip.onExecute;\n            }\n            newKeytipsToRegister.push(persistedKeytip);\n            // Add the overflow sequence to this item\n            var newOverflowItem = __assign(__assign({}, overflowItem), {\n              keytipProps: __assign(__assign({}, keytip), {\n                overflowSetSequence: keytipSequences\n              })\n            });\n            newOverflowItems === null || newOverflowItems === void 0 ? void 0 : newOverflowItems.push(newOverflowItem);\n          } else {\n            // Nothing to change, add overflowItem to list\n            newOverflowItems === null || newOverflowItems === void 0 ? void 0 : newOverflowItems.push(overflowItem);\n          }\n        });\n      } else {\n        newOverflowItems = overflowItems;\n      }\n      return {\n        modifiedOverflowItems: newOverflowItems,\n        keytipsToRegister: newKeytipsToRegister\n      };\n    }, [overflowItems, getSubMenuForItem, keytipManager, keytipSequences]),\n    modifiedOverflowItems = _a.modifiedOverflowItems,\n    keytipsToRegister = _a.keytipsToRegister;\n  useKeytipRegistrations(persistedKeytips, keytipsToRegister, keytipManager);\n  return React.createElement(\"div\", {\n    className: className\n  }, onRenderOverflowButton(modifiedOverflowItems));\n};","map":{"version":3,"names":["React","KeytipManager","useConst","usePrevious","registerPersistedKeytips","keytipsToRegister","keytipManager","registeredPersistedKeytips","_i","keytipsToRegister_1","length","keytip","uniqueID","register","unregisterPersistedKeytips","_a","Object","keys","unregister","useKeytipRegistrations","prevPersistedKeytips","useEffect","OverflowButton","props","getInstance","className","overflowItems","keytipSequences","itemSubMenuProvider","onRenderOverflowButton","persistedKeytips","getSubMenuForItem","useCallback","item","subMenuProps","items","undefined","useMemo","newKeytipsToRegister","newOverflowItems","forEach","overflowItem","keytipProps","persistedKeytip","content","keySequences","disabled","isDisabled","hasDynamicChildren","hasMenu","onExecute","menuExecute","bind","hasOverflowSubMenu","push","newOverflowItem","__assign","overflowSetSequence","modifiedOverflowItems","createElement"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/OverflowSet/OverflowButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\nimport { useConst, usePrevious } from '@fluentui/react-hooks';\nimport type { IKeytipProps } from '../../Keytip';\nimport type { IOverflowSetItemProps, IOverflowSetProps } from './OverflowSet.types';\n\nconst registerPersistedKeytips = (\n  keytipsToRegister: IKeytipProps[],\n  keytipManager: KeytipManager,\n  registeredPersistedKeytips: { [uniqueID: string]: IKeytipProps },\n) => {\n  for (const keytip of keytipsToRegister) {\n    const uniqueID = keytipManager.register(keytip, true);\n    // Update map\n    registeredPersistedKeytips[uniqueID] = keytip;\n  }\n};\n\nconst unregisterPersistedKeytips = (\n  keytipManager: KeytipManager,\n  registeredPersistedKeytips: { [uniqueID: string]: IKeytipProps },\n) => {\n  for (const uniqueID of Object.keys(registeredPersistedKeytips)) {\n    keytipManager.unregister(registeredPersistedKeytips[uniqueID], uniqueID, true);\n    delete registeredPersistedKeytips[uniqueID];\n  }\n};\n\nconst useKeytipRegistrations = (\n  registeredPersistedKeytips: { [uniqueID: string]: IKeytipProps },\n  keytipsToRegister: IKeytipProps[],\n  keytipManager: KeytipManager,\n) => {\n  const prevPersistedKeytips = usePrevious(registeredPersistedKeytips);\n\n  // Update\n  React.useEffect(() => {\n    if (prevPersistedKeytips) {\n      // Unregister old keytips\n      unregisterPersistedKeytips(keytipManager, prevPersistedKeytips);\n      // Register new keytips\n      registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n    }\n  });\n\n  // Mount/Unmount\n  React.useEffect(() => {\n    // Register on mount\n    registerPersistedKeytips(keytipsToRegister, keytipManager, registeredPersistedKeytips);\n    return () => {\n      // Unregister on unmount\n      unregisterPersistedKeytips(keytipManager, registeredPersistedKeytips);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport const OverflowButton = (props: IOverflowSetProps) => {\n  const keytipManager: KeytipManager = KeytipManager.getInstance();\n  const { className, overflowItems, keytipSequences, itemSubMenuProvider, onRenderOverflowButton } = props;\n\n  const persistedKeytips = useConst<{ [uniqueID: string]: IKeytipProps }>({});\n\n  // Gets the subMenu for an overflow item\n  const getSubMenuForItem = React.useCallback(\n    (item: IOverflowSetItemProps) => {\n      // Checks if itemSubMenuProvider has been defined, if not defaults to subMenuProps\n      if (itemSubMenuProvider) {\n        return itemSubMenuProvider(item);\n      }\n      if (item.subMenuProps) {\n        return item.subMenuProps.items;\n      }\n      return undefined;\n    },\n    [itemSubMenuProvider],\n  );\n\n  const { modifiedOverflowItems, keytipsToRegister } = React.useMemo(() => {\n    const newKeytipsToRegister: IKeytipProps[] = [];\n    let newOverflowItems: IOverflowSetItemProps[] | undefined = [];\n\n    if (keytipSequences) {\n      overflowItems?.forEach(overflowItem => {\n        const keytip = (overflowItem as IOverflowSetItemProps).keytipProps;\n\n        if (keytip) {\n          // Create persisted keytip\n          const persistedKeytip: IKeytipProps = {\n            content: keytip.content,\n            keySequences: keytip.keySequences,\n            disabled: keytip.disabled || !!(overflowItem.disabled || overflowItem.isDisabled),\n            hasDynamicChildren: keytip.hasDynamicChildren,\n            hasMenu: keytip.hasMenu,\n          };\n\n          if (keytip.hasDynamicChildren || getSubMenuForItem(overflowItem)) {\n            // If the keytip has a submenu or children nodes, change onExecute to persistedKeytipExecute\n            persistedKeytip.onExecute = keytipManager.menuExecute.bind(\n              keytipManager,\n              keytipSequences,\n              overflowItem?.keytipProps?.keySequences,\n            );\n            persistedKeytip.hasOverflowSubMenu = true;\n          } else {\n            // If the keytip doesn't have a submenu, just execute the original function\n            persistedKeytip.onExecute = keytip.onExecute;\n          }\n\n          newKeytipsToRegister.push(persistedKeytip);\n\n          // Add the overflow sequence to this item\n          const newOverflowItem = {\n            ...overflowItem,\n            keytipProps: {\n              ...keytip,\n              overflowSetSequence: keytipSequences,\n            },\n          };\n          newOverflowItems?.push(newOverflowItem);\n        } else {\n          // Nothing to change, add overflowItem to list\n          newOverflowItems?.push(overflowItem);\n        }\n      });\n    } else {\n      newOverflowItems = overflowItems;\n    }\n    return { modifiedOverflowItems: newOverflowItems, keytipsToRegister: newKeytipsToRegister };\n  }, [overflowItems, getSubMenuForItem, keytipManager, keytipSequences]);\n\n  useKeytipRegistrations(persistedKeytips, keytipsToRegister, keytipManager);\n\n  return <div className={className}>{onRenderOverflowButton(modifiedOverflowItems)}</div>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}