{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getId } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nvar ZERO_THRESHOLD = 0.01;\n/**\n * ProgressIndicator with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nvar ProgressIndicatorBase = /** @class */function (_super) {\n  __extends(ProgressIndicatorBase, _super);\n  function ProgressIndicatorBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._onRenderProgress = function (props) {\n      var _a = _this.props,\n        ariaLabel = _a.ariaLabel,\n        ariaValueText = _a.ariaValueText,\n        barHeight = _a.barHeight,\n        className = _a.className,\n        description = _a.description,\n        // eslint-disable-next-line deprecation/deprecation\n        _b = _a.label,\n        // eslint-disable-next-line deprecation/deprecation\n        label = _b === void 0 ? _this.props.title : _b,\n        styles = _a.styles,\n        theme = _a.theme;\n      var percentComplete = typeof _this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, _this.props.percentComplete * 100)) : undefined;\n      var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        barHeight: barHeight,\n        indeterminate: percentComplete === undefined ? true : false\n      });\n      var progressBarStyles = {\n        width: percentComplete !== undefined ? percentComplete + '%' : undefined,\n        transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined\n      };\n      var ariaValueMin = percentComplete !== undefined ? 0 : undefined;\n      var ariaValueMax = percentComplete !== undefined ? 100 : undefined;\n      var ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete) : undefined;\n      return React.createElement(\"div\", {\n        className: classNames.itemProgress\n      }, React.createElement(\"div\", {\n        className: classNames.progressTrack\n      }), React.createElement(\"div\", {\n        className: classNames.progressBar,\n        style: progressBarStyles,\n        role: \"progressbar\",\n        \"aria-describedby\": description ? _this._descriptionId : undefined,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": label ? _this._labelId : undefined,\n        \"aria-valuemin\": ariaValueMin,\n        \"aria-valuemax\": ariaValueMax,\n        \"aria-valuenow\": ariaValueNow,\n        \"aria-valuetext\": ariaValueText\n      }));\n    };\n    var id = getId('progress-indicator');\n    _this._labelId = id + '-label';\n    _this._descriptionId = id + '-description';\n    return _this;\n  }\n  ProgressIndicatorBase.prototype.render = function () {\n    var _a = this.props,\n      barHeight = _a.barHeight,\n      className = _a.className,\n      // eslint-disable-next-line deprecation/deprecation\n      _b = _a.label,\n      // eslint-disable-next-line deprecation/deprecation\n      label = _b === void 0 ? this.props.title : _b,\n      // Fall back to deprecated value.\n      description = _a.description,\n      styles = _a.styles,\n      theme = _a.theme,\n      progressHidden = _a.progressHidden,\n      _c = _a.onRenderProgress,\n      onRenderProgress = _c === void 0 ? this._onRenderProgress : _c;\n    var percentComplete = typeof this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, this.props.percentComplete * 100)) : undefined;\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      barHeight: barHeight,\n      indeterminate: percentComplete === undefined ? true : false\n    });\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, label ? React.createElement(\"div\", {\n      id: this._labelId,\n      className: classNames.itemName\n    }, label) : null, !progressHidden ? onRenderProgress(__assign(__assign({}, this.props), {\n      percentComplete: percentComplete\n    }), this._onRenderProgress) : null, description ? React.createElement(\"div\", {\n      id: this._descriptionId,\n      className: classNames.itemDescription\n    }, description) : null);\n  };\n  ProgressIndicatorBase.defaultProps = {\n    label: '',\n    description: '',\n    width: 180\n  };\n  return ProgressIndicatorBase;\n}(React.Component);\nexport { ProgressIndicatorBase };","map":{"version":3,"names":["React","classNamesFunction","getId","getClassNames","ZERO_THRESHOLD","ProgressIndicatorBase","_super","__extends","props","_this","call","_onRenderProgress","_a","ariaLabel","ariaValueText","barHeight","className","description","_b","label","title","styles","theme","percentComplete","Math","min","max","undefined","classNames","indeterminate","progressBarStyles","width","transition","ariaValueMin","ariaValueMax","ariaValueNow","floor","createElement","itemProgress","progressTrack","progressBar","style","role","_descriptionId","_labelId","id","prototype","render","progressHidden","_c","onRenderProgress","root","itemName","__assign","itemDescription","defaultProps","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/ProgressIndicator/ProgressIndicator.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, getId } from '../../Utilities';\nimport type {\n  IProgressIndicatorProps,\n  IProgressIndicatorStyleProps,\n  IProgressIndicatorStyles,\n} from './ProgressIndicator.types';\n\nconst getClassNames = classNamesFunction<IProgressIndicatorStyleProps, IProgressIndicatorStyles>();\n\n// if the percentComplete is near 0, don't animate it.\n// This prevents animations on reset to 0 scenarios\nconst ZERO_THRESHOLD = 0.01;\n\n/**\n * ProgressIndicator with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class ProgressIndicatorBase extends React.Component<IProgressIndicatorProps, {}> {\n  public static defaultProps = {\n    label: '',\n    description: '',\n    width: 180,\n  };\n\n  private _labelId: string;\n  private _descriptionId: string;\n\n  constructor(props: IProgressIndicatorProps) {\n    super(props);\n\n    const id = getId('progress-indicator');\n    this._labelId = id + '-label';\n    this._descriptionId = id + '-description';\n  }\n\n  public render() {\n    const {\n      barHeight,\n      className,\n      // eslint-disable-next-line deprecation/deprecation\n      label = this.props.title, // Fall back to deprecated value.\n      description,\n      styles,\n      theme,\n      progressHidden,\n      onRenderProgress = this._onRenderProgress,\n    } = this.props;\n\n    const percentComplete =\n      typeof this.props.percentComplete === 'number'\n        ? Math.min(100, Math.max(0, this.props.percentComplete * 100))\n        : undefined;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    return (\n      <div className={classNames.root}>\n        {label ? (\n          <div id={this._labelId} className={classNames.itemName}>\n            {label}\n          </div>\n        ) : null}\n        {!progressHidden\n          ? onRenderProgress(\n              {\n                ...(this.props as IProgressIndicatorProps),\n                percentComplete,\n              },\n              this._onRenderProgress,\n            )\n          : null}\n        {description ? (\n          <div id={this._descriptionId} className={classNames.itemDescription}>\n            {description}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  private _onRenderProgress = (props: IProgressIndicatorProps): JSX.Element => {\n    const {\n      ariaLabel,\n      ariaValueText,\n      barHeight,\n      className,\n      description,\n      // eslint-disable-next-line deprecation/deprecation\n      label = this.props.title,\n      styles,\n      theme,\n    } = this.props;\n\n    const percentComplete =\n      typeof this.props.percentComplete === 'number'\n        ? Math.min(100, Math.max(0, this.props.percentComplete * 100))\n        : undefined;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      barHeight,\n      indeterminate: percentComplete === undefined ? true : false,\n    });\n\n    const progressBarStyles = {\n      width: percentComplete !== undefined ? percentComplete + '%' : undefined,\n      transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined,\n    };\n\n    const ariaValueMin = percentComplete !== undefined ? 0 : undefined;\n    const ariaValueMax = percentComplete !== undefined ? 100 : undefined;\n    const ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete!) : undefined;\n\n    return (\n      <div className={classNames.itemProgress}>\n        <div className={classNames.progressTrack} />\n        <div\n          className={classNames.progressBar}\n          style={progressBarStyles}\n          role=\"progressbar\"\n          aria-describedby={description ? this._descriptionId : undefined}\n          aria-label={ariaLabel}\n          aria-labelledby={label ? this._labelId : undefined}\n          aria-valuemin={ariaValueMin}\n          aria-valuemax={ariaValueMax}\n          aria-valuenow={ariaValueNow}\n          aria-valuetext={ariaValueText}\n        />\n      </div>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}