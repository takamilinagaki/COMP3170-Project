{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { Async, EventGroup, classNamesFunction } from '../../Utilities';\nimport { initializeComponentRef } from '@fluentui/utilities';\nimport { DocumentCardContext } from './DocumentCard.base';\nvar getClassNames = classNamesFunction();\nvar TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\n/**\n * {@docCategory DocumentCard}\n */\nvar DocumentCardTitleBase = /** @class */function (_super) {\n  __extends(DocumentCardTitleBase, _super);\n  function DocumentCardTitleBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this._titleElement = React.createRef();\n    // Truncate logic here way can't handle the case that chars with different widths are mixed very well.\n    // Let _shrinkTitle take care of that.\n    _this._truncateTitle = function () {\n      if (!_this._needMeasurement) {\n        return;\n      }\n      _this._async.requestAnimationFrame(_this._truncateWhenInAnimation);\n    };\n    _this._truncateWhenInAnimation = function () {\n      var originalTitle = _this.props.title;\n      var element = _this._titleElement.current;\n      if (element) {\n        var style = getComputedStyle(element);\n        if (style.width && style.lineHeight && style.height) {\n          var clientWidth = element.clientWidth,\n            scrollWidth = element.scrollWidth;\n          _this._clientWidth = clientWidth;\n          var lines = Math.floor((parseInt(style.height, 10) + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD) / parseInt(style.lineHeight, 10));\n          element.style.whiteSpace = '';\n          // Use overflow to predict truncated length.\n          // Take an example.The text is: A text with A very long text that need to be truncated.ppt\n          // if container is like\n          // |A text with A very| long text that need to be truncated.ppt\n          // The scroll width is 58, (take two | out of length)\n          // The client width is 18\n          // the overflow rate is scrollWidth/clientWidth which should be close to length(overflowText)/length(visualText)\n          // And the length of remaining text should be truncated is (original Length)/(58/18) -3 = 15.\n          // So that the logic can predict truncated text well.\n          // first piece will be `A text `, * second piece will be `ated.ppt`\n          // |A text ...ated.ppt|\n          var overFlowRate = scrollWidth / (parseInt(style.width, 10) * lines);\n          if (overFlowRate > 1) {\n            var truncatedLength = originalTitle.length / overFlowRate - 3; /** Saved for separator */\n            return _this.setState({\n              truncatedTitleFirstPiece: originalTitle.slice(0, truncatedLength / 2),\n              truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - truncatedLength / 2)\n            });\n          }\n        }\n      }\n    };\n    _this._shrinkTitle = function () {\n      var _a = _this.state,\n        truncatedTitleFirstPiece = _a.truncatedTitleFirstPiece,\n        truncatedTitleSecondPiece = _a.truncatedTitleSecondPiece;\n      if (truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n        var titleElement = _this._titleElement.current;\n        if (!titleElement) {\n          return;\n        }\n        if (titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD || titleElement.scrollWidth > titleElement.clientWidth) {\n          _this.setState({\n            truncatedTitleFirstPiece: truncatedTitleFirstPiece.slice(0, truncatedTitleFirstPiece.length - 1),\n            truncatedTitleSecondPiece: truncatedTitleSecondPiece.slice(1)\n          });\n        }\n      }\n    };\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    _this._clientWidth = undefined;\n    _this.state = {\n      truncatedTitleFirstPiece: undefined,\n      truncatedTitleSecondPiece: undefined\n    };\n    return _this;\n  }\n  DocumentCardTitleBase.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n    if (this.props.title !== prevProps.title) {\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined\n      });\n    }\n    if (prevProps.shouldTruncate !== this.props.shouldTruncate) {\n      if (this.props.shouldTruncate) {\n        this._truncateTitle();\n        this._async.requestAnimationFrame(this._shrinkTitle);\n        this._events.on(window, 'resize', this._updateTruncation);\n      } else {\n        this._events.off(window, 'resize', this._updateTruncation);\n      }\n    } else if (this._needMeasurement) {\n      this._async.requestAnimationFrame(function () {\n        _this._truncateWhenInAnimation();\n        _this._shrinkTitle();\n      });\n    }\n  };\n  DocumentCardTitleBase.prototype.componentDidMount = function () {\n    if (this.props.shouldTruncate) {\n      this._truncateTitle();\n      this._events.on(window, 'resize', this._updateTruncation);\n    }\n  };\n  DocumentCardTitleBase.prototype.componentWillUnmount = function () {\n    this._events.dispose();\n    this._async.dispose();\n  };\n  DocumentCardTitleBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      title = _a.title,\n      shouldTruncate = _a.shouldTruncate,\n      showAsSecondaryTitle = _a.showAsSecondaryTitle,\n      styles = _a.styles,\n      theme = _a.theme,\n      className = _a.className;\n    var _b = this.state,\n      truncatedTitleFirstPiece = _b.truncatedTitleFirstPiece,\n      truncatedTitleSecondPiece = _b.truncatedTitleSecondPiece;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      showAsSecondaryTitle: showAsSecondaryTitle\n    });\n    if (shouldTruncate && truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      return React.createElement(DocumentCardContext.Consumer, null, function (_a) {\n        var role = _a.role,\n          tabIndex = _a.tabIndex;\n        return React.createElement(\"div\", {\n          className: _this._classNames.root,\n          ref: _this._titleElement,\n          title: title,\n          tabIndex: tabIndex,\n          role: role\n        }, truncatedTitleFirstPiece, \"\\u2026\", truncatedTitleSecondPiece);\n      });\n    } else {\n      return React.createElement(DocumentCardContext.Consumer, null, function (_a) {\n        var role = _a.role,\n          tabIndex = _a.tabIndex;\n        return React.createElement(\"div\", {\n          className: _this._classNames.root,\n          ref: _this._titleElement,\n          title: title,\n          tabIndex: tabIndex,\n          role: role,\n          style: _this._needMeasurement ? {\n            whiteSpace: 'nowrap'\n          } : undefined\n        }, title);\n      });\n    }\n  };\n  Object.defineProperty(DocumentCardTitleBase.prototype, \"_needMeasurement\", {\n    /**\n     * In measuring, it will render a same style text with whiteSpace: 'nowrap', to get overflow rate.\n     * So that the logic can predict truncated text well.\n     */\n    get: function () {\n      return !!this.props.shouldTruncate && this._clientWidth === undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DocumentCardTitleBase.prototype._updateTruncation = function () {\n    var _this = this;\n    if (this._timerId) {\n      return;\n    }\n    this._timerId = this._async.setTimeout(function () {\n      delete _this._timerId;\n      _this._clientWidth = undefined;\n      _this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined\n      });\n    }, 250);\n  };\n  return DocumentCardTitleBase;\n}(React.Component);\nexport { DocumentCardTitleBase };","map":{"version":3,"names":["React","Async","EventGroup","classNamesFunction","initializeComponentRef","DocumentCardContext","getClassNames","TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD","DocumentCardTitleBase","_super","__extends","props","_this","call","_titleElement","createRef","_truncateTitle","_needMeasurement","_async","requestAnimationFrame","_truncateWhenInAnimation","originalTitle","title","element","current","style","getComputedStyle","width","lineHeight","height","clientWidth","scrollWidth","_clientWidth","lines","Math","floor","parseInt","whiteSpace","overFlowRate","truncatedLength","length","setState","truncatedTitleFirstPiece","slice","truncatedTitleSecondPiece","_shrinkTitle","_a","state","titleElement","scrollHeight","clientHeight","_events","undefined","prototype","componentDidUpdate","prevProps","shouldTruncate","on","window","_updateTruncation","off","componentDidMount","componentWillUnmount","dispose","render","showAsSecondaryTitle","styles","theme","className","_b","_classNames","createElement","Consumer","role","tabIndex","root","ref","Object","defineProperty","get","_timerId","setTimeout","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/DocumentCard/DocumentCardTitle.base.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { Async, EventGroup, classNamesFunction } from '../../Utilities';\nimport { initializeComponentRef } from '@fluentui/utilities';\nimport type {\n  IDocumentCardTitleProps,\n  IDocumentCardTitleStyleProps,\n  IDocumentCardTitleStyles,\n} from './DocumentCardTitle.types';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport { DocumentCardContext } from './DocumentCard.base';\n\nconst getClassNames = classNamesFunction<IDocumentCardTitleStyleProps, IDocumentCardTitleStyles>();\n\nexport interface IDocumentCardTitleState {\n  truncatedTitleFirstPiece?: string;\n  truncatedTitleSecondPiece?: string;\n}\n\nconst TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD = 5;\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardTitleBase extends React.Component<IDocumentCardTitleProps, IDocumentCardTitleState> {\n  private _titleElement = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IDocumentCardTitleStyles>;\n  private _async: Async;\n  private _events: EventGroup;\n  private _clientWidth: number | undefined;\n  private _timerId: number | undefined;\n\n  constructor(props: IDocumentCardTitleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n    this._clientWidth = undefined;\n\n    this.state = {\n      truncatedTitleFirstPiece: undefined,\n      truncatedTitleSecondPiece: undefined,\n    };\n  }\n\n  public componentDidUpdate(prevProps: IDocumentCardTitleProps): void {\n    if (this.props.title !== prevProps.title) {\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }\n\n    if (prevProps.shouldTruncate !== this.props.shouldTruncate) {\n      if (this.props.shouldTruncate) {\n        this._truncateTitle();\n        this._async.requestAnimationFrame(this._shrinkTitle);\n        this._events.on(window, 'resize', this._updateTruncation);\n      } else {\n        this._events.off(window, 'resize', this._updateTruncation);\n      }\n    } else if (this._needMeasurement) {\n      this._async.requestAnimationFrame(() => {\n        this._truncateWhenInAnimation();\n        this._shrinkTitle();\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    if (this.props.shouldTruncate) {\n      this._truncateTitle();\n      this._events.on(window, 'resize', this._updateTruncation);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._events.dispose();\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { title, shouldTruncate, showAsSecondaryTitle, styles, theme, className } = this.props;\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      showAsSecondaryTitle,\n    });\n\n    if (shouldTruncate && truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      return (\n        <DocumentCardContext.Consumer>\n          {({ role, tabIndex }) => {\n            return (\n              <div\n                className={this._classNames.root}\n                ref={this._titleElement}\n                title={title}\n                tabIndex={tabIndex}\n                role={role}\n              >\n                {truncatedTitleFirstPiece}\n                &hellip;\n                {truncatedTitleSecondPiece}\n              </div>\n            );\n          }}\n        </DocumentCardContext.Consumer>\n      );\n    } else {\n      return (\n        <DocumentCardContext.Consumer>\n          {({ role, tabIndex }) => {\n            return (\n              <div\n                className={this._classNames.root}\n                ref={this._titleElement}\n                title={title}\n                tabIndex={tabIndex}\n                role={role}\n                style={this._needMeasurement ? { whiteSpace: 'nowrap' } : undefined}\n              >\n                {title}\n              </div>\n            );\n          }}\n        </DocumentCardContext.Consumer>\n      );\n    }\n  }\n\n  /**\n   * In measuring, it will render a same style text with whiteSpace: 'nowrap', to get overflow rate.\n   * So that the logic can predict truncated text well.\n   */\n  private get _needMeasurement(): boolean {\n    return !!this.props.shouldTruncate && this._clientWidth === undefined;\n  }\n\n  // Truncate logic here way can't handle the case that chars with different widths are mixed very well.\n  // Let _shrinkTitle take care of that.\n  private _truncateTitle = (): void => {\n    if (!this._needMeasurement) {\n      return;\n    }\n\n    this._async.requestAnimationFrame(this._truncateWhenInAnimation);\n  };\n\n  private _truncateWhenInAnimation: () => void = () => {\n    const originalTitle = this.props.title;\n    const element: HTMLDivElement | null = this._titleElement.current;\n\n    if (element) {\n      const style: CSSStyleDeclaration = getComputedStyle(element);\n      if (style.width && style.lineHeight && style.height) {\n        const { clientWidth, scrollWidth } = element;\n\n        this._clientWidth = clientWidth;\n\n        const lines: number = Math.floor(\n          (parseInt(style.height, 10) + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD) / parseInt(style.lineHeight, 10),\n        );\n\n        element.style.whiteSpace = '';\n\n        // Use overflow to predict truncated length.\n        // Take an example.The text is: A text with A very long text that need to be truncated.ppt\n        // if container is like\n        // |A text with A very| long text that need to be truncated.ppt\n        // The scroll width is 58, (take two | out of length)\n        // The client width is 18\n        // the overflow rate is scrollWidth/clientWidth which should be close to length(overflowText)/length(visualText)\n        // And the length of remaining text should be truncated is (original Length)/(58/18) -3 = 15.\n        // So that the logic can predict truncated text well.\n        // first piece will be `A text `, * second piece will be `ated.ppt`\n        // |A text ...ated.ppt|\n        const overFlowRate: number = scrollWidth / (parseInt(style.width, 10) * lines);\n\n        if (overFlowRate > 1) {\n          const truncatedLength: number = originalTitle.length / overFlowRate - 3; /** Saved for separator */\n          return this.setState({\n            truncatedTitleFirstPiece: originalTitle.slice(0, truncatedLength / 2),\n            truncatedTitleSecondPiece: originalTitle.slice(originalTitle.length - truncatedLength / 2),\n          });\n        }\n      }\n    }\n  };\n\n  private _shrinkTitle: () => void = () => {\n    const { truncatedTitleFirstPiece, truncatedTitleSecondPiece } = this.state;\n    if (truncatedTitleFirstPiece && truncatedTitleSecondPiece) {\n      const titleElement = this._titleElement.current;\n\n      if (!titleElement) {\n        return;\n      }\n\n      if (\n        titleElement.scrollHeight > titleElement.clientHeight + TRUNCATION_VERTICAL_OVERFLOW_THRESHOLD ||\n        titleElement.scrollWidth > titleElement.clientWidth\n      ) {\n        this.setState({\n          truncatedTitleFirstPiece: truncatedTitleFirstPiece.slice(0, truncatedTitleFirstPiece.length - 1),\n          truncatedTitleSecondPiece: truncatedTitleSecondPiece.slice(1),\n        });\n      }\n    }\n  };\n\n  private _updateTruncation(): void {\n    if (this._timerId) {\n      return;\n    }\n\n    this._timerId = this._async.setTimeout(() => {\n      delete this._timerId;\n      this._clientWidth = undefined;\n      this.setState({\n        truncatedTitleFirstPiece: undefined,\n        truncatedTitleSecondPiece: undefined,\n      });\n    }, 250);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}