{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { SpinnerType, SpinnerSize } from './Spinner.types';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar SpinnerBase = /** @class */function (_super) {\n  __extends(SpinnerBase, _super);\n  function SpinnerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SpinnerBase.prototype.render = function () {\n    // eslint-disable-next-line deprecation/deprecation\n    var _a = this.props,\n      type = _a.type,\n      size = _a.size,\n      ariaLabel = _a.ariaLabel,\n      ariaLive = _a.ariaLive,\n      styles = _a.styles,\n      label = _a.label,\n      theme = _a.theme,\n      className = _a.className,\n      labelPosition = _a.labelPosition;\n    var statusMessage = ariaLabel;\n    var nativeProps = getNativeProps(this.props, divProperties, ['size']);\n    // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the\n    // ISpinnerStyleProps, we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType\n    // finally goes away we should delete this.\n    var styleSize = size;\n    if (styleSize === undefined && type !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n    }\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      size: styleSize,\n      className: className,\n      labelPosition: labelPosition\n    });\n    return React.createElement(\"div\", __assign({}, nativeProps, {\n      className: classNames.root\n    }), React.createElement(\"div\", {\n      className: classNames.circle\n    }), label && React.createElement(\"div\", {\n      className: classNames.label\n    }, label), statusMessage && React.createElement(\"div\", {\n      role: \"status\",\n      \"aria-live\": ariaLive\n    }, React.createElement(DelayedRender, null, React.createElement(\"div\", {\n      className: classNames.screenReaderText\n    }, statusMessage))));\n  };\n  SpinnerBase.defaultProps = {\n    size: SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom'\n  };\n  return SpinnerBase;\n}(React.Component);\nexport { SpinnerBase };","map":{"version":3,"names":["React","SpinnerType","SpinnerSize","classNamesFunction","DelayedRender","getNativeProps","divProperties","getClassNames","SpinnerBase","_super","__extends","prototype","render","_a","props","type","size","ariaLabel","ariaLive","styles","label","theme","className","labelPosition","statusMessage","nativeProps","styleSize","undefined","large","medium","classNames","createElement","__assign","root","circle","role","screenReaderText","defaultProps","Component"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/react/lib/components/src/components/Spinner/Spinner.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { SpinnerType, SpinnerSize } from './Spinner.types';\nimport { classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\nimport type { ISpinnerProps, ISpinnerStyleProps, ISpinnerStyles } from './Spinner.types';\n\nconst getClassNames = classNamesFunction<ISpinnerStyleProps, ISpinnerStyles>();\n\nexport class SpinnerBase extends React.Component<ISpinnerProps, any> {\n  public static defaultProps: ISpinnerProps = {\n    size: SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom',\n  };\n\n  public render() {\n    // eslint-disable-next-line deprecation/deprecation\n    const { type, size, ariaLabel, ariaLive, styles, label, theme, className, labelPosition } = this.props;\n    const statusMessage = ariaLabel;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['size']);\n\n    // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the\n    // ISpinnerStyleProps, we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType\n    // finally goes away we should delete this.\n    let styleSize = size;\n    if (styleSize === undefined && type !== undefined) {\n      // eslint-disable-next-line deprecation/deprecation\n      styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n    }\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      size: styleSize,\n      className,\n      labelPosition,\n    });\n\n    return (\n      <div {...nativeProps} className={classNames.root}>\n        <div className={classNames.circle} />\n        {label && <div className={classNames.label}>{label}</div>}\n        {statusMessage && (\n          <div role=\"status\" aria-live={ariaLive}>\n            <DelayedRender>\n              <div className={classNames.screenReaderText}>{statusMessage}</div>\n            </DelayedRender>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AAC1D,SAASC,kBAAkB,EAAEC,aAAa,EAAEC,cAAc,EAAEC,aAAa,QAAQ,iBAAiB;AAGlG,IAAMC,aAAa,GAAGJ,kBAAkB,EAAsC;AAE9E,IAAAK,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAAjC,SAAAD,YAAA;;EA2CA;EApCSA,WAAA,CAAAG,SAAA,CAAAC,MAAM,GAAb;IACE;IACM,IAAAC,EAAA,GAAsF,IAAI,CAACC,KAAK;MAA9FC,IAAI,GAAAF,EAAA,CAAAE,IAAA;MAAEC,IAAI,GAAAH,EAAA,CAAAG,IAAA;MAAEC,SAAS,GAAAJ,EAAA,CAAAI,SAAA;MAAEC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;MAAEC,MAAM,GAAAN,EAAA,CAAAM,MAAA;MAAEC,KAAK,GAAAP,EAAA,CAAAO,KAAA;MAAEC,KAAK,GAAAR,EAAA,CAAAQ,KAAA;MAAEC,SAAS,GAAAT,EAAA,CAAAS,SAAA;MAAEC,aAAa,GAAAV,EAAA,CAAAU,aAAe;IACtG,IAAMC,aAAa,GAAGP,SAAS;IAC/B,IAAMQ,WAAW,GAAGpB,cAAc,CAAuC,IAAI,CAACS,KAAK,EAAER,aAAa,EAAE,CAAC,MAAM,CAAC,CAAC;IAE7G;IACA;IACA;IACA,IAAIoB,SAAS,GAAGV,IAAI;IACpB,IAAIU,SAAS,KAAKC,SAAS,IAAIZ,IAAI,KAAKY,SAAS,EAAE;MACjD;MACAD,SAAS,GAAGX,IAAI,KAAKd,WAAW,CAAC2B,KAAK,GAAG1B,WAAW,CAAC0B,KAAK,GAAG1B,WAAW,CAAC2B,MAAM;;IAGjF,IAAMC,UAAU,GAAGvB,aAAa,CAACY,MAAO,EAAE;MACxCE,KAAK,EAAEA,KAAM;MACbL,IAAI,EAAEU,SAAS;MACfJ,SAAS,EAAAA,SAAA;MACTC,aAAa,EAAAA;KACd,CAAC;IAEF,OACEvB,KAAA,CAAA+B,aAAA,QAAAC,QAAA,KAASP,WAAW;MAAEH,SAAS,EAAEQ,UAAU,CAACG;IAAI,IAC9CjC,KAAA,CAAA+B,aAAA;MAAKT,SAAS,EAAEQ,UAAU,CAACI;IAAM,EAAI,EACpCd,KAAK,IAAIpB,KAAA,CAAA+B,aAAA;MAAKT,SAAS,EAAEQ,UAAU,CAACV;IAAK,GAAGA,KAAK,CAAO,EACxDI,aAAa,IACZxB,KAAA,CAAA+B,aAAA;MAAKI,IAAI,EAAC,QAAQ;MAAA,aAAYjB;IAAQ,GACpClB,KAAA,CAAA+B,aAAA,CAAC3B,aAAa,QACZJ,KAAA,CAAA+B,aAAA;MAAKT,SAAS,EAAEQ,UAAU,CAACM;IAAgB,GAAGZ,aAAa,CAAO,CACpD,CAEnB,CACG;EAEV,CAAC;EAzCahB,WAAA,CAAA6B,YAAY,GAAkB;IAC1CrB,IAAI,EAAEd,WAAW,CAAC2B,MAAM;IACxBX,QAAQ,EAAE,QAAQ;IAClBK,aAAa,EAAE;GAChB;EAsCH,OAAAf,WAAC;CAAA,CA3CgCR,KAAK,CAACsC,SAAS;SAAnC9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}