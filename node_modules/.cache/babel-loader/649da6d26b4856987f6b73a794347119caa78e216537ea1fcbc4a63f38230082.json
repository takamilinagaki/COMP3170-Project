{"ast":null,"code":"import { extractStyleParts } from './extractStyleParts';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { styleToClassName } from './styleToClassName';\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  return mergeCss(args, getStyleOptions());\n}\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(args, options) {\n  var styleArgs = args instanceof Array ? args : [args];\n  var _a = extractStyleParts(styleArgs),\n    classes = _a.classes,\n    objects = _a.objects;\n  if (objects.length) {\n    classes.push(styleToClassName(options || {}, objects));\n  }\n  return classes.join(' ');\n}","map":{"version":3,"names":["extractStyleParts","getStyleOptions","styleToClassName","mergeStyles","args","_i","arguments","length","mergeCss","options","styleArgs","Array","_a","classes","objects","push","join"],"sources":["/Users/jerrywuyongon/node_modules/@fluentui/merge-styles/src/mergeStyles.ts"],"sourcesContent":["import { extractStyleParts } from './extractStyleParts';\nimport { IStyle, IStyleBaseArray } from './IStyle';\nimport { IStyleOptions } from './IStyleOptions';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { styleToClassName } from './styleToClassName';\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string {\n  return mergeCss(args, getStyleOptions());\n}\n\n/**\n * Concatenation helper, which can merge class names together. Skips over falsey values.\n * Accepts a set of options that will be used when calculating styles.\n *\n * @public\n */\nexport function mergeCss(\n  args: (IStyle | IStyleBaseArray | false | null | undefined) | (IStyle | IStyleBaseArray | false | null | undefined)[],\n  options?: IStyleOptions,\n): string {\n  const styleArgs = args instanceof Array ? args : [args];\n  const { classes, objects } = extractStyleParts(styleArgs);\n\n  if (objects.length) {\n    classes.push(styleToClassName(options || {}, objects));\n  }\n\n  return classes.join(' ');\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qBAAqB;AAGvD,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD;;;;;AAKA,OAAM,SAAUC,WAAWA,CAAA;EAAC,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAgE,EAAhEA,EAAA,GAAAC,SAAA,CAAAC,MAAgE,EAAhEF,EAAA,EAAgE;IAAhED,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;EAC1B,OAAOG,QAAQ,CAACJ,IAAI,EAAEH,eAAe,EAAE,CAAC;AAC1C;AAEA;;;;;;AAMA,OAAM,SAAUO,QAAQA,CACtBJ,IAAqH,EACrHK,OAAuB;EAEvB,IAAMC,SAAS,GAAGN,IAAI,YAAYO,KAAK,GAAGP,IAAI,GAAG,CAACA,IAAI,CAAC;EACjD,IAAAQ,EAAA,GAAuBZ,iBAAiB,CAACU,SAAS,CAAC;IAAjDG,OAAO,GAAAD,EAAA,CAAAC,OAAA;IAAEC,OAAO,GAAAF,EAAA,CAAAE,OAAiC;EAEzD,IAAIA,OAAO,CAACP,MAAM,EAAE;IAClBM,OAAO,CAACE,IAAI,CAACb,gBAAgB,CAACO,OAAO,IAAI,EAAE,EAAEK,OAAO,CAAC,CAAC;;EAGxD,OAAOD,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}